{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/editor/contrib/dnd/dnd.js"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","hasTriggerModifier","e","altKey","ctrlKey","DragAndDropController","_super","editor","_this","call","_editor","_register","onMouseDown","_onEditorMouseDown","onMouseUp","_onEditorMouseUp","onMouseDrag","_onEditorMouseDrag","onMouseDrop","_onEditorMouseDrop","onKeyDown","onEditorKeyDown","onKeyUp","onEditorKeyUp","onDidBlurEditorWidget","onEditorBlur","_dndDecorationIds","_mouseDown","_modifierPressed","_dragSelection","_removeDecoration","getOption","updateOptions","mouseStyle","keyCode","TRIGGER_KEY_VALUE","mouseEvent","target","selections","getSelections","possibleSelections","filter","selection","position","containsPosition","length","event","showAt","_hitContent","_hitMargin","newCursorPosition_1","lineNumber","column","newSelections","shiftKey","primarySelection","getSelection","selectionStartLineNumber","selectionStartColumn","map","setSelections","getEndPosition","equals","getStartPosition","pushUndoStop","executeCommand","ID","newDecorations","range","options","_DECORATION_OPTIONS","deltaDecorations","revealPosition","type","dispose","register","className"],"mappings":"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","file":"js/chunk-vendors~af13ed60.79c624e9.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport './dnd.css';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { isMacintosh } from '../../../base/common/platform.js';\r\nimport { registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Position } from '../../common/core/position.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { DragAndDropCommand } from './dragAndDropCommand.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nfunction hasTriggerModifier(e) {\r\n    if (isMacintosh) {\r\n        return e.altKey;\r\n    }\r\n    else {\r\n        return e.ctrlKey;\r\n    }\r\n}\r\nvar DragAndDropController = /** @class */ (function (_super) {\r\n    __extends(DragAndDropController, _super);\r\n    function DragAndDropController(editor) {\r\n        var _this = _super.call(this) || this;\r\n        _this._editor = editor;\r\n        _this._register(_this._editor.onMouseDown(function (e) { return _this._onEditorMouseDown(e); }));\r\n        _this._register(_this._editor.onMouseUp(function (e) { return _this._onEditorMouseUp(e); }));\r\n        _this._register(_this._editor.onMouseDrag(function (e) { return _this._onEditorMouseDrag(e); }));\r\n        _this._register(_this._editor.onMouseDrop(function (e) { return _this._onEditorMouseDrop(e); }));\r\n        _this._register(_this._editor.onKeyDown(function (e) { return _this.onEditorKeyDown(e); }));\r\n        _this._register(_this._editor.onKeyUp(function (e) { return _this.onEditorKeyUp(e); }));\r\n        _this._register(_this._editor.onDidBlurEditorWidget(function () { return _this.onEditorBlur(); }));\r\n        _this._dndDecorationIds = [];\r\n        _this._mouseDown = false;\r\n        _this._modifierPressed = false;\r\n        _this._dragSelection = null;\r\n        return _this;\r\n    }\r\n    DragAndDropController.prototype.onEditorBlur = function () {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n    };\r\n    DragAndDropController.prototype.onEditorKeyDown = function (e) {\r\n        if (!this._editor.getOption(24 /* dragAndDrop */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = true;\r\n        }\r\n        if (this._mouseDown && hasTriggerModifier(e)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n    };\r\n    DragAndDropController.prototype.onEditorKeyUp = function (e) {\r\n        if (!this._editor.getOption(24 /* dragAndDrop */)) {\r\n            return;\r\n        }\r\n        if (hasTriggerModifier(e)) {\r\n            this._modifierPressed = false;\r\n        }\r\n        if (this._mouseDown && e.keyCode === DragAndDropController.TRIGGER_KEY_VALUE) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n    };\r\n    DragAndDropController.prototype._onEditorMouseDown = function (mouseEvent) {\r\n        this._mouseDown = true;\r\n    };\r\n    DragAndDropController.prototype._onEditorMouseUp = function (mouseEvent) {\r\n        this._mouseDown = false;\r\n        // Whenever users release the mouse, the drag and drop operation should finish and the cursor should revert to text.\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n    };\r\n    DragAndDropController.prototype._onEditorMouseDrag = function (mouseEvent) {\r\n        var target = mouseEvent.target;\r\n        if (this._dragSelection === null) {\r\n            var selections = this._editor.getSelections() || [];\r\n            var possibleSelections = selections.filter(function (selection) { return target.position && selection.containsPosition(target.position); });\r\n            if (possibleSelections.length === 1) {\r\n                this._dragSelection = possibleSelections[0];\r\n            }\r\n            else {\r\n                return;\r\n            }\r\n        }\r\n        if (hasTriggerModifier(mouseEvent.event)) {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'copy'\r\n            });\r\n        }\r\n        else {\r\n            this._editor.updateOptions({\r\n                mouseStyle: 'default'\r\n            });\r\n        }\r\n        if (target.position) {\r\n            if (this._dragSelection.containsPosition(target.position)) {\r\n                this._removeDecoration();\r\n            }\r\n            else {\r\n                this.showAt(target.position);\r\n            }\r\n        }\r\n    };\r\n    DragAndDropController.prototype._onEditorMouseDrop = function (mouseEvent) {\r\n        if (mouseEvent.target && (this._hitContent(mouseEvent.target) || this._hitMargin(mouseEvent.target)) && mouseEvent.target.position) {\r\n            var newCursorPosition_1 = new Position(mouseEvent.target.position.lineNumber, mouseEvent.target.position.column);\r\n            if (this._dragSelection === null) {\r\n                var newSelections = null;\r\n                if (mouseEvent.event.shiftKey) {\r\n                    var primarySelection = this._editor.getSelection();\r\n                    if (primarySelection) {\r\n                        var selectionStartLineNumber = primarySelection.selectionStartLineNumber, selectionStartColumn = primarySelection.selectionStartColumn;\r\n                        newSelections = [new Selection(selectionStartLineNumber, selectionStartColumn, newCursorPosition_1.lineNumber, newCursorPosition_1.column)];\r\n                    }\r\n                }\r\n                else {\r\n                    newSelections = (this._editor.getSelections() || []).map(function (selection) {\r\n                        if (selection.containsPosition(newCursorPosition_1)) {\r\n                            return new Selection(newCursorPosition_1.lineNumber, newCursorPosition_1.column, newCursorPosition_1.lineNumber, newCursorPosition_1.column);\r\n                        }\r\n                        else {\r\n                            return selection;\r\n                        }\r\n                    });\r\n                }\r\n                // Use `mouse` as the source instead of `api`.\r\n                this._editor.setSelections(newSelections || [], 'mouse');\r\n            }\r\n            else if (!this._dragSelection.containsPosition(newCursorPosition_1) ||\r\n                ((hasTriggerModifier(mouseEvent.event) ||\r\n                    this._modifierPressed) && (this._dragSelection.getEndPosition().equals(newCursorPosition_1) || this._dragSelection.getStartPosition().equals(newCursorPosition_1)) // we allow users to paste content beside the selection\r\n                )) {\r\n                this._editor.pushUndoStop();\r\n                this._editor.executeCommand(DragAndDropController.ID, new DragAndDropCommand(this._dragSelection, newCursorPosition_1, hasTriggerModifier(mouseEvent.event) || this._modifierPressed));\r\n                this._editor.pushUndoStop();\r\n            }\r\n        }\r\n        this._editor.updateOptions({\r\n            mouseStyle: 'text'\r\n        });\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n    };\r\n    DragAndDropController.prototype.showAt = function (position) {\r\n        var newDecorations = [{\r\n                range: new Range(position.lineNumber, position.column, position.lineNumber, position.column),\r\n                options: DragAndDropController._DECORATION_OPTIONS\r\n            }];\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, newDecorations);\r\n        this._editor.revealPosition(position, 1 /* Immediate */);\r\n    };\r\n    DragAndDropController.prototype._removeDecoration = function () {\r\n        this._dndDecorationIds = this._editor.deltaDecorations(this._dndDecorationIds, []);\r\n    };\r\n    DragAndDropController.prototype._hitContent = function (target) {\r\n        return target.type === 6 /* CONTENT_TEXT */ ||\r\n            target.type === 7 /* CONTENT_EMPTY */;\r\n    };\r\n    DragAndDropController.prototype._hitMargin = function (target) {\r\n        return target.type === 2 /* GUTTER_GLYPH_MARGIN */ ||\r\n            target.type === 3 /* GUTTER_LINE_NUMBERS */ ||\r\n            target.type === 4 /* GUTTER_LINE_DECORATIONS */;\r\n    };\r\n    DragAndDropController.prototype.dispose = function () {\r\n        this._removeDecoration();\r\n        this._dragSelection = null;\r\n        this._mouseDown = false;\r\n        this._modifierPressed = false;\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    DragAndDropController.ID = 'editor.contrib.dragAndDrop';\r\n    DragAndDropController.TRIGGER_KEY_VALUE = isMacintosh ? 6 /* Alt */ : 5 /* Ctrl */;\r\n    DragAndDropController._DECORATION_OPTIONS = ModelDecorationOptions.register({\r\n        className: 'dnd-target'\r\n    });\r\n    return DragAndDropController;\r\n}(Disposable));\r\nexport { DragAndDropController };\r\nregisterEditorContribution(DragAndDropController.ID, DragAndDropController);\r\n"],"sourceRoot":""}