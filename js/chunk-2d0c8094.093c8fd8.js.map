{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/objects.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/jsonLanguageTypes.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/parser/jsonParser.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/json.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonCompletion.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonHover.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonSchemaService.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonValidation.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/utils/colors.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/jsonDocumentSymbols.js","webpack:///./node_modules/monaco-editor/esm/vs/language/json/_deps/vscode-json-languageservice/services/configuration.js"],"names":["equals","one","other","undefined","Array","isArray","i","key","length","oneKeys","push","sort","otherKeys","isNumber","val","isDefined","isBoolean","isString","ErrorCode","ClientCapabilities","LATEST","textDocument","completion","completionItem","documentationFormat","Markdown","PlainText","commitCharactersSupport","EnumMatch","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__","this","constructor","prototype","create","localize","formats","errorMessage","pattern","ASTNodeImpl","parent","offset","defineProperty","get","enumerable","configurable","toString","type","_super","NullASTNodeImpl","_this","call","value","BooleanASTNodeImpl","boolValue","ArrayASTNodeImpl","items","NumberASTNodeImpl","isInteger","Number","NaN","StringASTNodeImpl","PropertyASTNodeImpl","colonOffset","valueNode","keyNode","ObjectASTNodeImpl","properties","asSchema","schema","SchemaCollector","focusOffset","exclude","schemas","add","merge","_a","apply","include","node","contains","newSub","NoOpSchemaCollector","instance","ValidationResult","problems","propertiesMatches","propertiesValueMatches","primaryValueMatches","enumValueMatch","enumValues","hasProblems","mergeAll","validationResults","_i","validationResults_1","validationResult","concat","mergeEnumValues","error","code","EnumValueMismatch","message","map","v","JSON","stringify","join","mergePropertyMatch","propertyValidationResult","compare","getNodeValue","getNodePath","includeRightBound","JSONDocument","root","syntaxErrors","comments","getNodeFromOffset","visit","visitor","doVisit_1","ctn","children","validate","range","positionAt","location","severity","getMatchingSchemas","matchingSchemas","_validateObjectNode","_validateArrayNode","_validateStringNode","_validateNumberNode","_validateNode","matchesType","some","Warning","allOf","subSchemaRef","notSchema","not","subValidationResult","subMatchingSchemas","_b","_c","ms","inverted","testAlternatives","alternatives","maxOneMatch","matches","bestMatch","alternatives_1","subSchema","compareResult","anyOf","oneOf","testBranch","testCondition","ifSchema","thenSchema","elseSchema","if","then","else","enum","_d","_e","e","const","deprecationMessage","getExclusiveLimit","limit","exclusive","getLimit","multipleOf","exclusiveMinimum","minimum","exclusiveMaximum","maximum","minLength","maxLength","regex","RegExp","test","patternErrorMessage","format","match","exec","subSchemas","index","itemValidationResult","item","additionalItems","itemSchema","containsSchema","doesContain","minItems","maxItems","uniqueItems","values_1","duplicates","lastIndexOf","seenKeys","unprocessedProperties","propertyNode","required","propertyName","propertyProcessed","prop","indexOf","splice","keys","propertySchema","child","patternProperties","_f","_g","propertyPattern","_h","_j","slice","additionalProperties","_k","unprocessedProperties_1","_l","unprocessedProperties_2","maxProperties","minProperties","dependencies","_m","_o","propertyDep","_p","propertyDep_1","requiredProp","propertyNames","_q","_r","f","stringifyObject","obj","indent","stringifyLiteral","newIndent","result","startsWith","haystack","needle","endsWith","diff","convertSimple2RegExpPattern","replace","valueCommitCharacters","propertyCommitCharacters","JSONCompletion","schemaService","contributions","promiseConstructor","clientCapabilities","Promise","templateVarIdCounter","doResolve","resolveCompletion","resolver","resolve","doComplete","document","position","doc","isIncomplete","text","getText","offsetAt","isInComment","ch","currentWord","getCurrentWord","overwriteRange","overwriteStart","supportsCommitCharacters","proposed","collector","suggestion","label","existing","documentation","shortendedLabel","substr","trim","textEdit","insertText","commitCharacters","kind","Property","setAsIncomplete","console","log","getNumberOfProposals","getSchemaForResource","uri","collectionPromises","addValue","currentKey","currentProperty","forEach","separatorAfter_1","evaluateSeparatorAfter","end","getPropertyCompletions","getSchemaLessPropertyCompletions","location_1","contribution","collectPromise","collectPropertyCompletions","charAt","getLabelForValue","getInsertTextForProperty","insertTextFormat","Snippet","types","getValueCompletions","getSchemaLessValueCompletions","getContributedValueCompletions","all","offsetForSeparator","separatorAfter","addFillerValueCompletions","s","schemaProperties_1","doNotSuggest","proposal","filterText","getFilterTextForValue","fromMarkup","markdownDescription","description","command","title","collectCompletionsForSimilarObject","getInsertTextForValue","parentKey_1","n","getSuggestionKind","collectSuggestionsForValues","getLabelTextForMatchingNode","getInsertTextForMatchingNode","addBooleanValueCompletion","parentKey_2","addDollarSchemaCompletions","parentKey_3","parentKey","valueNode_1","separatorAfter_2","findItemAtOffset","addSchemaValueCompletions","addNullValueCompletion","parentKey_4","location_2","collectValueCompletions","collectDefaultCompletions","addEnumValueCompletions","addDefaultValueCompletions","collectTypes","arrayDepth","hasProposals","default","detail","examples","example","defaultSnippets","body","getInsertTextForSnippetValue","getFilterTextForSnippetValue","getLabelForSnippetValue","bodyText","prefix","suffix","split","enm","markdownEnumDescriptions","doesSupportMarkdown","enumDescriptions","t","getInsertTextForGuessedValue","schemaIds","getRegisteredSchemaIds","schemaId","Module","getInsertTextForPlainText","replacer","snippetValue","array","Value","content","propertyText","resultText","nValueProposals","substring","scanner","setPosition","token","scan","getTokenOffset","getTokenLength","start","markupString","supportsMarkdown","doesSupportsCommitCharacters","JSONHover","promise","doHover","hoverRangeNode","hoverRange","createHover","contents","getInfoContribution","htmlContent","title_1","markdownDescription_1","markdownEnumValueDescription_1","enumValue_1","every","toMarkdown","idx","toMarkdownCodeBlock","plain","res","FilePatternAssociation","patternRegExp","addSchema","id","matchesPattern","fileName","getSchemas","SchemaHandle","service","url","unresolvedSchemaContent","unresolvedSchema","UnresolvedSchema","getUnresolvedSchema","loadSchema","getResolvedSchema","resolvedSchema","unresolved","resolveSchemaContent","clearSchema","errors","ResolvedSchema","getSection","path","getSectionRecursive","next","shift","parseInt","isNaN","JSONSchemaService","requestService","contextService","callOnDispose","contributionSchemas","contributionAssociations","schemasById","filePatternAssociations","filePatternAssociationById","registeredSchemasIds","filter","scheme","parse","dispose","pop","onResourceChange","hasChanges","normalizeId","toWalk","curr","handle","setSchemaContributions","schemaContributions","normalizedId","addSchemaHandle","schemaAssociations","associations","fpa","getOrAddFilePatternAssociation","associations_1","schemaHandle","getOrAddSchemaHandle","registerExternalSchema","filePatterns","filePatterns_1","clearExternalSchemas","toDisplayString","schemaContent","jsonErrors","errorSplit","schemaToResolve","schemaURL","resolveErrors","$schema","findSection","current","part","target","sourceRoot","sourceURI","section","resolveExternalLink","linkPath","parentSchemaURL","parentSchemaDependencies","resolveRelativePath","referencedHandle","loc","resolveRefs","parentSchema","seen","openPromises","collectEntries","entries","arguments","entries_1","entry","collectMapEntries","maps","maps_1","collectArrayEntries","arrays","arrays_1","array_1","handleRef","seenRefs","$ref","ref","segments","definitions","_","resource","schemaProperties","schemeId","createCombinedSchema","combinedSchemaId","encodeURIComponent","combinedSchema","fsPath","idCounter","JSONValidation","jsonSchemaService","validationEnabled","configure","raw","commentSeverity","allowComments","Error","doValidation","jsonDocument","documentSettings","diagnostics","added","addProblem","problem","signature","line","character","getDiagnostics","trailingCommaSeverity","toDiagnosticSeverity","trailingCommas","astRoot","property","SchemaResolveError","semanticErrors","schemaAllowsComments","schemaAllowsTrailingCommas","TrailingComma","message_1","c","CommentNotPermitted","schemaRef","allow","allowTrailingCommas","severityLevel","Digit0","Digit9","A","a","hexDigit","charCode","colorFromHex","red","charCodeAt","green","blue","alpha","JSONDocumentSymbols","findDocumentSymbols","context","resultLimit","MAX_VALUE","resourceString","toLowerCase","result_1","getRange","name","Function","onResultLimitExceeded","toVisit","containerName","nextToVisit","limitExceeded","collectOutlineEntries","childContainerName","getKeyLabel","getSymbolKind","findDocumentSymbols2","result_2","selectionRange","String","symbol","nodeType","Boolean","Variable","findDocumentColors","visitedNode","matchingSchemas_1","nodeId","color","getColorPresentations","red256","Math","round","green256","blue256","toTwoDigitHex","r","descriptions","$id","$comment","readOnly","contentMediaType","contentEncoding","schemaName","propertyObject"],"mappings":"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","file":"js/chunk-2d0c8094.093c8fd8.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function equals(one, other) {\n    if (one === other) {\n        return true;\n    }\n    if (one === null || one === undefined || other === null || other === undefined) {\n        return false;\n    }\n    if (typeof one !== typeof other) {\n        return false;\n    }\n    if (typeof one !== 'object') {\n        return false;\n    }\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\n        return false;\n    }\n    var i, key;\n    if (Array.isArray(one)) {\n        if (one.length !== other.length) {\n            return false;\n        }\n        for (i = 0; i < one.length; i++) {\n            if (!equals(one[i], other[i])) {\n                return false;\n            }\n        }\n    }\n    else {\n        var oneKeys = [];\n        for (key in one) {\n            oneKeys.push(key);\n        }\n        oneKeys.sort();\n        var otherKeys = [];\n        for (key in other) {\n            otherKeys.push(key);\n        }\n        otherKeys.sort();\n        if (!equals(oneKeys, otherKeys)) {\n            return false;\n        }\n        for (i = 0; i < oneKeys.length; i++) {\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nexport function isNumber(val) {\n    return typeof val === 'number';\n}\nexport function isDefined(val) {\n    return typeof val !== 'undefined';\n}\nexport function isBoolean(val) {\n    return typeof val === 'boolean';\n}\nexport function isString(val) {\n    return typeof val === 'string';\n}\n","import { MarkupKind } from './../vscode-languageserver-types/main.js';\nexport { TextDocument } from './../vscode-languageserver-textdocument/lib/esm/main.js';\nexport * from './../vscode-languageserver-types/main.js';\n/**\n * Error codes used by diagnostics\n */\nexport var ErrorCode;\n(function (ErrorCode) {\n    ErrorCode[ErrorCode[\"Undefined\"] = 0] = \"Undefined\";\n    ErrorCode[ErrorCode[\"EnumValueMismatch\"] = 1] = \"EnumValueMismatch\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfComment\"] = 257] = \"UnexpectedEndOfComment\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfString\"] = 258] = \"UnexpectedEndOfString\";\n    ErrorCode[ErrorCode[\"UnexpectedEndOfNumber\"] = 259] = \"UnexpectedEndOfNumber\";\n    ErrorCode[ErrorCode[\"InvalidUnicode\"] = 260] = \"InvalidUnicode\";\n    ErrorCode[ErrorCode[\"InvalidEscapeCharacter\"] = 261] = \"InvalidEscapeCharacter\";\n    ErrorCode[ErrorCode[\"InvalidCharacter\"] = 262] = \"InvalidCharacter\";\n    ErrorCode[ErrorCode[\"PropertyExpected\"] = 513] = \"PropertyExpected\";\n    ErrorCode[ErrorCode[\"CommaExpected\"] = 514] = \"CommaExpected\";\n    ErrorCode[ErrorCode[\"ColonExpected\"] = 515] = \"ColonExpected\";\n    ErrorCode[ErrorCode[\"ValueExpected\"] = 516] = \"ValueExpected\";\n    ErrorCode[ErrorCode[\"CommaOrCloseBacketExpected\"] = 517] = \"CommaOrCloseBacketExpected\";\n    ErrorCode[ErrorCode[\"CommaOrCloseBraceExpected\"] = 518] = \"CommaOrCloseBraceExpected\";\n    ErrorCode[ErrorCode[\"TrailingComma\"] = 519] = \"TrailingComma\";\n    ErrorCode[ErrorCode[\"DuplicateKey\"] = 520] = \"DuplicateKey\";\n    ErrorCode[ErrorCode[\"CommentNotPermitted\"] = 521] = \"CommentNotPermitted\";\n    ErrorCode[ErrorCode[\"SchemaResolveError\"] = 768] = \"SchemaResolveError\";\n})(ErrorCode || (ErrorCode = {}));\nexport var ClientCapabilities;\n(function (ClientCapabilities) {\n    ClientCapabilities.LATEST = {\n        textDocument: {\n            completion: {\n                completionItem: {\n                    documentationFormat: [MarkupKind.Markdown, MarkupKind.PlainText],\n                    commitCharactersSupport: true\n                }\n            }\n        }\n    };\n})(ClientCapabilities || (ClientCapabilities = {}));\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as Json from './../../jsonc-parser/main.js';\nimport { isNumber, equals, isBoolean, isString, isDefined } from '../utils/objects.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar formats = {\n    'color-hex': { errorMessage: localize('colorHexFormatWarning', 'Invalid color format. Use #RGB, #RGBA, #RRGGBB or #RRGGBBAA.'), pattern: /^#([0-9A-Fa-f]{3,4}|([0-9A-Fa-f]{2}){3,4})$/ },\n    'date-time': { errorMessage: localize('dateTimeFormatWarning', 'String is not a RFC3339 date-time.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])T([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'date': { errorMessage: localize('dateFormatWarning', 'String is not a RFC3339 date.'), pattern: /^(\\d{4})-(0[1-9]|1[0-2])-(0[1-9]|[12][0-9]|3[01])$/i },\n    'time': { errorMessage: localize('timeFormatWarning', 'String is not a RFC3339 time.'), pattern: /^([01][0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9]|60)(\\.[0-9]+)?(Z|(\\+|-)([01][0-9]|2[0-3]):([0-5][0-9]))$/i },\n    'email': { errorMessage: localize('emailFormatWarning', 'String is not an e-mail address.'), pattern: /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/ }\n};\nvar ASTNodeImpl = /** @class */ (function () {\n    function ASTNodeImpl(parent, offset, length) {\n        this.offset = offset;\n        this.length = length;\n        this.parent = parent;\n    }\n    Object.defineProperty(ASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return [];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ASTNodeImpl.prototype.toString = function () {\n        return 'type: ' + this.type + ' (' + this.offset + '/' + this.length + ')' + (this.parent ? ' parent: {' + this.parent.toString() + '}' : '');\n    };\n    return ASTNodeImpl;\n}());\nexport { ASTNodeImpl };\nvar NullASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NullASTNodeImpl, _super);\n    function NullASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'null';\n        _this.value = null;\n        return _this;\n    }\n    return NullASTNodeImpl;\n}(ASTNodeImpl));\nexport { NullASTNodeImpl };\nvar BooleanASTNodeImpl = /** @class */ (function (_super) {\n    __extends(BooleanASTNodeImpl, _super);\n    function BooleanASTNodeImpl(parent, boolValue, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'boolean';\n        _this.value = boolValue;\n        return _this;\n    }\n    return BooleanASTNodeImpl;\n}(ASTNodeImpl));\nexport { BooleanASTNodeImpl };\nvar ArrayASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ArrayASTNodeImpl, _super);\n    function ArrayASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'array';\n        _this.items = [];\n        return _this;\n    }\n    Object.defineProperty(ArrayASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.items;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ArrayASTNodeImpl;\n}(ASTNodeImpl));\nexport { ArrayASTNodeImpl };\nvar NumberASTNodeImpl = /** @class */ (function (_super) {\n    __extends(NumberASTNodeImpl, _super);\n    function NumberASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'number';\n        _this.isInteger = true;\n        _this.value = Number.NaN;\n        return _this;\n    }\n    return NumberASTNodeImpl;\n}(ASTNodeImpl));\nexport { NumberASTNodeImpl };\nvar StringASTNodeImpl = /** @class */ (function (_super) {\n    __extends(StringASTNodeImpl, _super);\n    function StringASTNodeImpl(parent, offset, length) {\n        var _this = _super.call(this, parent, offset, length) || this;\n        _this.type = 'string';\n        _this.value = '';\n        return _this;\n    }\n    return StringASTNodeImpl;\n}(ASTNodeImpl));\nexport { StringASTNodeImpl };\nvar PropertyASTNodeImpl = /** @class */ (function (_super) {\n    __extends(PropertyASTNodeImpl, _super);\n    function PropertyASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'property';\n        _this.colonOffset = -1;\n        return _this;\n    }\n    Object.defineProperty(PropertyASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.valueNode ? [this.keyNode, this.valueNode] : [this.keyNode];\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return PropertyASTNodeImpl;\n}(ASTNodeImpl));\nexport { PropertyASTNodeImpl };\nvar ObjectASTNodeImpl = /** @class */ (function (_super) {\n    __extends(ObjectASTNodeImpl, _super);\n    function ObjectASTNodeImpl(parent, offset) {\n        var _this = _super.call(this, parent, offset) || this;\n        _this.type = 'object';\n        _this.properties = [];\n        return _this;\n    }\n    Object.defineProperty(ObjectASTNodeImpl.prototype, \"children\", {\n        get: function () {\n            return this.properties;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return ObjectASTNodeImpl;\n}(ASTNodeImpl));\nexport { ObjectASTNodeImpl };\nexport function asSchema(schema) {\n    if (isBoolean(schema)) {\n        return schema ? {} : { \"not\": {} };\n    }\n    return schema;\n}\nexport var EnumMatch;\n(function (EnumMatch) {\n    EnumMatch[EnumMatch[\"Key\"] = 0] = \"Key\";\n    EnumMatch[EnumMatch[\"Enum\"] = 1] = \"Enum\";\n})(EnumMatch || (EnumMatch = {}));\nvar SchemaCollector = /** @class */ (function () {\n    function SchemaCollector(focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        if (exclude === void 0) { exclude = null; }\n        this.focusOffset = focusOffset;\n        this.exclude = exclude;\n        this.schemas = [];\n    }\n    SchemaCollector.prototype.add = function (schema) {\n        this.schemas.push(schema);\n    };\n    SchemaCollector.prototype.merge = function (other) {\n        var _a;\n        (_a = this.schemas).push.apply(_a, other.schemas);\n    };\n    SchemaCollector.prototype.include = function (node) {\n        return (this.focusOffset === -1 || contains(node, this.focusOffset)) && (node !== this.exclude);\n    };\n    SchemaCollector.prototype.newSub = function () {\n        return new SchemaCollector(-1, this.exclude);\n    };\n    return SchemaCollector;\n}());\nvar NoOpSchemaCollector = /** @class */ (function () {\n    function NoOpSchemaCollector() {\n    }\n    Object.defineProperty(NoOpSchemaCollector.prototype, \"schemas\", {\n        get: function () { return []; },\n        enumerable: true,\n        configurable: true\n    });\n    NoOpSchemaCollector.prototype.add = function (schema) { };\n    NoOpSchemaCollector.prototype.merge = function (other) { };\n    NoOpSchemaCollector.prototype.include = function (node) { return true; };\n    NoOpSchemaCollector.prototype.newSub = function () { return this; };\n    NoOpSchemaCollector.instance = new NoOpSchemaCollector();\n    return NoOpSchemaCollector;\n}());\nvar ValidationResult = /** @class */ (function () {\n    function ValidationResult() {\n        this.problems = [];\n        this.propertiesMatches = 0;\n        this.propertiesValueMatches = 0;\n        this.primaryValueMatches = 0;\n        this.enumValueMatch = false;\n        this.enumValues = null;\n    }\n    ValidationResult.prototype.hasProblems = function () {\n        return !!this.problems.length;\n    };\n    ValidationResult.prototype.mergeAll = function (validationResults) {\n        for (var _i = 0, validationResults_1 = validationResults; _i < validationResults_1.length; _i++) {\n            var validationResult = validationResults_1[_i];\n            this.merge(validationResult);\n        }\n    };\n    ValidationResult.prototype.merge = function (validationResult) {\n        this.problems = this.problems.concat(validationResult.problems);\n    };\n    ValidationResult.prototype.mergeEnumValues = function (validationResult) {\n        if (!this.enumValueMatch && !validationResult.enumValueMatch && this.enumValues && validationResult.enumValues) {\n            this.enumValues = this.enumValues.concat(validationResult.enumValues);\n            for (var _i = 0, _a = this.problems; _i < _a.length; _i++) {\n                var error = _a[_i];\n                if (error.code === ErrorCode.EnumValueMismatch) {\n                    error.message = localize('enumWarning', 'Value is not accepted. Valid values: {0}.', this.enumValues.map(function (v) { return JSON.stringify(v); }).join(', '));\n                }\n            }\n        }\n    };\n    ValidationResult.prototype.mergePropertyMatch = function (propertyValidationResult) {\n        this.merge(propertyValidationResult);\n        this.propertiesMatches++;\n        if (propertyValidationResult.enumValueMatch || !propertyValidationResult.hasProblems() && propertyValidationResult.propertiesMatches) {\n            this.propertiesValueMatches++;\n        }\n        if (propertyValidationResult.enumValueMatch && propertyValidationResult.enumValues && propertyValidationResult.enumValues.length === 1) {\n            this.primaryValueMatches++;\n        }\n    };\n    ValidationResult.prototype.compare = function (other) {\n        var hasProblems = this.hasProblems();\n        if (hasProblems !== other.hasProblems()) {\n            return hasProblems ? -1 : 1;\n        }\n        if (this.enumValueMatch !== other.enumValueMatch) {\n            return other.enumValueMatch ? -1 : 1;\n        }\n        if (this.primaryValueMatches !== other.primaryValueMatches) {\n            return this.primaryValueMatches - other.primaryValueMatches;\n        }\n        if (this.propertiesValueMatches !== other.propertiesValueMatches) {\n            return this.propertiesValueMatches - other.propertiesValueMatches;\n        }\n        return this.propertiesMatches - other.propertiesMatches;\n    };\n    return ValidationResult;\n}());\nexport { ValidationResult };\nexport function newJSONDocument(root, diagnostics) {\n    if (diagnostics === void 0) { diagnostics = []; }\n    return new JSONDocument(root, diagnostics, []);\n}\nexport function getNodeValue(node) {\n    return Json.getNodeValue(node);\n}\nexport function getNodePath(node) {\n    return Json.getNodePath(node);\n}\nexport function contains(node, offset, includeRightBound) {\n    if (includeRightBound === void 0) { includeRightBound = false; }\n    return offset >= node.offset && offset < (node.offset + node.length) || includeRightBound && offset === (node.offset + node.length);\n}\nvar JSONDocument = /** @class */ (function () {\n    function JSONDocument(root, syntaxErrors, comments) {\n        if (syntaxErrors === void 0) { syntaxErrors = []; }\n        if (comments === void 0) { comments = []; }\n        this.root = root;\n        this.syntaxErrors = syntaxErrors;\n        this.comments = comments;\n    }\n    JSONDocument.prototype.getNodeFromOffset = function (offset, includeRightBound) {\n        if (includeRightBound === void 0) { includeRightBound = false; }\n        if (this.root) {\n            return Json.findNodeAtOffset(this.root, offset, includeRightBound);\n        }\n        return void 0;\n    };\n    JSONDocument.prototype.visit = function (visitor) {\n        if (this.root) {\n            var doVisit_1 = function (node) {\n                var ctn = visitor(node);\n                var children = node.children;\n                if (Array.isArray(children)) {\n                    for (var i = 0; i < children.length && ctn; i++) {\n                        ctn = doVisit_1(children[i]);\n                    }\n                }\n                return ctn;\n            };\n            doVisit_1(this.root);\n        }\n    };\n    JSONDocument.prototype.validate = function (textDocument, schema) {\n        if (this.root && schema) {\n            var validationResult = new ValidationResult();\n            validate(this.root, schema, validationResult, NoOpSchemaCollector.instance);\n            return validationResult.problems.map(function (p) {\n                var range = Range.create(textDocument.positionAt(p.location.offset), textDocument.positionAt(p.location.offset + p.location.length));\n                return Diagnostic.create(range, p.message, p.severity, p.code);\n            });\n        }\n        return null;\n    };\n    JSONDocument.prototype.getMatchingSchemas = function (schema, focusOffset, exclude) {\n        if (focusOffset === void 0) { focusOffset = -1; }\n        if (exclude === void 0) { exclude = null; }\n        var matchingSchemas = new SchemaCollector(focusOffset, exclude);\n        if (this.root && schema) {\n            validate(this.root, schema, new ValidationResult(), matchingSchemas);\n        }\n        return matchingSchemas.schemas;\n    };\n    return JSONDocument;\n}());\nexport { JSONDocument };\nfunction validate(node, schema, validationResult, matchingSchemas) {\n    if (!node || !matchingSchemas.include(node)) {\n        return;\n    }\n    switch (node.type) {\n        case 'object':\n            _validateObjectNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'array':\n            _validateArrayNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'string':\n            _validateStringNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'number':\n            _validateNumberNode(node, schema, validationResult, matchingSchemas);\n            break;\n        case 'property':\n            return validate(node.valueNode, schema, validationResult, matchingSchemas);\n    }\n    _validateNode();\n    matchingSchemas.add({ node: node, schema: schema });\n    function _validateNode() {\n        function matchesType(type) {\n            return node.type === type || (type === 'integer' && node.type === 'number' && node.isInteger);\n        }\n        if (Array.isArray(schema.type)) {\n            if (!schema.type.some(matchesType)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeArrayMismatchWarning', 'Incorrect type. Expected one of {0}.', schema.type.join(', '))\n                });\n            }\n        }\n        else if (schema.type) {\n            if (!matchesType(schema.type)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('typeMismatchWarning', 'Incorrect type. Expected \"{0}\".', schema.type)\n                });\n            }\n        }\n        if (Array.isArray(schema.allOf)) {\n            for (var _i = 0, _a = schema.allOf; _i < _a.length; _i++) {\n                var subSchemaRef = _a[_i];\n                validate(node, asSchema(subSchemaRef), validationResult, matchingSchemas);\n            }\n        }\n        var notSchema = asSchema(schema.not);\n        if (notSchema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, notSchema, subValidationResult, subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('notSchemaWarning', \"Matches a schema that is not allowed.\")\n                });\n            }\n            for (var _b = 0, _c = subMatchingSchemas.schemas; _b < _c.length; _b++) {\n                var ms = _c[_b];\n                ms.inverted = !ms.inverted;\n                matchingSchemas.add(ms);\n            }\n        }\n        var testAlternatives = function (alternatives, maxOneMatch) {\n            var matches = [];\n            // remember the best match that is used for error messages\n            var bestMatch = null;\n            for (var _i = 0, alternatives_1 = alternatives; _i < alternatives_1.length; _i++) {\n                var subSchemaRef = alternatives_1[_i];\n                var subSchema = asSchema(subSchemaRef);\n                var subValidationResult = new ValidationResult();\n                var subMatchingSchemas = matchingSchemas.newSub();\n                validate(node, subSchema, subValidationResult, subMatchingSchemas);\n                if (!subValidationResult.hasProblems()) {\n                    matches.push(subSchema);\n                }\n                if (!bestMatch) {\n                    bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                }\n                else {\n                    if (!maxOneMatch && !subValidationResult.hasProblems() && !bestMatch.validationResult.hasProblems()) {\n                        // no errors, both are equally good matches\n                        bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                        bestMatch.validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n                        bestMatch.validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n                    }\n                    else {\n                        var compareResult = subValidationResult.compare(bestMatch.validationResult);\n                        if (compareResult > 0) {\n                            // our node is the best matching so far\n                            bestMatch = { schema: subSchema, validationResult: subValidationResult, matchingSchemas: subMatchingSchemas };\n                        }\n                        else if (compareResult === 0) {\n                            // there's already a best matching but we are as good\n                            bestMatch.matchingSchemas.merge(subMatchingSchemas);\n                            bestMatch.validationResult.mergeEnumValues(subValidationResult);\n                        }\n                    }\n                }\n            }\n            if (matches.length > 1 && maxOneMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: 1 },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('oneOfWarning', \"Matches multiple schemas when only one must validate.\")\n                });\n            }\n            if (bestMatch !== null) {\n                validationResult.merge(bestMatch.validationResult);\n                validationResult.propertiesMatches += bestMatch.validationResult.propertiesMatches;\n                validationResult.propertiesValueMatches += bestMatch.validationResult.propertiesValueMatches;\n                matchingSchemas.merge(bestMatch.matchingSchemas);\n            }\n            return matches.length;\n        };\n        if (Array.isArray(schema.anyOf)) {\n            testAlternatives(schema.anyOf, false);\n        }\n        if (Array.isArray(schema.oneOf)) {\n            testAlternatives(schema.oneOf, true);\n        }\n        var testBranch = function (schema) {\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, asSchema(schema), subValidationResult, subMatchingSchemas);\n            validationResult.merge(subValidationResult);\n            validationResult.propertiesMatches += subValidationResult.propertiesMatches;\n            validationResult.propertiesValueMatches += subValidationResult.propertiesValueMatches;\n            matchingSchemas.merge(subMatchingSchemas);\n        };\n        var testCondition = function (ifSchema, thenSchema, elseSchema) {\n            var subSchema = asSchema(ifSchema);\n            var subValidationResult = new ValidationResult();\n            var subMatchingSchemas = matchingSchemas.newSub();\n            validate(node, subSchema, subValidationResult, subMatchingSchemas);\n            matchingSchemas.merge(subMatchingSchemas);\n            if (!subValidationResult.hasProblems()) {\n                if (thenSchema) {\n                    testBranch(thenSchema);\n                }\n            }\n            else if (elseSchema) {\n                testBranch(elseSchema);\n            }\n        };\n        var ifSchema = asSchema(schema.if);\n        if (ifSchema) {\n            testCondition(ifSchema, asSchema(schema.then), asSchema(schema.else));\n        }\n        if (Array.isArray(schema.enum)) {\n            var val = getNodeValue(node);\n            var enumValueMatch = false;\n            for (var _d = 0, _e = schema.enum; _d < _e.length; _d++) {\n                var e = _e[_d];\n                if (equals(val, e)) {\n                    enumValueMatch = true;\n                    break;\n                }\n            }\n            validationResult.enumValues = schema.enum;\n            validationResult.enumValueMatch = enumValueMatch;\n            if (!enumValueMatch) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('enumWarning', 'Value is not accepted. Valid values: {0}.', schema.enum.map(function (v) { return JSON.stringify(v); }).join(', '))\n                });\n            }\n        }\n        if (isDefined(schema.const)) {\n            var val = getNodeValue(node);\n            if (!equals(val, schema.const)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    code: ErrorCode.EnumValueMismatch,\n                    message: schema.errorMessage || localize('constWarning', 'Value must be {0}.', JSON.stringify(schema.const))\n                });\n                validationResult.enumValueMatch = false;\n            }\n            else {\n                validationResult.enumValueMatch = true;\n            }\n            validationResult.enumValues = [schema.const];\n        }\n        if (schema.deprecationMessage && node.parent) {\n            validationResult.problems.push({\n                location: { offset: node.parent.offset, length: node.parent.length },\n                severity: DiagnosticSeverity.Warning,\n                message: schema.deprecationMessage\n            });\n        }\n    }\n    function _validateNumberNode(node, schema, validationResult, matchingSchemas) {\n        var val = node.value;\n        if (isNumber(schema.multipleOf)) {\n            if (val % schema.multipleOf !== 0) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('multipleOfWarning', 'Value is not divisible by {0}.', schema.multipleOf)\n                });\n            }\n        }\n        function getExclusiveLimit(limit, exclusive) {\n            if (isNumber(exclusive)) {\n                return exclusive;\n            }\n            if (isBoolean(exclusive) && exclusive) {\n                return limit;\n            }\n            return void 0;\n        }\n        function getLimit(limit, exclusive) {\n            if (!isBoolean(exclusive) || !exclusive) {\n                return limit;\n            }\n            return void 0;\n        }\n        var exclusiveMinimum = getExclusiveLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(exclusiveMinimum) && val <= exclusiveMinimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMinimumWarning', 'Value is below the exclusive minimum of {0}.', exclusiveMinimum)\n            });\n        }\n        var exclusiveMaximum = getExclusiveLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(exclusiveMaximum) && val >= exclusiveMaximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('exclusiveMaximumWarning', 'Value is above the exclusive maximum of {0}.', exclusiveMaximum)\n            });\n        }\n        var minimum = getLimit(schema.minimum, schema.exclusiveMinimum);\n        if (isNumber(minimum) && val < minimum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minimumWarning', 'Value is below the minimum of {0}.', minimum)\n            });\n        }\n        var maximum = getLimit(schema.maximum, schema.exclusiveMaximum);\n        if (isNumber(maximum) && val > maximum) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maximumWarning', 'Value is above the maximum of {0}.', maximum)\n            });\n        }\n    }\n    function _validateStringNode(node, schema, validationResult, matchingSchemas) {\n        if (isNumber(schema.minLength) && node.value.length < schema.minLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minLengthWarning', 'String is shorter than the minimum length of {0}.', schema.minLength)\n            });\n        }\n        if (isNumber(schema.maxLength) && node.value.length > schema.maxLength) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxLengthWarning', 'String is longer than the maximum length of {0}.', schema.maxLength)\n            });\n        }\n        if (isString(schema.pattern)) {\n            var regex = new RegExp(schema.pattern);\n            if (!regex.test(node.value)) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.patternErrorMessage || schema.errorMessage || localize('patternWarning', 'String does not match the pattern of \"{0}\".', schema.pattern)\n                });\n            }\n        }\n        if (schema.format) {\n            switch (schema.format) {\n                case 'uri':\n                case 'uri-reference':\n                    {\n                        var errorMessage = void 0;\n                        if (!node.value) {\n                            errorMessage = localize('uriEmpty', 'URI expected.');\n                        }\n                        else {\n                            var match = /^(([^:/?#]+?):)?(\\/\\/([^/?#]*))?([^?#]*)(\\?([^#]*))?(#(.*))?/.exec(node.value);\n                            if (!match) {\n                                errorMessage = localize('uriMissing', 'URI is expected.');\n                            }\n                            else if (!match[2] && schema.format === 'uri') {\n                                errorMessage = localize('uriSchemeMissing', 'URI with a scheme is expected.');\n                            }\n                        }\n                        if (errorMessage) {\n                            validationResult.problems.push({\n                                location: { offset: node.offset, length: node.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.patternErrorMessage || schema.errorMessage || localize('uriFormatWarning', 'String is not a URI: {0}', errorMessage)\n                            });\n                        }\n                    }\n                    break;\n                case 'color-hex':\n                case 'date-time':\n                case 'date':\n                case 'time':\n                case 'email':\n                    var format = formats[schema.format];\n                    if (!node.value || !format.pattern.exec(node.value)) {\n                        validationResult.problems.push({\n                            location: { offset: node.offset, length: node.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.patternErrorMessage || schema.errorMessage || format.errorMessage\n                        });\n                    }\n                default:\n            }\n        }\n    }\n    function _validateArrayNode(node, schema, validationResult, matchingSchemas) {\n        if (Array.isArray(schema.items)) {\n            var subSchemas = schema.items;\n            for (var index = 0; index < subSchemas.length; index++) {\n                var subSchemaRef = subSchemas[index];\n                var subSchema = asSchema(subSchemaRef);\n                var itemValidationResult = new ValidationResult();\n                var item = node.items[index];\n                if (item) {\n                    validate(item, subSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n                else if (node.items.length >= subSchemas.length) {\n                    validationResult.propertiesValueMatches++;\n                }\n            }\n            if (node.items.length > subSchemas.length) {\n                if (typeof schema.additionalItems === 'object') {\n                    for (var i = subSchemas.length; i < node.items.length; i++) {\n                        var itemValidationResult = new ValidationResult();\n                        validate(node.items[i], schema.additionalItems, itemValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(itemValidationResult);\n                    }\n                }\n                else if (schema.additionalItems === false) {\n                    validationResult.problems.push({\n                        location: { offset: node.offset, length: node.length },\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('additionalItemsWarning', 'Array has too many items according to schema. Expected {0} or fewer.', subSchemas.length)\n                    });\n                }\n            }\n        }\n        else {\n            var itemSchema = asSchema(schema.items);\n            if (itemSchema) {\n                for (var _i = 0, _a = node.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    var itemValidationResult = new ValidationResult();\n                    validate(item, itemSchema, itemValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(itemValidationResult);\n                }\n            }\n        }\n        var containsSchema = asSchema(schema.contains);\n        if (containsSchema) {\n            var doesContain = node.items.some(function (item) {\n                var itemValidationResult = new ValidationResult();\n                validate(item, containsSchema, itemValidationResult, NoOpSchemaCollector.instance);\n                return !itemValidationResult.hasProblems();\n            });\n            if (!doesContain) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: schema.errorMessage || localize('requiredItemMissingWarning', 'Array does not contain required item.')\n                });\n            }\n        }\n        if (isNumber(schema.minItems) && node.items.length < schema.minItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('minItemsWarning', 'Array has too few items. Expected {0} or more.', schema.minItems)\n            });\n        }\n        if (isNumber(schema.maxItems) && node.items.length > schema.maxItems) {\n            validationResult.problems.push({\n                location: { offset: node.offset, length: node.length },\n                severity: DiagnosticSeverity.Warning,\n                message: localize('maxItemsWarning', 'Array has too many items. Expected {0} or fewer.', schema.maxItems)\n            });\n        }\n        if (schema.uniqueItems === true) {\n            var values_1 = getNodeValue(node);\n            var duplicates = values_1.some(function (value, index) {\n                return index !== values_1.lastIndexOf(value);\n            });\n            if (duplicates) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('uniqueItemsWarning', 'Array has duplicate items.')\n                });\n            }\n        }\n    }\n    function _validateObjectNode(node, schema, validationResult, matchingSchemas) {\n        var seenKeys = Object.create(null);\n        var unprocessedProperties = [];\n        for (var _i = 0, _a = node.properties; _i < _a.length; _i++) {\n            var propertyNode = _a[_i];\n            var key = propertyNode.keyNode.value;\n            seenKeys[key] = propertyNode.valueNode;\n            unprocessedProperties.push(key);\n        }\n        if (Array.isArray(schema.required)) {\n            for (var _b = 0, _c = schema.required; _b < _c.length; _b++) {\n                var propertyName = _c[_b];\n                if (!seenKeys[propertyName]) {\n                    var keyNode = node.parent && node.parent.type === 'property' && node.parent.keyNode;\n                    var location = keyNode ? { offset: keyNode.offset, length: keyNode.length } : { offset: node.offset, length: 1 };\n                    validationResult.problems.push({\n                        location: location,\n                        severity: DiagnosticSeverity.Warning,\n                        message: localize('MissingRequiredPropWarning', 'Missing property \"{0}\".', propertyName)\n                    });\n                }\n            }\n        }\n        var propertyProcessed = function (prop) {\n            var index = unprocessedProperties.indexOf(prop);\n            while (index >= 0) {\n                unprocessedProperties.splice(index, 1);\n                index = unprocessedProperties.indexOf(prop);\n            }\n        };\n        if (schema.properties) {\n            for (var _d = 0, _e = Object.keys(schema.properties); _d < _e.length; _d++) {\n                var propertyName = _e[_d];\n                propertyProcessed(propertyName);\n                var propertySchema = schema.properties[propertyName];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    if (isBoolean(propertySchema)) {\n                        if (!propertySchema) {\n                            var propertyNode = child.parent;\n                            validationResult.problems.push({\n                                location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                severity: DiagnosticSeverity.Warning,\n                                message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                            });\n                        }\n                        else {\n                            validationResult.propertiesMatches++;\n                            validationResult.propertiesValueMatches++;\n                        }\n                    }\n                    else {\n                        var propertyValidationResult = new ValidationResult();\n                        validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                        validationResult.mergePropertyMatch(propertyValidationResult);\n                    }\n                }\n            }\n        }\n        if (schema.patternProperties) {\n            for (var _f = 0, _g = Object.keys(schema.patternProperties); _f < _g.length; _f++) {\n                var propertyPattern = _g[_f];\n                var regex = new RegExp(propertyPattern);\n                for (var _h = 0, _j = unprocessedProperties.slice(0); _h < _j.length; _h++) {\n                    var propertyName = _j[_h];\n                    if (regex.test(propertyName)) {\n                        propertyProcessed(propertyName);\n                        var child = seenKeys[propertyName];\n                        if (child) {\n                            var propertySchema = schema.patternProperties[propertyPattern];\n                            if (isBoolean(propertySchema)) {\n                                if (!propertySchema) {\n                                    var propertyNode = child.parent;\n                                    validationResult.problems.push({\n                                        location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                                        severity: DiagnosticSeverity.Warning,\n                                        message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                                    });\n                                }\n                                else {\n                                    validationResult.propertiesMatches++;\n                                    validationResult.propertiesValueMatches++;\n                                }\n                            }\n                            else {\n                                var propertyValidationResult = new ValidationResult();\n                                validate(child, propertySchema, propertyValidationResult, matchingSchemas);\n                                validationResult.mergePropertyMatch(propertyValidationResult);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (typeof schema.additionalProperties === 'object') {\n            for (var _k = 0, unprocessedProperties_1 = unprocessedProperties; _k < unprocessedProperties_1.length; _k++) {\n                var propertyName = unprocessedProperties_1[_k];\n                var child = seenKeys[propertyName];\n                if (child) {\n                    var propertyValidationResult = new ValidationResult();\n                    validate(child, schema.additionalProperties, propertyValidationResult, matchingSchemas);\n                    validationResult.mergePropertyMatch(propertyValidationResult);\n                }\n            }\n        }\n        else if (schema.additionalProperties === false) {\n            if (unprocessedProperties.length > 0) {\n                for (var _l = 0, unprocessedProperties_2 = unprocessedProperties; _l < unprocessedProperties_2.length; _l++) {\n                    var propertyName = unprocessedProperties_2[_l];\n                    var child = seenKeys[propertyName];\n                    if (child) {\n                        var propertyNode = child.parent;\n                        validationResult.problems.push({\n                            location: { offset: propertyNode.keyNode.offset, length: propertyNode.keyNode.length },\n                            severity: DiagnosticSeverity.Warning,\n                            message: schema.errorMessage || localize('DisallowedExtraPropWarning', 'Property {0} is not allowed.', propertyName)\n                        });\n                    }\n                }\n            }\n        }\n        if (isNumber(schema.maxProperties)) {\n            if (node.properties.length > schema.maxProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MaxPropWarning', 'Object has more properties than limit of {0}.', schema.maxProperties)\n                });\n            }\n        }\n        if (isNumber(schema.minProperties)) {\n            if (node.properties.length < schema.minProperties) {\n                validationResult.problems.push({\n                    location: { offset: node.offset, length: node.length },\n                    severity: DiagnosticSeverity.Warning,\n                    message: localize('MinPropWarning', 'Object has fewer properties than the required number of {0}', schema.minProperties)\n                });\n            }\n        }\n        if (schema.dependencies) {\n            for (var _m = 0, _o = Object.keys(schema.dependencies); _m < _o.length; _m++) {\n                var key = _o[_m];\n                var prop = seenKeys[key];\n                if (prop) {\n                    var propertyDep = schema.dependencies[key];\n                    if (Array.isArray(propertyDep)) {\n                        for (var _p = 0, propertyDep_1 = propertyDep; _p < propertyDep_1.length; _p++) {\n                            var requiredProp = propertyDep_1[_p];\n                            if (!seenKeys[requiredProp]) {\n                                validationResult.problems.push({\n                                    location: { offset: node.offset, length: node.length },\n                                    severity: DiagnosticSeverity.Warning,\n                                    message: localize('RequiredDependentPropWarning', 'Object is missing property {0} required by property {1}.', requiredProp, key)\n                                });\n                            }\n                            else {\n                                validationResult.propertiesValueMatches++;\n                            }\n                        }\n                    }\n                    else {\n                        var propertySchema = asSchema(propertyDep);\n                        if (propertySchema) {\n                            var propertyValidationResult = new ValidationResult();\n                            validate(node, propertySchema, propertyValidationResult, matchingSchemas);\n                            validationResult.mergePropertyMatch(propertyValidationResult);\n                        }\n                    }\n                }\n            }\n        }\n        var propertyNames = asSchema(schema.propertyNames);\n        if (propertyNames) {\n            for (var _q = 0, _r = node.properties; _q < _r.length; _q++) {\n                var f = _r[_q];\n                var key = f.keyNode;\n                if (key) {\n                    validate(key, propertyNames, validationResult, NoOpSchemaCollector.instance);\n                }\n            }\n        }\n    }\n}\nexport function parse(textDocument, config) {\n    var problems = [];\n    var lastProblemOffset = -1;\n    var text = textDocument.getText();\n    var scanner = Json.createScanner(text, false);\n    var commentRanges = config && config.collectComments ? [] : void 0;\n    function _scanNext() {\n        while (true) {\n            var token_1 = scanner.scan();\n            _checkScanError();\n            switch (token_1) {\n                case 12 /* LineCommentTrivia */:\n                case 13 /* BlockCommentTrivia */:\n                    if (Array.isArray(commentRanges)) {\n                        commentRanges.push(Range.create(textDocument.positionAt(scanner.getTokenOffset()), textDocument.positionAt(scanner.getTokenOffset() + scanner.getTokenLength())));\n                    }\n                    break;\n                case 15 /* Trivia */:\n                case 14 /* LineBreakTrivia */:\n                    break;\n                default:\n                    return token_1;\n            }\n        }\n    }\n    function _accept(token) {\n        if (scanner.getToken() === token) {\n            _scanNext();\n            return true;\n        }\n        return false;\n    }\n    function _errorAtRange(message, code, startOffset, endOffset, severity) {\n        if (severity === void 0) { severity = DiagnosticSeverity.Error; }\n        if (problems.length === 0 || startOffset !== lastProblemOffset) {\n            var range = Range.create(textDocument.positionAt(startOffset), textDocument.positionAt(endOffset));\n            problems.push(Diagnostic.create(range, message, severity, code, textDocument.languageId));\n            lastProblemOffset = startOffset;\n        }\n    }\n    function _error(message, code, node, skipUntilAfter, skipUntil) {\n        if (node === void 0) { node = null; }\n        if (skipUntilAfter === void 0) { skipUntilAfter = []; }\n        if (skipUntil === void 0) { skipUntil = []; }\n        var start = scanner.getTokenOffset();\n        var end = scanner.getTokenOffset() + scanner.getTokenLength();\n        if (start === end && start > 0) {\n            start--;\n            while (start > 0 && /\\s/.test(text.charAt(start))) {\n                start--;\n            }\n            end = start + 1;\n        }\n        _errorAtRange(message, code, start, end);\n        if (node) {\n            _finalize(node, false);\n        }\n        if (skipUntilAfter.length + skipUntil.length > 0) {\n            var token_2 = scanner.getToken();\n            while (token_2 !== 17 /* EOF */) {\n                if (skipUntilAfter.indexOf(token_2) !== -1) {\n                    _scanNext();\n                    break;\n                }\n                else if (skipUntil.indexOf(token_2) !== -1) {\n                    break;\n                }\n                token_2 = _scanNext();\n            }\n        }\n        return node;\n    }\n    function _checkScanError() {\n        switch (scanner.getTokenError()) {\n            case 4 /* InvalidUnicode */:\n                _error(localize('InvalidUnicode', 'Invalid unicode sequence in string.'), ErrorCode.InvalidUnicode);\n                return true;\n            case 5 /* InvalidEscapeCharacter */:\n                _error(localize('InvalidEscapeCharacter', 'Invalid escape character in string.'), ErrorCode.InvalidEscapeCharacter);\n                return true;\n            case 3 /* UnexpectedEndOfNumber */:\n                _error(localize('UnexpectedEndOfNumber', 'Unexpected end of number.'), ErrorCode.UnexpectedEndOfNumber);\n                return true;\n            case 1 /* UnexpectedEndOfComment */:\n                _error(localize('UnexpectedEndOfComment', 'Unexpected end of comment.'), ErrorCode.UnexpectedEndOfComment);\n                return true;\n            case 2 /* UnexpectedEndOfString */:\n                _error(localize('UnexpectedEndOfString', 'Unexpected end of string.'), ErrorCode.UnexpectedEndOfString);\n                return true;\n            case 6 /* InvalidCharacter */:\n                _error(localize('InvalidCharacter', 'Invalid characters in string. Control characters must be escaped.'), ErrorCode.InvalidCharacter);\n                return true;\n        }\n        return false;\n    }\n    function _finalize(node, scanNext) {\n        node.length = scanner.getTokenOffset() + scanner.getTokenLength() - node.offset;\n        if (scanNext) {\n            _scanNext();\n        }\n        return node;\n    }\n    function _parseArray(parent) {\n        if (scanner.getToken() !== 3 /* OpenBracketToken */) {\n            return null;\n        }\n        var node = new ArrayASTNodeImpl(parent, scanner.getTokenOffset());\n        _scanNext(); // consume OpenBracketToken\n        var count = 0;\n        var needsComma = false;\n        while (scanner.getToken() !== 4 /* CloseBracketToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 4 /* CloseBracketToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var item = _parseValue(node, count++);\n            if (!item) {\n                _error(localize('PropertyExpected', 'Value expected'), ErrorCode.ValueExpected, null, [], [4 /* CloseBracketToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.items.push(item);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 4 /* CloseBracketToken */) {\n            return _error(localize('ExpectedCloseBracket', 'Expected comma or closing bracket'), ErrorCode.CommaOrCloseBacketExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseProperty(parent, keysSeen) {\n        var node = new PropertyASTNodeImpl(parent, scanner.getTokenOffset());\n        var key = _parseString(node);\n        if (!key) {\n            if (scanner.getToken() === 16 /* Unknown */) {\n                // give a more helpful error message\n                _error(localize('DoubleQuotesExpected', 'Property keys must be doublequoted'), ErrorCode.Undefined);\n                var keyNode = new StringASTNodeImpl(node, scanner.getTokenOffset(), scanner.getTokenLength());\n                keyNode.value = scanner.getTokenValue();\n                key = keyNode;\n                _scanNext(); // consume Unknown\n            }\n            else {\n                return null;\n            }\n        }\n        node.keyNode = key;\n        var seen = keysSeen[key.value];\n        if (seen) {\n            _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, node.keyNode.offset, node.keyNode.offset + node.keyNode.length, DiagnosticSeverity.Warning);\n            if (typeof seen === 'object') {\n                _errorAtRange(localize('DuplicateKeyWarning', \"Duplicate object key\"), ErrorCode.DuplicateKey, seen.keyNode.offset, seen.keyNode.offset + seen.keyNode.length, DiagnosticSeverity.Warning);\n            }\n            keysSeen[key.value] = true; // if the same key is duplicate again, avoid duplicate error reporting\n        }\n        else {\n            keysSeen[key.value] = node;\n        }\n        if (scanner.getToken() === 6 /* ColonToken */) {\n            node.colonOffset = scanner.getTokenOffset();\n            _scanNext(); // consume ColonToken\n        }\n        else {\n            _error(localize('ColonExpected', 'Colon expected'), ErrorCode.ColonExpected);\n            if (scanner.getToken() === 10 /* StringLiteral */ && textDocument.positionAt(key.offset + key.length).line < textDocument.positionAt(scanner.getTokenOffset()).line) {\n                node.length = key.length;\n                return node;\n            }\n        }\n        var value = _parseValue(node, key.value);\n        if (!value) {\n            return _error(localize('ValueExpected', 'Value expected'), ErrorCode.ValueExpected, node, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n        }\n        node.valueNode = value;\n        node.length = value.offset + value.length - node.offset;\n        return node;\n    }\n    function _parseObject(parent) {\n        if (scanner.getToken() !== 1 /* OpenBraceToken */) {\n            return null;\n        }\n        var node = new ObjectASTNodeImpl(parent, scanner.getTokenOffset());\n        var keysSeen = Object.create(null);\n        _scanNext(); // consume OpenBraceToken\n        var needsComma = false;\n        while (scanner.getToken() !== 2 /* CloseBraceToken */ && scanner.getToken() !== 17 /* EOF */) {\n            if (scanner.getToken() === 5 /* CommaToken */) {\n                if (!needsComma) {\n                    _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected);\n                }\n                var commaOffset = scanner.getTokenOffset();\n                _scanNext(); // consume comma\n                if (scanner.getToken() === 2 /* CloseBraceToken */) {\n                    if (needsComma) {\n                        _errorAtRange(localize('TrailingComma', 'Trailing comma'), ErrorCode.TrailingComma, commaOffset, commaOffset + 1);\n                    }\n                    continue;\n                }\n            }\n            else if (needsComma) {\n                _error(localize('ExpectedComma', 'Expected comma'), ErrorCode.CommaExpected);\n            }\n            var property = _parseProperty(node, keysSeen);\n            if (!property) {\n                _error(localize('PropertyExpected', 'Property expected'), ErrorCode.PropertyExpected, null, [], [2 /* CloseBraceToken */, 5 /* CommaToken */]);\n            }\n            else {\n                node.properties.push(property);\n            }\n            needsComma = true;\n        }\n        if (scanner.getToken() !== 2 /* CloseBraceToken */) {\n            return _error(localize('ExpectedCloseBrace', 'Expected comma or closing brace'), ErrorCode.CommaOrCloseBraceExpected, node);\n        }\n        return _finalize(node, true);\n    }\n    function _parseString(parent) {\n        if (scanner.getToken() !== 10 /* StringLiteral */) {\n            return null;\n        }\n        var node = new StringASTNodeImpl(parent, scanner.getTokenOffset());\n        node.value = scanner.getTokenValue();\n        return _finalize(node, true);\n    }\n    function _parseNumber(parent) {\n        if (scanner.getToken() !== 11 /* NumericLiteral */) {\n            return null;\n        }\n        var node = new NumberASTNodeImpl(parent, scanner.getTokenOffset());\n        if (scanner.getTokenError() === 0 /* None */) {\n            var tokenValue = scanner.getTokenValue();\n            try {\n                var numberValue = JSON.parse(tokenValue);\n                if (!isNumber(numberValue)) {\n                    return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n                }\n                node.value = numberValue;\n            }\n            catch (e) {\n                return _error(localize('InvalidNumberFormat', 'Invalid number format.'), ErrorCode.Undefined, node);\n            }\n            node.isInteger = tokenValue.indexOf('.') === -1;\n        }\n        return _finalize(node, true);\n    }\n    function _parseLiteral(parent) {\n        var node;\n        switch (scanner.getToken()) {\n            case 7 /* NullKeyword */:\n                return _finalize(new NullASTNodeImpl(parent, scanner.getTokenOffset()), true);\n            case 8 /* TrueKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, true, scanner.getTokenOffset()), true);\n            case 9 /* FalseKeyword */:\n                return _finalize(new BooleanASTNodeImpl(parent, false, scanner.getTokenOffset()), true);\n            default:\n                return null;\n        }\n    }\n    function _parseValue(parent, name) {\n        return _parseArray(parent) || _parseObject(parent) || _parseString(parent) || _parseNumber(parent) || _parseLiteral(parent);\n    }\n    var _root = null;\n    var token = _scanNext();\n    if (token !== 17 /* EOF */) {\n        _root = _parseValue(null, null);\n        if (!_root) {\n            _error(localize('Invalid symbol', 'Expected a JSON object, array or literal.'), ErrorCode.Undefined);\n        }\n        else if (scanner.getToken() !== 17 /* EOF */) {\n            _error(localize('End of file expected', 'End of file expected.'), ErrorCode.Undefined);\n        }\n    }\n    return new JSONDocument(_root, problems, commentRanges);\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function stringifyObject(obj, indent, stringifyLiteral) {\n    if (obj !== null && typeof obj === 'object') {\n        var newIndent = indent + '\\t';\n        if (Array.isArray(obj)) {\n            if (obj.length === 0) {\n                return '[]';\n            }\n            var result = '[\\n';\n            for (var i = 0; i < obj.length; i++) {\n                result += newIndent + stringifyObject(obj[i], newIndent, stringifyLiteral);\n                if (i < obj.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + ']';\n            return result;\n        }\n        else {\n            var keys = Object.keys(obj);\n            if (keys.length === 0) {\n                return '{}';\n            }\n            var result = '{\\n';\n            for (var i = 0; i < keys.length; i++) {\n                var key = keys[i];\n                result += newIndent + JSON.stringify(key) + ': ' + stringifyObject(obj[key], newIndent, stringifyLiteral);\n                if (i < keys.length - 1) {\n                    result += ',';\n                }\n                result += '\\n';\n            }\n            result += indent + '}';\n            return result;\n        }\n    }\n    return stringifyLiteral(obj);\n}\n","/*---------------------------------------------------------------------------------------------\n*  Copyright (c) Microsoft Corporation. All rights reserved.\n*  Licensed under the MIT License. See License.txt in the project root for license information.\n*--------------------------------------------------------------------------------------------*/\nexport function startsWith(haystack, needle) {\n    if (haystack.length < needle.length) {\n        return false;\n    }\n    for (var i = 0; i < needle.length; i++) {\n        if (haystack[i] !== needle[i]) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Determines if haystack ends with needle.\n */\nexport function endsWith(haystack, needle) {\n    var diff = haystack.length - needle.length;\n    if (diff > 0) {\n        return haystack.lastIndexOf(needle) === diff;\n    }\n    else if (diff === 0) {\n        return haystack === needle;\n    }\n    else {\n        return false;\n    }\n}\nexport function convertSimple2RegExpPattern(pattern) {\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\n}\nexport function repeat(value, count) {\n    var s = '';\n    while (count > 0) {\n        if ((count & 1) === 1) {\n            s += value;\n        }\n        value += value;\n        count = count >>> 1;\n    }\n    return s;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser.js';\nimport * as Json from './../../jsonc-parser/main.js';\nimport { stringifyObject } from '../utils/json.js';\nimport { endsWith } from '../utils/strings.js';\nimport { isDefined } from '../utils/objects.js';\nimport { CompletionItem, CompletionItemKind, Range, TextEdit, InsertTextFormat, MarkupKind } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar valueCommitCharacters = [',', '}', ']'];\nvar propertyCommitCharacters = [':'];\nvar JSONCompletion = /** @class */ (function () {\n    function JSONCompletion(schemaService, contributions, promiseConstructor, clientCapabilities) {\n        if (contributions === void 0) { contributions = []; }\n        if (promiseConstructor === void 0) { promiseConstructor = Promise; }\n        if (clientCapabilities === void 0) { clientCapabilities = {}; }\n        this.schemaService = schemaService;\n        this.contributions = contributions;\n        this.promiseConstructor = promiseConstructor;\n        this.clientCapabilities = clientCapabilities;\n        this.templateVarIdCounter = 0;\n    }\n    JSONCompletion.prototype.doResolve = function (item) {\n        for (var i = this.contributions.length - 1; i >= 0; i--) {\n            if (this.contributions[i].resolveCompletion) {\n                var resolver = this.contributions[i].resolveCompletion(item);\n                if (resolver) {\n                    return resolver;\n                }\n            }\n        }\n        return this.promiseConstructor.resolve(item);\n    };\n    JSONCompletion.prototype.doComplete = function (document, position, doc) {\n        var _this = this;\n        var result = {\n            items: [],\n            isIncomplete: false\n        };\n        var text = document.getText();\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset, true);\n        if (this.isInComment(document, node ? node.offset : 0, offset)) {\n            return Promise.resolve(result);\n        }\n        if (node && (offset === node.offset + node.length) && offset > 0) {\n            var ch = text[offset - 1];\n            if (node.type === 'object' && ch === '}' || node.type === 'array' && ch === ']') {\n                // after ] or }\n                node = node.parent;\n            }\n        }\n        var currentWord = this.getCurrentWord(document, offset);\n        var overwriteRange = null;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            overwriteRange = Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n        }\n        else {\n            var overwriteStart = offset - currentWord.length;\n            if (overwriteStart > 0 && text[overwriteStart - 1] === '\"') {\n                overwriteStart--;\n            }\n            overwriteRange = Range.create(document.positionAt(overwriteStart), position);\n        }\n        var supportsCommitCharacters = false; //this.doesSupportsCommitCharacters(); disabled for now, waiting for new API: https://github.com/microsoft/vscode/issues/42544\n        var proposed = {};\n        var collector = {\n            add: function (suggestion) {\n                var label = suggestion.label;\n                var existing = proposed[label];\n                if (!existing) {\n                    label = label.replace(/[\\n]/g, '↵');\n                    if (label.length > 60) {\n                        var shortendedLabel = label.substr(0, 57).trim() + '...';\n                        if (!proposed[shortendedLabel]) {\n                            label = shortendedLabel;\n                        }\n                    }\n                    if (overwriteRange) {\n                        suggestion.textEdit = TextEdit.replace(overwriteRange, suggestion.insertText);\n                    }\n                    if (supportsCommitCharacters) {\n                        suggestion.commitCharacters = suggestion.kind === CompletionItemKind.Property ? propertyCommitCharacters : valueCommitCharacters;\n                    }\n                    suggestion.label = label;\n                    proposed[label] = suggestion;\n                    result.items.push(suggestion);\n                }\n                else if (!existing.documentation) {\n                    existing.documentation = suggestion.documentation;\n                }\n            },\n            setAsIncomplete: function () {\n                result.isIncomplete = true;\n            },\n            error: function (message) {\n                console.error(message);\n            },\n            log: function (message) {\n                console.log(message);\n            },\n            getNumberOfProposals: function () {\n                return result.items.length;\n            }\n        };\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var collectionPromises = [];\n            var addValue = true;\n            var currentKey = '';\n            var currentProperty = null;\n            if (node) {\n                if (node.type === 'string') {\n                    var parent = node.parent;\n                    if (parent && parent.type === 'property' && parent.keyNode === node) {\n                        addValue = !parent.valueNode;\n                        currentProperty = parent;\n                        currentKey = text.substr(node.offset + 1, node.length - 2);\n                        if (parent) {\n                            node = parent.parent;\n                        }\n                    }\n                }\n            }\n            // proposals for properties\n            if (node && node.type === 'object') {\n                // don't suggest keys when the cursor is just before the opening curly brace\n                if (node.offset === offset) {\n                    return result;\n                }\n                // don't suggest properties that are already present\n                var properties = node.properties;\n                properties.forEach(function (p) {\n                    if (!currentProperty || currentProperty !== p) {\n                        proposed[p.keyNode.value] = CompletionItem.create('__');\n                    }\n                });\n                var separatorAfter_1 = '';\n                if (addValue) {\n                    separatorAfter_1 = _this.evaluateSeparatorAfter(document, document.offsetAt(overwriteRange.end));\n                }\n                if (schema) {\n                    // property proposals with schema\n                    _this.getPropertyCompletions(schema, doc, node, addValue, separatorAfter_1, collector);\n                }\n                else {\n                    // property proposals without schema\n                    _this.getSchemaLessPropertyCompletions(doc, node, currentKey, collector);\n                }\n                var location_1 = Parser.getNodePath(node);\n                _this.contributions.forEach(function (contribution) {\n                    var collectPromise = contribution.collectPropertyCompletions(document.uri, location_1, currentWord, addValue, separatorAfter_1 === '', collector);\n                    if (collectPromise) {\n                        collectionPromises.push(collectPromise);\n                    }\n                });\n                if ((!schema && currentWord.length > 0 && text.charAt(offset - currentWord.length - 1) !== '\"')) {\n                    collector.add({\n                        kind: CompletionItemKind.Property,\n                        label: _this.getLabelForValue(currentWord),\n                        insertText: _this.getInsertTextForProperty(currentWord, null, false, separatorAfter_1),\n                        insertTextFormat: InsertTextFormat.Snippet, documentation: '',\n                    });\n                    collector.setAsIncomplete();\n                }\n            }\n            // proposals for values\n            var types = {};\n            if (schema) {\n                // value proposals with schema\n                _this.getValueCompletions(schema, doc, node, offset, document, collector, types);\n            }\n            else {\n                // value proposals without schema\n                _this.getSchemaLessValueCompletions(doc, node, offset, document, collector);\n            }\n            if (_this.contributions.length > 0) {\n                _this.getContributedValueCompletions(doc, node, offset, document, collector, collectionPromises);\n            }\n            return _this.promiseConstructor.all(collectionPromises).then(function () {\n                if (collector.getNumberOfProposals() === 0) {\n                    var offsetForSeparator = offset;\n                    if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n                        offsetForSeparator = node.offset + node.length;\n                    }\n                    var separatorAfter = _this.evaluateSeparatorAfter(document, offsetForSeparator);\n                    _this.addFillerValueCompletions(types, separatorAfter, collector);\n                }\n                return result;\n            });\n        });\n    };\n    JSONCompletion.prototype.getPropertyCompletions = function (schema, doc, node, addValue, separatorAfter, collector) {\n        var _this = this;\n        var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n        matchingSchemas.forEach(function (s) {\n            if (s.node === node && !s.inverted) {\n                var schemaProperties_1 = s.schema.properties;\n                if (schemaProperties_1) {\n                    Object.keys(schemaProperties_1).forEach(function (key) {\n                        var propertySchema = schemaProperties_1[key];\n                        if (typeof propertySchema === 'object' && !propertySchema.deprecationMessage && !propertySchema.doNotSuggest) {\n                            var proposal = {\n                                kind: CompletionItemKind.Property,\n                                label: key,\n                                insertText: _this.getInsertTextForProperty(key, propertySchema, addValue, separatorAfter),\n                                insertTextFormat: InsertTextFormat.Snippet,\n                                filterText: _this.getFilterTextForValue(key),\n                                documentation: _this.fromMarkup(propertySchema.markdownDescription) || propertySchema.description || '',\n                            };\n                            if (endsWith(proposal.insertText, \"$1\" + separatorAfter)) {\n                                proposal.command = {\n                                    title: 'Suggest',\n                                    command: 'editor.action.triggerSuggest'\n                                };\n                            }\n                            collector.add(proposal);\n                        }\n                    });\n                }\n            }\n        });\n    };\n    JSONCompletion.prototype.getSchemaLessPropertyCompletions = function (doc, node, currentKey, collector) {\n        var _this = this;\n        var collectCompletionsForSimilarObject = function (obj) {\n            obj.properties.forEach(function (p) {\n                var key = p.keyNode.value;\n                collector.add({\n                    kind: CompletionItemKind.Property,\n                    label: key,\n                    insertText: _this.getInsertTextForValue(key, ''),\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    filterText: _this.getFilterTextForValue(key),\n                    documentation: ''\n                });\n            });\n        };\n        if (node.parent) {\n            if (node.parent.type === 'property') {\n                // if the object is a property value, check the tree for other objects that hang under a property of the same name\n                var parentKey_1 = node.parent.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n !== node.parent && n.keyNode.value === parentKey_1 && n.valueNode && n.valueNode.type === 'object') {\n                        collectCompletionsForSimilarObject(n.valueNode);\n                    }\n                    return true;\n                });\n            }\n            else if (node.parent.type === 'array') {\n                // if the object is in an array, use all other array elements as similar objects\n                node.parent.items.forEach(function (n) {\n                    if (n.type === 'object' && n !== node) {\n                        collectCompletionsForSimilarObject(n);\n                    }\n                });\n            }\n        }\n        else if (node.type === 'object') {\n            collector.add({\n                kind: CompletionItemKind.Property,\n                label: '$schema',\n                insertText: this.getInsertTextForProperty('$schema', null, true, ''),\n                insertTextFormat: InsertTextFormat.Snippet, documentation: '',\n                filterText: this.getFilterTextForValue(\"$schema\")\n            });\n        }\n    };\n    JSONCompletion.prototype.getSchemaLessValueCompletions = function (doc, node, offset, document, collector) {\n        var _this = this;\n        var offsetForSeparator = offset;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            offsetForSeparator = node.offset + node.length;\n            node = node.parent;\n        }\n        if (!node) {\n            collector.add({\n                kind: this.getSuggestionKind('object'),\n                label: 'Empty object',\n                insertText: this.getInsertTextForValue({}, ''),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: ''\n            });\n            collector.add({\n                kind: this.getSuggestionKind('array'),\n                label: 'Empty array',\n                insertText: this.getInsertTextForValue([], ''),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: ''\n            });\n            return;\n        }\n        var separatorAfter = this.evaluateSeparatorAfter(document, offsetForSeparator);\n        var collectSuggestionsForValues = function (value) {\n            if (!Parser.contains(value.parent, offset, true)) {\n                collector.add({\n                    kind: _this.getSuggestionKind(value.type),\n                    label: _this.getLabelTextForMatchingNode(value, document),\n                    insertText: _this.getInsertTextForMatchingNode(value, document, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet, documentation: ''\n                });\n            }\n            if (value.type === 'boolean') {\n                _this.addBooleanValueCompletion(!value.value, separatorAfter, collector);\n            }\n        };\n        if (node.type === 'property') {\n            if (offset > node.colonOffset) {\n                var valueNode = node.valueNode;\n                if (valueNode && (offset > (valueNode.offset + valueNode.length) || valueNode.type === 'object' || valueNode.type === 'array')) {\n                    return;\n                }\n                // suggest values at the same key\n                var parentKey_2 = node.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n.keyNode.value === parentKey_2 && n.valueNode) {\n                        collectSuggestionsForValues(n.valueNode);\n                    }\n                    return true;\n                });\n                if (parentKey_2 === '$schema' && node.parent && !node.parent.parent) {\n                    this.addDollarSchemaCompletions(separatorAfter, collector);\n                }\n            }\n        }\n        if (node.type === 'array') {\n            if (node.parent && node.parent.type === 'property') {\n                // suggest items of an array at the same key\n                var parentKey_3 = node.parent.keyNode.value;\n                doc.visit(function (n) {\n                    if (n.type === 'property' && n.keyNode.value === parentKey_3 && n.valueNode && n.valueNode.type === 'array') {\n                        n.valueNode.items.forEach(collectSuggestionsForValues);\n                    }\n                    return true;\n                });\n            }\n            else {\n                // suggest items in the same array\n                node.items.forEach(collectSuggestionsForValues);\n            }\n        }\n    };\n    JSONCompletion.prototype.getValueCompletions = function (schema, doc, node, offset, document, collector, types) {\n        var _this = this;\n        var offsetForSeparator = offset;\n        var parentKey = null;\n        var valueNode = null;\n        if (node && (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null')) {\n            offsetForSeparator = node.offset + node.length;\n            valueNode = node;\n            node = node.parent;\n        }\n        if (!node) {\n            this.addSchemaValueCompletions(schema.schema, '', collector, types);\n            return;\n        }\n        if ((node.type === 'property') && offset > node.colonOffset) {\n            var valueNode_1 = node.valueNode;\n            if (valueNode_1 && offset > (valueNode_1.offset + valueNode_1.length)) {\n                return; // we are past the value node\n            }\n            parentKey = node.keyNode.value;\n            node = node.parent;\n        }\n        if (node && (parentKey !== null || node.type === 'array')) {\n            var separatorAfter_2 = this.evaluateSeparatorAfter(document, offsetForSeparator);\n            var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset, valueNode);\n            matchingSchemas.forEach(function (s) {\n                if (s.node === node && !s.inverted && s.schema) {\n                    if (node.type === 'array' && s.schema.items) {\n                        if (Array.isArray(s.schema.items)) {\n                            var index = _this.findItemAtOffset(node, document, offset);\n                            if (index < s.schema.items.length) {\n                                _this.addSchemaValueCompletions(s.schema.items[index], separatorAfter_2, collector, types);\n                            }\n                        }\n                        else {\n                            _this.addSchemaValueCompletions(s.schema.items, separatorAfter_2, collector, types);\n                        }\n                    }\n                    if (s.schema.properties) {\n                        var propertySchema = s.schema.properties[parentKey];\n                        if (propertySchema) {\n                            _this.addSchemaValueCompletions(propertySchema, separatorAfter_2, collector, types);\n                        }\n                    }\n                }\n            });\n            if (parentKey === '$schema' && !node.parent) {\n                this.addDollarSchemaCompletions(separatorAfter_2, collector);\n            }\n            if (types['boolean']) {\n                this.addBooleanValueCompletion(true, separatorAfter_2, collector);\n                this.addBooleanValueCompletion(false, separatorAfter_2, collector);\n            }\n            if (types['null']) {\n                this.addNullValueCompletion(separatorAfter_2, collector);\n            }\n        }\n    };\n    JSONCompletion.prototype.getContributedValueCompletions = function (doc, node, offset, document, collector, collectionPromises) {\n        if (!node) {\n            this.contributions.forEach(function (contribution) {\n                var collectPromise = contribution.collectDefaultCompletions(document.uri, collector);\n                if (collectPromise) {\n                    collectionPromises.push(collectPromise);\n                }\n            });\n        }\n        else {\n            if (node.type === 'string' || node.type === 'number' || node.type === 'boolean' || node.type === 'null') {\n                node = node.parent;\n            }\n            if ((node.type === 'property') && offset > node.colonOffset) {\n                var parentKey_4 = node.keyNode.value;\n                var valueNode = node.valueNode;\n                if (!valueNode || offset <= (valueNode.offset + valueNode.length)) {\n                    var location_2 = Parser.getNodePath(node.parent);\n                    this.contributions.forEach(function (contribution) {\n                        var collectPromise = contribution.collectValueCompletions(document.uri, location_2, parentKey_4, collector);\n                        if (collectPromise) {\n                            collectionPromises.push(collectPromise);\n                        }\n                    });\n                }\n            }\n        }\n    };\n    JSONCompletion.prototype.addSchemaValueCompletions = function (schema, separatorAfter, collector, types) {\n        var _this = this;\n        if (typeof schema === 'object') {\n            this.addEnumValueCompletions(schema, separatorAfter, collector);\n            this.addDefaultValueCompletions(schema, separatorAfter, collector);\n            this.collectTypes(schema, types);\n            if (Array.isArray(schema.allOf)) {\n                schema.allOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n            if (Array.isArray(schema.anyOf)) {\n                schema.anyOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n            if (Array.isArray(schema.oneOf)) {\n                schema.oneOf.forEach(function (s) { return _this.addSchemaValueCompletions(s, separatorAfter, collector, types); });\n            }\n        }\n    };\n    JSONCompletion.prototype.addDefaultValueCompletions = function (schema, separatorAfter, collector, arrayDepth) {\n        var _this = this;\n        if (arrayDepth === void 0) { arrayDepth = 0; }\n        var hasProposals = false;\n        if (isDefined(schema.default)) {\n            var type = schema.type;\n            var value = schema.default;\n            for (var i = arrayDepth; i > 0; i--) {\n                value = [value];\n                type = 'array';\n            }\n            collector.add({\n                kind: this.getSuggestionKind(type),\n                label: this.getLabelForValue(value),\n                insertText: this.getInsertTextForValue(value, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('json.suggest.default', 'Default value')\n            });\n            hasProposals = true;\n        }\n        if (Array.isArray(schema.examples)) {\n            schema.examples.forEach(function (example) {\n                var type = schema.type;\n                var value = example;\n                for (var i = arrayDepth; i > 0; i--) {\n                    value = [value];\n                    type = 'array';\n                }\n                collector.add({\n                    kind: _this.getSuggestionKind(type),\n                    label: _this.getLabelForValue(value),\n                    insertText: _this.getInsertTextForValue(value, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet\n                });\n                hasProposals = true;\n            });\n        }\n        if (Array.isArray(schema.defaultSnippets)) {\n            schema.defaultSnippets.forEach(function (s) {\n                var type = schema.type;\n                var value = s.body;\n                var label = s.label;\n                var insertText;\n                var filterText;\n                if (isDefined(value)) {\n                    var type_1 = schema.type;\n                    for (var i = arrayDepth; i > 0; i--) {\n                        value = [value];\n                        type_1 = 'array';\n                    }\n                    insertText = _this.getInsertTextForSnippetValue(value, separatorAfter);\n                    filterText = _this.getFilterTextForSnippetValue(value);\n                    label = label || _this.getLabelForSnippetValue(value);\n                }\n                else if (typeof s.bodyText === 'string') {\n                    var prefix = '', suffix = '', indent = '';\n                    for (var i = arrayDepth; i > 0; i--) {\n                        prefix = prefix + indent + '[\\n';\n                        suffix = suffix + '\\n' + indent + ']';\n                        indent += '\\t';\n                        type = 'array';\n                    }\n                    insertText = prefix + indent + s.bodyText.split('\\n').join('\\n' + indent) + suffix + separatorAfter;\n                    label = label || insertText,\n                        filterText = insertText.replace(/[\\n]/g, ''); // remove new lines\n                }\n                collector.add({\n                    kind: _this.getSuggestionKind(type),\n                    label: label,\n                    documentation: _this.fromMarkup(s.markdownDescription) || s.description,\n                    insertText: insertText,\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    filterText: filterText\n                });\n                hasProposals = true;\n            });\n        }\n        if (!hasProposals && typeof schema.items === 'object' && !Array.isArray(schema.items)) {\n            this.addDefaultValueCompletions(schema.items, separatorAfter, collector, arrayDepth + 1);\n        }\n    };\n    JSONCompletion.prototype.addEnumValueCompletions = function (schema, separatorAfter, collector) {\n        if (isDefined(schema.const)) {\n            collector.add({\n                kind: this.getSuggestionKind(schema.type),\n                label: this.getLabelForValue(schema.const),\n                insertText: this.getInsertTextForValue(schema.const, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                documentation: this.fromMarkup(schema.markdownDescription) || schema.description\n            });\n        }\n        if (Array.isArray(schema.enum)) {\n            for (var i = 0, length = schema.enum.length; i < length; i++) {\n                var enm = schema.enum[i];\n                var documentation = this.fromMarkup(schema.markdownDescription) || schema.description;\n                if (schema.markdownEnumDescriptions && i < schema.markdownEnumDescriptions.length && this.doesSupportMarkdown()) {\n                    documentation = this.fromMarkup(schema.markdownEnumDescriptions[i]);\n                }\n                else if (schema.enumDescriptions && i < schema.enumDescriptions.length) {\n                    documentation = schema.enumDescriptions[i];\n                }\n                collector.add({\n                    kind: this.getSuggestionKind(schema.type),\n                    label: this.getLabelForValue(enm),\n                    insertText: this.getInsertTextForValue(enm, separatorAfter),\n                    insertTextFormat: InsertTextFormat.Snippet,\n                    documentation: documentation\n                });\n            }\n        }\n    };\n    JSONCompletion.prototype.collectTypes = function (schema, types) {\n        if (Array.isArray(schema.enum) || isDefined(schema.const)) {\n            return;\n        }\n        var type = schema.type;\n        if (Array.isArray(type)) {\n            type.forEach(function (t) { return types[t] = true; });\n        }\n        else {\n            types[type] = true;\n        }\n    };\n    JSONCompletion.prototype.addFillerValueCompletions = function (types, separatorAfter, collector) {\n        if (types['object']) {\n            collector.add({\n                kind: this.getSuggestionKind('object'),\n                label: '{}',\n                insertText: this.getInsertTextForGuessedValue({}, separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('defaults.object', 'New object'),\n                documentation: ''\n            });\n        }\n        if (types['array']) {\n            collector.add({\n                kind: this.getSuggestionKind('array'),\n                label: '[]',\n                insertText: this.getInsertTextForGuessedValue([], separatorAfter),\n                insertTextFormat: InsertTextFormat.Snippet,\n                detail: localize('defaults.array', 'New array'),\n                documentation: ''\n            });\n        }\n    };\n    JSONCompletion.prototype.addBooleanValueCompletion = function (value, separatorAfter, collector) {\n        collector.add({\n            kind: this.getSuggestionKind('boolean'),\n            label: value ? 'true' : 'false',\n            insertText: this.getInsertTextForValue(value, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: ''\n        });\n    };\n    JSONCompletion.prototype.addNullValueCompletion = function (separatorAfter, collector) {\n        collector.add({\n            kind: this.getSuggestionKind('null'),\n            label: 'null',\n            insertText: 'null' + separatorAfter,\n            insertTextFormat: InsertTextFormat.Snippet,\n            documentation: ''\n        });\n    };\n    JSONCompletion.prototype.addDollarSchemaCompletions = function (separatorAfter, collector) {\n        var _this = this;\n        var schemaIds = this.schemaService.getRegisteredSchemaIds(function (schema) { return schema === 'http' || schema === 'https'; });\n        schemaIds.forEach(function (schemaId) { return collector.add({\n            kind: CompletionItemKind.Module,\n            label: _this.getLabelForValue(schemaId),\n            filterText: _this.getFilterTextForValue(schemaId),\n            insertText: _this.getInsertTextForValue(schemaId, separatorAfter),\n            insertTextFormat: InsertTextFormat.Snippet, documentation: ''\n        }); });\n    };\n    JSONCompletion.prototype.getLabelForValue = function (value) {\n        return JSON.stringify(value);\n    };\n    JSONCompletion.prototype.getFilterTextForValue = function (value) {\n        return JSON.stringify(value);\n    };\n    JSONCompletion.prototype.getFilterTextForSnippetValue = function (value) {\n        return JSON.stringify(value).replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, '$1');\n    };\n    JSONCompletion.prototype.getLabelForSnippetValue = function (value) {\n        var label = JSON.stringify(value);\n        return label.replace(/\\$\\{\\d+:([^}]+)\\}|\\$\\d+/g, '$1');\n    };\n    JSONCompletion.prototype.getInsertTextForPlainText = function (text) {\n        return text.replace(/[\\\\\\$\\}]/g, '\\\\$&'); // escape $, \\ and } \n    };\n    JSONCompletion.prototype.getInsertTextForValue = function (value, separatorAfter) {\n        var text = JSON.stringify(value, null, '\\t');\n        if (text === '{}') {\n            return '{$1}' + separatorAfter;\n        }\n        else if (text === '[]') {\n            return '[$1]' + separatorAfter;\n        }\n        return this.getInsertTextForPlainText(text + separatorAfter);\n    };\n    JSONCompletion.prototype.getInsertTextForSnippetValue = function (value, separatorAfter) {\n        var replacer = function (value) {\n            if (typeof value === 'string') {\n                if (value[0] === '^') {\n                    return value.substr(1);\n                }\n            }\n            return JSON.stringify(value);\n        };\n        return stringifyObject(value, '', replacer) + separatorAfter;\n    };\n    JSONCompletion.prototype.getInsertTextForGuessedValue = function (value, separatorAfter) {\n        switch (typeof value) {\n            case 'object':\n                if (value === null) {\n                    return '${1:null}' + separatorAfter;\n                }\n                return this.getInsertTextForValue(value, separatorAfter);\n            case 'string':\n                var snippetValue = JSON.stringify(value);\n                snippetValue = snippetValue.substr(1, snippetValue.length - 2); // remove quotes\n                snippetValue = this.getInsertTextForPlainText(snippetValue); // escape \\ and }\n                return '\"${1:' + snippetValue + '}\"' + separatorAfter;\n            case 'number':\n            case 'boolean':\n                return '${1:' + JSON.stringify(value) + '}' + separatorAfter;\n        }\n        return this.getInsertTextForValue(value, separatorAfter);\n    };\n    JSONCompletion.prototype.getSuggestionKind = function (type) {\n        if (Array.isArray(type)) {\n            var array = type;\n            type = array.length > 0 ? array[0] : null;\n        }\n        if (!type) {\n            return CompletionItemKind.Value;\n        }\n        switch (type) {\n            case 'string': return CompletionItemKind.Value;\n            case 'object': return CompletionItemKind.Module;\n            case 'property': return CompletionItemKind.Property;\n            default: return CompletionItemKind.Value;\n        }\n    };\n    JSONCompletion.prototype.getLabelTextForMatchingNode = function (node, document) {\n        switch (node.type) {\n            case 'array':\n                return '[]';\n            case 'object':\n                return '{}';\n            default:\n                var content = document.getText().substr(node.offset, node.length);\n                return content;\n        }\n    };\n    JSONCompletion.prototype.getInsertTextForMatchingNode = function (node, document, separatorAfter) {\n        switch (node.type) {\n            case 'array':\n                return this.getInsertTextForValue([], separatorAfter);\n            case 'object':\n                return this.getInsertTextForValue({}, separatorAfter);\n            default:\n                var content = document.getText().substr(node.offset, node.length) + separatorAfter;\n                return this.getInsertTextForPlainText(content);\n        }\n    };\n    JSONCompletion.prototype.getInsertTextForProperty = function (key, propertySchema, addValue, separatorAfter) {\n        var propertyText = this.getInsertTextForValue(key, '');\n        if (!addValue) {\n            return propertyText;\n        }\n        var resultText = propertyText + ': ';\n        var value;\n        var nValueProposals = 0;\n        if (propertySchema) {\n            if (Array.isArray(propertySchema.defaultSnippets)) {\n                if (propertySchema.defaultSnippets.length === 1) {\n                    var body = propertySchema.defaultSnippets[0].body;\n                    if (isDefined(body)) {\n                        value = this.getInsertTextForSnippetValue(body, '');\n                    }\n                }\n                nValueProposals += propertySchema.defaultSnippets.length;\n            }\n            if (propertySchema.enum) {\n                if (!value && propertySchema.enum.length === 1) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.enum[0], '');\n                }\n                nValueProposals += propertySchema.enum.length;\n            }\n            if (isDefined(propertySchema.default)) {\n                if (!value) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.default, '');\n                }\n                nValueProposals++;\n            }\n            if (Array.isArray(propertySchema.examples) && propertySchema.examples.length) {\n                if (!value) {\n                    value = this.getInsertTextForGuessedValue(propertySchema.examples[0], '');\n                }\n                nValueProposals += propertySchema.examples.length;\n            }\n            if (nValueProposals === 0) {\n                var type = Array.isArray(propertySchema.type) ? propertySchema.type[0] : propertySchema.type;\n                if (!type) {\n                    if (propertySchema.properties) {\n                        type = 'object';\n                    }\n                    else if (propertySchema.items) {\n                        type = 'array';\n                    }\n                }\n                switch (type) {\n                    case 'boolean':\n                        value = '$1';\n                        break;\n                    case 'string':\n                        value = '\"$1\"';\n                        break;\n                    case 'object':\n                        value = '{$1}';\n                        break;\n                    case 'array':\n                        value = '[$1]';\n                        break;\n                    case 'number':\n                    case 'integer':\n                        value = '${1:0}';\n                        break;\n                    case 'null':\n                        value = '${1:null}';\n                        break;\n                    default:\n                        return propertyText;\n                }\n            }\n        }\n        if (!value || nValueProposals > 1) {\n            value = '$1';\n        }\n        return resultText + value + separatorAfter;\n    };\n    JSONCompletion.prototype.getCurrentWord = function (document, offset) {\n        var i = offset - 1;\n        var text = document.getText();\n        while (i >= 0 && ' \\t\\n\\r\\v\":{[,]}'.indexOf(text.charAt(i)) === -1) {\n            i--;\n        }\n        return text.substring(i + 1, offset);\n    };\n    JSONCompletion.prototype.evaluateSeparatorAfter = function (document, offset) {\n        var scanner = Json.createScanner(document.getText(), true);\n        scanner.setPosition(offset);\n        var token = scanner.scan();\n        switch (token) {\n            case 5 /* CommaToken */:\n            case 2 /* CloseBraceToken */:\n            case 4 /* CloseBracketToken */:\n            case 17 /* EOF */:\n                return '';\n            default:\n                return ',';\n        }\n    };\n    JSONCompletion.prototype.findItemAtOffset = function (node, document, offset) {\n        var scanner = Json.createScanner(document.getText(), true);\n        var children = node.items;\n        for (var i = children.length - 1; i >= 0; i--) {\n            var child = children[i];\n            if (offset > child.offset + child.length) {\n                scanner.setPosition(child.offset + child.length);\n                var token = scanner.scan();\n                if (token === 5 /* CommaToken */ && offset >= scanner.getTokenOffset() + scanner.getTokenLength()) {\n                    return i + 1;\n                }\n                return i;\n            }\n            else if (offset >= child.offset) {\n                return i;\n            }\n        }\n        return 0;\n    };\n    JSONCompletion.prototype.isInComment = function (document, start, offset) {\n        var scanner = Json.createScanner(document.getText(), false);\n        scanner.setPosition(start);\n        var token = scanner.scan();\n        while (token !== 17 /* EOF */ && (scanner.getTokenOffset() + scanner.getTokenLength() < offset)) {\n            token = scanner.scan();\n        }\n        return (token === 12 /* LineCommentTrivia */ || token === 13 /* BlockCommentTrivia */) && scanner.getTokenOffset() <= offset;\n    };\n    JSONCompletion.prototype.fromMarkup = function (markupString) {\n        if (markupString && this.doesSupportMarkdown()) {\n            return {\n                kind: MarkupKind.Markdown,\n                value: markupString\n            };\n        }\n        return undefined;\n    };\n    JSONCompletion.prototype.doesSupportMarkdown = function () {\n        if (!isDefined(this.supportsMarkdown)) {\n            var completion = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.completion;\n            this.supportsMarkdown = completion && completion.completionItem && Array.isArray(completion.completionItem.documentationFormat) && completion.completionItem.documentationFormat.indexOf(MarkupKind.Markdown) !== -1;\n        }\n        return this.supportsMarkdown;\n    };\n    JSONCompletion.prototype.doesSupportsCommitCharacters = function () {\n        if (!isDefined(this.supportsCommitCharacters)) {\n            var completion = this.clientCapabilities.textDocument && this.clientCapabilities.textDocument.completion;\n            this.supportsCommitCharacters = completion && completion.completionItem && !!completion.completionItem.commitCharactersSupport;\n        }\n        return this.supportsCommitCharacters;\n    };\n    return JSONCompletion;\n}());\nexport { JSONCompletion };\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser.js';\nimport { Range } from '../jsonLanguageTypes.js';\nvar JSONHover = /** @class */ (function () {\n    function JSONHover(schemaService, contributions, promiseConstructor) {\n        if (contributions === void 0) { contributions = []; }\n        this.schemaService = schemaService;\n        this.contributions = contributions;\n        this.promise = promiseConstructor || Promise;\n    }\n    JSONHover.prototype.doHover = function (document, position, doc) {\n        var offset = document.offsetAt(position);\n        var node = doc.getNodeFromOffset(offset);\n        if (!node || (node.type === 'object' || node.type === 'array') && offset > node.offset + 1 && offset < node.offset + node.length - 1) {\n            return this.promise.resolve(null);\n        }\n        var hoverRangeNode = node;\n        // use the property description when hovering over an object key\n        if (node.type === 'string') {\n            var parent = node.parent;\n            if (parent && parent.type === 'property' && parent.keyNode === node) {\n                node = parent.valueNode;\n                if (!node) {\n                    return this.promise.resolve(null);\n                }\n            }\n        }\n        var hoverRange = Range.create(document.positionAt(hoverRangeNode.offset), document.positionAt(hoverRangeNode.offset + hoverRangeNode.length));\n        var createHover = function (contents) {\n            var result = {\n                contents: contents,\n                range: hoverRange\n            };\n            return result;\n        };\n        var location = Parser.getNodePath(node);\n        for (var i = this.contributions.length - 1; i >= 0; i--) {\n            var contribution = this.contributions[i];\n            var promise = contribution.getInfoContribution(document.uri, location);\n            if (promise) {\n                return promise.then(function (htmlContent) { return createHover(htmlContent); });\n            }\n        }\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            if (schema) {\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema, node.offset);\n                var title_1 = null;\n                var markdownDescription_1 = null;\n                var markdownEnumValueDescription_1 = null, enumValue_1 = null;\n                matchingSchemas.every(function (s) {\n                    if (s.node === node && !s.inverted && s.schema) {\n                        title_1 = title_1 || s.schema.title;\n                        markdownDescription_1 = markdownDescription_1 || s.schema.markdownDescription || toMarkdown(s.schema.description);\n                        if (s.schema.enum) {\n                            var idx = s.schema.enum.indexOf(Parser.getNodeValue(node));\n                            if (s.schema.markdownEnumDescriptions) {\n                                markdownEnumValueDescription_1 = s.schema.markdownEnumDescriptions[idx];\n                            }\n                            else if (s.schema.enumDescriptions) {\n                                markdownEnumValueDescription_1 = toMarkdown(s.schema.enumDescriptions[idx]);\n                            }\n                            if (markdownEnumValueDescription_1) {\n                                enumValue_1 = s.schema.enum[idx];\n                                if (typeof enumValue_1 !== 'string') {\n                                    enumValue_1 = JSON.stringify(enumValue_1);\n                                }\n                            }\n                        }\n                    }\n                    return true;\n                });\n                var result = '';\n                if (title_1) {\n                    result = toMarkdown(title_1);\n                }\n                if (markdownDescription_1) {\n                    if (result.length > 0) {\n                        result += \"\\n\\n\";\n                    }\n                    result += markdownDescription_1;\n                }\n                if (markdownEnumValueDescription_1) {\n                    if (result.length > 0) {\n                        result += \"\\n\\n\";\n                    }\n                    result += \"`\" + toMarkdownCodeBlock(enumValue_1) + \"`: \" + markdownEnumValueDescription_1;\n                }\n                return createHover([result]);\n            }\n            return null;\n        });\n    };\n    return JSONHover;\n}());\nexport { JSONHover };\nfunction toMarkdown(plain) {\n    if (plain) {\n        var res = plain.replace(/([^\\n\\r])(\\r?\\n)([^\\n\\r])/gm, '$1\\n\\n$3'); // single new lines to \\n\\n (Markdown paragraph)\n        return res.replace(/[\\\\`*_{}[\\]()#+\\-.!]/g, \"\\\\$&\"); // escape markdown syntax tokens: http://daringfireball.net/projects/markdown/syntax#backslash\n    }\n    return void 0;\n}\nfunction toMarkdownCodeBlock(content) {\n    // see https://daringfireball.net/projects/markdown/syntax#precode\n    if (content.indexOf('`') !== -1) {\n        return '`` ' + content + ' ``';\n    }\n    return content;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Json from './../../jsonc-parser/main.js';\nimport { URI } from './../../vscode-uri/index.js';\nimport * as Strings from '../utils/strings.js';\nimport * as Parser from '../parser/jsonParser.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nvar FilePatternAssociation = /** @class */ (function () {\n    function FilePatternAssociation(pattern) {\n        try {\n            this.patternRegExp = new RegExp(Strings.convertSimple2RegExpPattern(pattern) + '$');\n        }\n        catch (e) {\n            // invalid pattern\n            this.patternRegExp = null;\n        }\n        this.schemas = [];\n    }\n    FilePatternAssociation.prototype.addSchema = function (id) {\n        this.schemas.push(id);\n    };\n    FilePatternAssociation.prototype.matchesPattern = function (fileName) {\n        return this.patternRegExp && this.patternRegExp.test(fileName);\n    };\n    FilePatternAssociation.prototype.getSchemas = function () {\n        return this.schemas;\n    };\n    return FilePatternAssociation;\n}());\nvar SchemaHandle = /** @class */ (function () {\n    function SchemaHandle(service, url, unresolvedSchemaContent) {\n        this.service = service;\n        this.url = url;\n        this.dependencies = {};\n        if (unresolvedSchemaContent) {\n            this.unresolvedSchema = this.service.promise.resolve(new UnresolvedSchema(unresolvedSchemaContent));\n        }\n    }\n    SchemaHandle.prototype.getUnresolvedSchema = function () {\n        if (!this.unresolvedSchema) {\n            this.unresolvedSchema = this.service.loadSchema(this.url);\n        }\n        return this.unresolvedSchema;\n    };\n    SchemaHandle.prototype.getResolvedSchema = function () {\n        var _this = this;\n        if (!this.resolvedSchema) {\n            this.resolvedSchema = this.getUnresolvedSchema().then(function (unresolved) {\n                return _this.service.resolveSchemaContent(unresolved, _this.url, _this.dependencies);\n            });\n        }\n        return this.resolvedSchema;\n    };\n    SchemaHandle.prototype.clearSchema = function () {\n        this.resolvedSchema = null;\n        this.unresolvedSchema = null;\n        this.dependencies = {};\n    };\n    return SchemaHandle;\n}());\nvar UnresolvedSchema = /** @class */ (function () {\n    function UnresolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    return UnresolvedSchema;\n}());\nexport { UnresolvedSchema };\nvar ResolvedSchema = /** @class */ (function () {\n    function ResolvedSchema(schema, errors) {\n        if (errors === void 0) { errors = []; }\n        this.schema = schema;\n        this.errors = errors;\n    }\n    ResolvedSchema.prototype.getSection = function (path) {\n        return Parser.asSchema(this.getSectionRecursive(path, this.schema));\n    };\n    ResolvedSchema.prototype.getSectionRecursive = function (path, schema) {\n        if (!schema || typeof schema === 'boolean' || path.length === 0) {\n            return schema;\n        }\n        var next = path.shift();\n        if (schema.properties && typeof schema.properties[next]) {\n            return this.getSectionRecursive(path, schema.properties[next]);\n        }\n        else if (schema.patternProperties) {\n            for (var _i = 0, _a = Object.keys(schema.patternProperties); _i < _a.length; _i++) {\n                var pattern = _a[_i];\n                var regex = new RegExp(pattern);\n                if (regex.test(next)) {\n                    return this.getSectionRecursive(path, schema.patternProperties[pattern]);\n                }\n            }\n        }\n        else if (typeof schema.additionalProperties === 'object') {\n            return this.getSectionRecursive(path, schema.additionalProperties);\n        }\n        else if (next.match('[0-9]+')) {\n            if (Array.isArray(schema.items)) {\n                var index = parseInt(next, 10);\n                if (!isNaN(index) && schema.items[index]) {\n                    return this.getSectionRecursive(path, schema.items[index]);\n                }\n            }\n            else if (schema.items) {\n                return this.getSectionRecursive(path, schema.items);\n            }\n        }\n        return null;\n    };\n    return ResolvedSchema;\n}());\nexport { ResolvedSchema };\nvar JSONSchemaService = /** @class */ (function () {\n    function JSONSchemaService(requestService, contextService, promiseConstructor) {\n        this.contextService = contextService;\n        this.requestService = requestService;\n        this.promiseConstructor = promiseConstructor || Promise;\n        this.callOnDispose = [];\n        this.contributionSchemas = {};\n        this.contributionAssociations = {};\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.filePatternAssociationById = {};\n        this.registeredSchemasIds = {};\n    }\n    JSONSchemaService.prototype.getRegisteredSchemaIds = function (filter) {\n        return Object.keys(this.registeredSchemasIds).filter(function (id) {\n            var scheme = URI.parse(id).scheme;\n            return scheme !== 'schemaservice' && (!filter || filter(scheme));\n        });\n    };\n    Object.defineProperty(JSONSchemaService.prototype, \"promise\", {\n        get: function () {\n            return this.promiseConstructor;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    JSONSchemaService.prototype.dispose = function () {\n        while (this.callOnDispose.length > 0) {\n            this.callOnDispose.pop()();\n        }\n    };\n    JSONSchemaService.prototype.onResourceChange = function (uri) {\n        var _this = this;\n        var hasChanges = false;\n        uri = this.normalizeId(uri);\n        var toWalk = [uri];\n        var all = Object.keys(this.schemasById).map(function (key) { return _this.schemasById[key]; });\n        while (toWalk.length) {\n            var curr = toWalk.pop();\n            for (var i = 0; i < all.length; i++) {\n                var handle = all[i];\n                if (handle && (handle.url === curr || handle.dependencies[curr])) {\n                    if (handle.url !== curr) {\n                        toWalk.push(handle.url);\n                    }\n                    handle.clearSchema();\n                    all[i] = undefined;\n                    hasChanges = true;\n                }\n            }\n        }\n        return hasChanges;\n    };\n    JSONSchemaService.prototype.normalizeId = function (id) {\n        // remove trailing '#', normalize drive capitalization\n        try {\n            return URI.parse(id).toString();\n        }\n        catch (e) {\n            return id;\n        }\n    };\n    JSONSchemaService.prototype.setSchemaContributions = function (schemaContributions) {\n        if (schemaContributions.schemas) {\n            var schemas = schemaContributions.schemas;\n            for (var id in schemas) {\n                var normalizedId = this.normalizeId(id);\n                this.contributionSchemas[normalizedId] = this.addSchemaHandle(normalizedId, schemas[id]);\n            }\n        }\n        if (schemaContributions.schemaAssociations) {\n            var schemaAssociations = schemaContributions.schemaAssociations;\n            for (var pattern in schemaAssociations) {\n                var associations = schemaAssociations[pattern];\n                this.contributionAssociations[pattern] = associations;\n                var fpa = this.getOrAddFilePatternAssociation(pattern);\n                for (var _i = 0, associations_1 = associations; _i < associations_1.length; _i++) {\n                    var schemaId = associations_1[_i];\n                    var id = this.normalizeId(schemaId);\n                    fpa.addSchema(id);\n                }\n            }\n        }\n    };\n    JSONSchemaService.prototype.addSchemaHandle = function (id, unresolvedSchemaContent) {\n        var schemaHandle = new SchemaHandle(this, id, unresolvedSchemaContent);\n        this.schemasById[id] = schemaHandle;\n        return schemaHandle;\n    };\n    JSONSchemaService.prototype.getOrAddSchemaHandle = function (id, unresolvedSchemaContent) {\n        return this.schemasById[id] || this.addSchemaHandle(id, unresolvedSchemaContent);\n    };\n    JSONSchemaService.prototype.getOrAddFilePatternAssociation = function (pattern) {\n        var fpa = this.filePatternAssociationById[pattern];\n        if (!fpa) {\n            fpa = new FilePatternAssociation(pattern);\n            this.filePatternAssociationById[pattern] = fpa;\n            this.filePatternAssociations.push(fpa);\n        }\n        return fpa;\n    };\n    JSONSchemaService.prototype.registerExternalSchema = function (uri, filePatterns, unresolvedSchemaContent) {\n        if (filePatterns === void 0) { filePatterns = null; }\n        var id = this.normalizeId(uri);\n        this.registeredSchemasIds[id] = true;\n        if (filePatterns) {\n            for (var _i = 0, filePatterns_1 = filePatterns; _i < filePatterns_1.length; _i++) {\n                var pattern = filePatterns_1[_i];\n                this.getOrAddFilePatternAssociation(pattern).addSchema(id);\n            }\n        }\n        return unresolvedSchemaContent ? this.addSchemaHandle(id, unresolvedSchemaContent) : this.getOrAddSchemaHandle(id);\n    };\n    JSONSchemaService.prototype.clearExternalSchemas = function () {\n        this.schemasById = {};\n        this.filePatternAssociations = [];\n        this.filePatternAssociationById = {};\n        this.registeredSchemasIds = {};\n        for (var id in this.contributionSchemas) {\n            this.schemasById[id] = this.contributionSchemas[id];\n            this.registeredSchemasIds[id] = true;\n        }\n        for (var pattern in this.contributionAssociations) {\n            var fpa = this.getOrAddFilePatternAssociation(pattern);\n            for (var _i = 0, _a = this.contributionAssociations[pattern]; _i < _a.length; _i++) {\n                var schemaId = _a[_i];\n                var id = this.normalizeId(schemaId);\n                fpa.addSchema(id);\n            }\n        }\n    };\n    JSONSchemaService.prototype.getResolvedSchema = function (schemaId) {\n        var id = this.normalizeId(schemaId);\n        var schemaHandle = this.schemasById[id];\n        if (schemaHandle) {\n            return schemaHandle.getResolvedSchema();\n        }\n        return this.promise.resolve(null);\n    };\n    JSONSchemaService.prototype.loadSchema = function (url) {\n        if (!this.requestService) {\n            var errorMessage = localize('json.schema.norequestservice', 'Unable to load schema from \\'{0}\\'. No schema request service available', toDisplayString(url));\n            return this.promise.resolve(new UnresolvedSchema({}, [errorMessage]));\n        }\n        return this.requestService(url).then(function (content) {\n            if (!content) {\n                var errorMessage = localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': No content.', toDisplayString(url));\n                return new UnresolvedSchema({}, [errorMessage]);\n            }\n            var schemaContent = {};\n            var jsonErrors = [];\n            schemaContent = Json.parse(content, jsonErrors);\n            var errors = jsonErrors.length ? [localize('json.schema.invalidFormat', 'Unable to parse content from \\'{0}\\': Parse error at offset {1}.', toDisplayString(url), jsonErrors[0].offset)] : [];\n            return new UnresolvedSchema(schemaContent, errors);\n        }, function (error) {\n            var errorMessage = error.toString();\n            var errorSplit = error.toString().split('Error: ');\n            if (errorSplit.length > 1) {\n                // more concise error message, URL and context are attached by caller anyways\n                errorMessage = errorSplit[1];\n            }\n            if (Strings.endsWith(errorMessage, '.')) {\n                errorMessage = errorMessage.substr(0, errorMessage.length - 1);\n            }\n            return new UnresolvedSchema({}, [localize('json.schema.nocontent', 'Unable to load schema from \\'{0}\\': {1}.', toDisplayString(url), errorMessage)]);\n        });\n    };\n    JSONSchemaService.prototype.resolveSchemaContent = function (schemaToResolve, schemaURL, dependencies) {\n        var _this = this;\n        var resolveErrors = schemaToResolve.errors.slice(0);\n        var schema = schemaToResolve.schema;\n        if (schema.$schema) {\n            var id = this.normalizeId(schema.$schema);\n            if (id === 'http://json-schema.org/draft-03/schema') {\n                return this.promise.resolve(new ResolvedSchema({}, [localize('json.schema.draft03.notsupported', \"Draft-03 schemas are not supported.\")]));\n            }\n            else if (id === 'https://json-schema.org/draft/2019-09/schema') {\n                schemaToResolve.errors.push(localize('json.schema.draft201909.notsupported', \"Draft 2019-09 schemas are not yet fully supported.\"));\n            }\n        }\n        var contextService = this.contextService;\n        var findSection = function (schema, path) {\n            if (!path) {\n                return schema;\n            }\n            var current = schema;\n            if (path[0] === '/') {\n                path = path.substr(1);\n            }\n            path.split('/').some(function (part) {\n                current = current[part];\n                return !current;\n            });\n            return current;\n        };\n        var merge = function (target, sourceRoot, sourceURI, path) {\n            var section = findSection(sourceRoot, path);\n            if (section) {\n                for (var key in section) {\n                    if (section.hasOwnProperty(key) && !target.hasOwnProperty(key)) {\n                        target[key] = section[key];\n                    }\n                }\n            }\n            else {\n                resolveErrors.push(localize('json.schema.invalidref', '$ref \\'{0}\\' in \\'{1}\\' can not be resolved.', path, sourceURI));\n            }\n        };\n        var resolveExternalLink = function (node, uri, linkPath, parentSchemaURL, parentSchemaDependencies) {\n            if (contextService && !/^\\w+:\\/\\/.*/.test(uri)) {\n                uri = contextService.resolveRelativePath(uri, parentSchemaURL);\n            }\n            uri = _this.normalizeId(uri);\n            var referencedHandle = _this.getOrAddSchemaHandle(uri);\n            return referencedHandle.getUnresolvedSchema().then(function (unresolvedSchema) {\n                parentSchemaDependencies[uri] = true;\n                if (unresolvedSchema.errors.length) {\n                    var loc = linkPath ? uri + '#' + linkPath : uri;\n                    resolveErrors.push(localize('json.schema.problemloadingref', 'Problems loading reference \\'{0}\\': {1}', loc, unresolvedSchema.errors[0]));\n                }\n                merge(node, unresolvedSchema.schema, uri, linkPath);\n                return resolveRefs(node, unresolvedSchema.schema, uri, referencedHandle.dependencies);\n            });\n        };\n        var resolveRefs = function (node, parentSchema, parentSchemaURL, parentSchemaDependencies) {\n            if (!node || typeof node !== 'object') {\n                return Promise.resolve(null);\n            }\n            var toWalk = [node];\n            var seen = [];\n            var openPromises = [];\n            var collectEntries = function () {\n                var entries = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    entries[_i] = arguments[_i];\n                }\n                for (var _a = 0, entries_1 = entries; _a < entries_1.length; _a++) {\n                    var entry = entries_1[_a];\n                    if (typeof entry === 'object') {\n                        toWalk.push(entry);\n                    }\n                }\n            };\n            var collectMapEntries = function () {\n                var maps = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    maps[_i] = arguments[_i];\n                }\n                for (var _a = 0, maps_1 = maps; _a < maps_1.length; _a++) {\n                    var map = maps_1[_a];\n                    if (typeof map === 'object') {\n                        for (var key in map) {\n                            var entry = map[key];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var collectArrayEntries = function () {\n                var arrays = [];\n                for (var _i = 0; _i < arguments.length; _i++) {\n                    arrays[_i] = arguments[_i];\n                }\n                for (var _a = 0, arrays_1 = arrays; _a < arrays_1.length; _a++) {\n                    var array = arrays_1[_a];\n                    if (Array.isArray(array)) {\n                        for (var _b = 0, array_1 = array; _b < array_1.length; _b++) {\n                            var entry = array_1[_b];\n                            if (typeof entry === 'object') {\n                                toWalk.push(entry);\n                            }\n                        }\n                    }\n                }\n            };\n            var handleRef = function (next) {\n                var seenRefs = [];\n                while (next.$ref) {\n                    var ref = next.$ref;\n                    var segments = ref.split('#', 2);\n                    delete next.$ref;\n                    if (segments[0].length > 0) {\n                        openPromises.push(resolveExternalLink(next, segments[0], segments[1], parentSchemaURL, parentSchemaDependencies));\n                        return;\n                    }\n                    else {\n                        if (seenRefs.indexOf(ref) === -1) {\n                            merge(next, parentSchema, parentSchemaURL, segments[1]); // can set next.$ref again, use seenRefs to avoid circle\n                            seenRefs.push(ref);\n                        }\n                    }\n                }\n                collectEntries(next.items, next.additionalProperties, next.not, next.contains, next.propertyNames, next.if, next.then, next.else);\n                collectMapEntries(next.definitions, next.properties, next.patternProperties, next.dependencies);\n                collectArrayEntries(next.anyOf, next.allOf, next.oneOf, next.items);\n            };\n            while (toWalk.length) {\n                var next = toWalk.pop();\n                if (seen.indexOf(next) >= 0) {\n                    continue;\n                }\n                seen.push(next);\n                handleRef(next);\n            }\n            return _this.promise.all(openPromises);\n        };\n        return resolveRefs(schema, schema, schemaURL, dependencies).then(function (_) { return new ResolvedSchema(schema, resolveErrors); });\n    };\n    JSONSchemaService.prototype.getSchemaForResource = function (resource, document) {\n        // first use $schema if present\n        if (document && document.root && document.root.type === 'object') {\n            var schemaProperties = document.root.properties.filter(function (p) { return (p.keyNode.value === '$schema') && p.valueNode && p.valueNode.type === 'string'; });\n            if (schemaProperties.length > 0) {\n                var schemeId = Parser.getNodeValue(schemaProperties[0].valueNode);\n                if (schemeId && Strings.startsWith(schemeId, '.') && this.contextService) {\n                    schemeId = this.contextService.resolveRelativePath(schemeId, resource);\n                }\n                if (schemeId) {\n                    var id = this.normalizeId(schemeId);\n                    return this.getOrAddSchemaHandle(id).getResolvedSchema();\n                }\n            }\n        }\n        var seen = Object.create(null);\n        var schemas = [];\n        for (var _i = 0, _a = this.filePatternAssociations; _i < _a.length; _i++) {\n            var entry = _a[_i];\n            if (entry.matchesPattern(resource)) {\n                for (var _b = 0, _c = entry.getSchemas(); _b < _c.length; _b++) {\n                    var schemaId = _c[_b];\n                    if (!seen[schemaId]) {\n                        schemas.push(schemaId);\n                        seen[schemaId] = true;\n                    }\n                }\n            }\n        }\n        if (schemas.length > 0) {\n            return this.createCombinedSchema(resource, schemas).getResolvedSchema();\n        }\n        return this.promise.resolve(null);\n    };\n    JSONSchemaService.prototype.createCombinedSchema = function (resource, schemaIds) {\n        if (schemaIds.length === 1) {\n            return this.getOrAddSchemaHandle(schemaIds[0]);\n        }\n        else {\n            var combinedSchemaId = 'schemaservice://combinedSchema/' + encodeURIComponent(resource);\n            var combinedSchema = {\n                allOf: schemaIds.map(function (schemaId) { return ({ $ref: schemaId }); })\n            };\n            return this.addSchemaHandle(combinedSchemaId, combinedSchema);\n        }\n    };\n    return JSONSchemaService;\n}());\nexport { JSONSchemaService };\nfunction toDisplayString(url) {\n    try {\n        var uri = URI.parse(url);\n        if (uri.scheme === 'file') {\n            return uri.fsPath;\n        }\n    }\n    catch (e) {\n        // ignore\n    }\n    return url;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport { UnresolvedSchema } from './jsonSchemaService.js';\nimport { ErrorCode, Diagnostic, DiagnosticSeverity, Range } from '../jsonLanguageTypes.js';\nimport * as nls from './../../../fillers/vscode-nls.js';\nimport { isBoolean } from '../utils/objects.js';\nvar localize = nls.loadMessageBundle();\nvar JSONValidation = /** @class */ (function () {\n    function JSONValidation(jsonSchemaService, promiseConstructor) {\n        this.jsonSchemaService = jsonSchemaService;\n        this.promise = promiseConstructor;\n        this.validationEnabled = true;\n    }\n    JSONValidation.prototype.configure = function (raw) {\n        if (raw) {\n            this.validationEnabled = raw.validate;\n            this.commentSeverity = raw.allowComments ? void 0 : DiagnosticSeverity.Error;\n        }\n    };\n    JSONValidation.prototype.doValidation = function (textDocument, jsonDocument, documentSettings, schema) {\n        var _this = this;\n        if (!this.validationEnabled) {\n            return this.promise.resolve([]);\n        }\n        var diagnostics = [];\n        var added = {};\n        var addProblem = function (problem) {\n            // remove duplicated messages\n            var signature = problem.range.start.line + ' ' + problem.range.start.character + ' ' + problem.message;\n            if (!added[signature]) {\n                added[signature] = true;\n                diagnostics.push(problem);\n            }\n        };\n        var getDiagnostics = function (schema) {\n            var trailingCommaSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.trailingCommas) : DiagnosticSeverity.Error;\n            var commentSeverity = documentSettings ? toDiagnosticSeverity(documentSettings.comments) : _this.commentSeverity;\n            if (schema) {\n                if (schema.errors.length && jsonDocument.root) {\n                    var astRoot = jsonDocument.root;\n                    var property = astRoot.type === 'object' ? astRoot.properties[0] : null;\n                    if (property && property.keyNode.value === '$schema') {\n                        var node = property.valueNode || property;\n                        var range = Range.create(textDocument.positionAt(node.offset), textDocument.positionAt(node.offset + node.length));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                    else {\n                        var range = Range.create(textDocument.positionAt(astRoot.offset), textDocument.positionAt(astRoot.offset + 1));\n                        addProblem(Diagnostic.create(range, schema.errors[0], DiagnosticSeverity.Warning, ErrorCode.SchemaResolveError));\n                    }\n                }\n                else {\n                    var semanticErrors = jsonDocument.validate(textDocument, schema.schema);\n                    if (semanticErrors) {\n                        semanticErrors.forEach(addProblem);\n                    }\n                }\n                if (schemaAllowsComments(schema.schema)) {\n                    commentSeverity = void 0;\n                }\n                if (schemaAllowsTrailingCommas(schema.schema)) {\n                    trailingCommaSeverity = void 0;\n                }\n            }\n            for (var _i = 0, _a = jsonDocument.syntaxErrors; _i < _a.length; _i++) {\n                var p = _a[_i];\n                if (p.code === ErrorCode.TrailingComma) {\n                    if (typeof trailingCommaSeverity !== 'number') {\n                        continue;\n                    }\n                    p.severity = trailingCommaSeverity;\n                }\n                addProblem(p);\n            }\n            if (typeof commentSeverity === 'number') {\n                var message_1 = localize('InvalidCommentToken', 'Comments are not permitted in JSON.');\n                jsonDocument.comments.forEach(function (c) {\n                    addProblem(Diagnostic.create(c, message_1, commentSeverity, ErrorCode.CommentNotPermitted));\n                });\n            }\n            return diagnostics;\n        };\n        if (schema) {\n            var id = schema.id || ('schemaservice://untitled/' + idCounter++);\n            return this.jsonSchemaService.resolveSchemaContent(new UnresolvedSchema(schema), id, {}).then(function (resolvedSchema) {\n                return getDiagnostics(resolvedSchema);\n            });\n        }\n        return this.jsonSchemaService.getSchemaForResource(textDocument.uri, jsonDocument).then(function (schema) {\n            return getDiagnostics(schema);\n        });\n    };\n    return JSONValidation;\n}());\nexport { JSONValidation };\nvar idCounter = 0;\nfunction schemaAllowsComments(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowComments)) {\n            return schemaRef.allowComments;\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsComments(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction schemaAllowsTrailingCommas(schemaRef) {\n    if (schemaRef && typeof schemaRef === 'object') {\n        if (isBoolean(schemaRef.allowTrailingCommas)) {\n            return schemaRef.allowTrailingCommas;\n        }\n        if (isBoolean(schemaRef['allowsTrailingCommas'])) { // deprecated\n            return schemaRef['allowsTrailingCommas'];\n        }\n        if (schemaRef.allOf) {\n            for (var _i = 0, _a = schemaRef.allOf; _i < _a.length; _i++) {\n                var schema = _a[_i];\n                var allow = schemaAllowsTrailingCommas(schema);\n                if (isBoolean(allow)) {\n                    return allow;\n                }\n            }\n        }\n    }\n    return undefined;\n}\nfunction toDiagnosticSeverity(severityLevel) {\n    switch (severityLevel) {\n        case 'error': return DiagnosticSeverity.Error;\n        case 'warning': return DiagnosticSeverity.Warning;\n        case 'ignore': return void 0;\n    }\n    return void 0;\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nvar Digit0 = 48;\nvar Digit9 = 57;\nvar A = 65;\nvar a = 97;\nvar f = 102;\nexport function hexDigit(charCode) {\n    if (charCode < Digit0) {\n        return 0;\n    }\n    if (charCode <= Digit9) {\n        return charCode - Digit0;\n    }\n    if (charCode < a) {\n        charCode += (a - A);\n    }\n    if (charCode >= a && charCode <= f) {\n        return charCode - a + 10;\n    }\n    return 0;\n}\nexport function colorFromHex(text) {\n    if (text[0] !== '#') {\n        return null;\n    }\n    switch (text.length) {\n        case 4:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: 1\n            };\n        case 5:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x11) / 255.0,\n                green: (hexDigit(text.charCodeAt(2)) * 0x11) / 255.0,\n                blue: (hexDigit(text.charCodeAt(3)) * 0x11) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(4)) * 0x11) / 255.0,\n            };\n        case 7:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: 1\n            };\n        case 9:\n            return {\n                red: (hexDigit(text.charCodeAt(1)) * 0x10 + hexDigit(text.charCodeAt(2))) / 255.0,\n                green: (hexDigit(text.charCodeAt(3)) * 0x10 + hexDigit(text.charCodeAt(4))) / 255.0,\n                blue: (hexDigit(text.charCodeAt(5)) * 0x10 + hexDigit(text.charCodeAt(6))) / 255.0,\n                alpha: (hexDigit(text.charCodeAt(7)) * 0x10 + hexDigit(text.charCodeAt(8))) / 255.0\n            };\n    }\n    return null;\n}\nexport function colorFrom256RGB(red, green, blue, alpha) {\n    if (alpha === void 0) { alpha = 1.0; }\n    return {\n        red: red / 255.0,\n        green: green / 255.0,\n        blue: blue / 255.0,\n        alpha: alpha\n    };\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as Parser from '../parser/jsonParser.js';\nimport * as Strings from '../utils/strings.js';\nimport { colorFromHex } from '../utils/colors.js';\nimport { Range, TextEdit, SymbolKind, Location } from \"../jsonLanguageTypes.js\";\nvar JSONDocumentSymbols = /** @class */ (function () {\n    function JSONDocumentSymbols(schemaService) {\n        this.schemaService = schemaService;\n    }\n    JSONDocumentSymbols.prototype.findDocumentSymbols = function (document, doc, context) {\n        var _this = this;\n        if (context === void 0) { context = { resultLimit: Number.MAX_VALUE }; }\n        var root = doc.root;\n        if (!root) {\n            return null;\n        }\n        var limit = context.resultLimit;\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_1 = [];\n                for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.type === 'object') {\n                        for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n                            var property = _c[_b];\n                            if (property.keyNode.value === 'key' && property.valueNode) {\n                                var location = Location.create(document.uri, getRange(document, item));\n                                result_1.push({ name: Parser.getNodeValue(property.valueNode), kind: SymbolKind.Function, location: location });\n                                limit--;\n                                if (limit <= 0) {\n                                    if (context && context.onResultLimitExceeded) {\n                                        context.onResultLimitExceeded(resourceString);\n                                    }\n                                    return result_1;\n                                }\n                            }\n                        }\n                    }\n                }\n                return result_1;\n            }\n        }\n        var toVisit = [\n            { node: root, containerName: '' }\n        ];\n        var nextToVisit = 0;\n        var limitExceeded = false;\n        var result = [];\n        var collectOutlineEntries = function (node, containerName) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node) {\n                    if (node) {\n                        toVisit.push({ node: node, containerName: containerName });\n                    }\n                });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        if (limit > 0) {\n                            limit--;\n                            var location = Location.create(document.uri, getRange(document, property));\n                            var childContainerName = containerName ? containerName + '.' + property.keyNode.value : property.keyNode.value;\n                            result.push({ name: _this.getKeyLabel(property), kind: _this.getSymbolKind(valueNode.type), location: location, containerName: containerName });\n                            toVisit.push({ node: valueNode, containerName: childContainerName });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n        };\n        // breath first traversal\n        while (nextToVisit < toVisit.length) {\n            var next = toVisit[nextToVisit++];\n            collectOutlineEntries(next.node, next.containerName);\n        }\n        if (limitExceeded && context && context.onResultLimitExceeded) {\n            context.onResultLimitExceeded(resourceString);\n        }\n        return result;\n    };\n    JSONDocumentSymbols.prototype.findDocumentSymbols2 = function (document, doc, context) {\n        var _this = this;\n        if (context === void 0) { context = { resultLimit: Number.MAX_VALUE }; }\n        var root = doc.root;\n        if (!root) {\n            return null;\n        }\n        var limit = context.resultLimit;\n        // special handling for key bindings\n        var resourceString = document.uri;\n        if ((resourceString === 'vscode://defaultsettings/keybindings.json') || Strings.endsWith(resourceString.toLowerCase(), '/user/keybindings.json')) {\n            if (root.type === 'array') {\n                var result_2 = [];\n                for (var _i = 0, _a = root.items; _i < _a.length; _i++) {\n                    var item = _a[_i];\n                    if (item.type === 'object') {\n                        for (var _b = 0, _c = item.properties; _b < _c.length; _b++) {\n                            var property = _c[_b];\n                            if (property.keyNode.value === 'key' && property.valueNode) {\n                                var range = getRange(document, item);\n                                var selectionRange = getRange(document, property.keyNode);\n                                result_2.push({ name: Parser.getNodeValue(property.valueNode), kind: SymbolKind.Function, range: range, selectionRange: selectionRange });\n                                limit--;\n                                if (limit <= 0) {\n                                    if (context && context.onResultLimitExceeded) {\n                                        context.onResultLimitExceeded(resourceString);\n                                    }\n                                    return result_2;\n                                }\n                            }\n                        }\n                    }\n                }\n                return result_2;\n            }\n        }\n        var result = [];\n        var toVisit = [\n            { node: root, result: result }\n        ];\n        var nextToVisit = 0;\n        var limitExceeded = false;\n        var collectOutlineEntries = function (node, result) {\n            if (node.type === 'array') {\n                node.items.forEach(function (node, index) {\n                    if (node) {\n                        if (limit > 0) {\n                            limit--;\n                            var range = getRange(document, node);\n                            var selectionRange = range;\n                            var name = String(index);\n                            var symbol = { name: name, kind: _this.getSymbolKind(node.type), range: range, selectionRange: selectionRange, children: [] };\n                            result.push(symbol);\n                            toVisit.push({ result: symbol.children, node: node });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n            else if (node.type === 'object') {\n                node.properties.forEach(function (property) {\n                    var valueNode = property.valueNode;\n                    if (valueNode) {\n                        if (limit > 0) {\n                            limit--;\n                            var range = getRange(document, property);\n                            var selectionRange = getRange(document, property.keyNode);\n                            var symbol = { name: _this.getKeyLabel(property), kind: _this.getSymbolKind(valueNode.type), range: range, selectionRange: selectionRange, children: [] };\n                            result.push(symbol);\n                            toVisit.push({ result: symbol.children, node: valueNode });\n                        }\n                        else {\n                            limitExceeded = true;\n                        }\n                    }\n                });\n            }\n        };\n        // breath first traversal\n        while (nextToVisit < toVisit.length) {\n            var next = toVisit[nextToVisit++];\n            collectOutlineEntries(next.node, next.result);\n        }\n        if (limitExceeded && context && context.onResultLimitExceeded) {\n            context.onResultLimitExceeded(resourceString);\n        }\n        return result;\n    };\n    JSONDocumentSymbols.prototype.getSymbolKind = function (nodeType) {\n        switch (nodeType) {\n            case 'object':\n                return SymbolKind.Module;\n            case 'string':\n                return SymbolKind.String;\n            case 'number':\n                return SymbolKind.Number;\n            case 'array':\n                return SymbolKind.Array;\n            case 'boolean':\n                return SymbolKind.Boolean;\n            default: // 'null'\n                return SymbolKind.Variable;\n        }\n    };\n    JSONDocumentSymbols.prototype.getKeyLabel = function (property) {\n        var name = property.keyNode.value;\n        if (name) {\n            name = name.replace(/[\\n]/g, '↵');\n        }\n        if (name && name.trim()) {\n            return name;\n        }\n        return \"\\\"\" + name + \"\\\"\";\n    };\n    JSONDocumentSymbols.prototype.findDocumentColors = function (document, doc, context) {\n        return this.schemaService.getSchemaForResource(document.uri, doc).then(function (schema) {\n            var result = [];\n            if (schema) {\n                var limit = context && typeof context.resultLimit === 'number' ? context.resultLimit : Number.MAX_VALUE;\n                var matchingSchemas = doc.getMatchingSchemas(schema.schema);\n                var visitedNode = {};\n                for (var _i = 0, matchingSchemas_1 = matchingSchemas; _i < matchingSchemas_1.length; _i++) {\n                    var s = matchingSchemas_1[_i];\n                    if (!s.inverted && s.schema && (s.schema.format === 'color' || s.schema.format === 'color-hex') && s.node && s.node.type === 'string') {\n                        var nodeId = String(s.node.offset);\n                        if (!visitedNode[nodeId]) {\n                            var color = colorFromHex(Parser.getNodeValue(s.node));\n                            if (color) {\n                                var range = getRange(document, s.node);\n                                result.push({ color: color, range: range });\n                            }\n                            visitedNode[nodeId] = true;\n                            limit--;\n                            if (limit <= 0) {\n                                if (context && context.onResultLimitExceeded) {\n                                    context.onResultLimitExceeded(document.uri);\n                                }\n                                return result;\n                            }\n                        }\n                    }\n                }\n            }\n            return result;\n        });\n    };\n    JSONDocumentSymbols.prototype.getColorPresentations = function (document, doc, color, range) {\n        var result = [];\n        var red256 = Math.round(color.red * 255), green256 = Math.round(color.green * 255), blue256 = Math.round(color.blue * 255);\n        function toTwoDigitHex(n) {\n            var r = n.toString(16);\n            return r.length !== 2 ? '0' + r : r;\n        }\n        var label;\n        if (color.alpha === 1) {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256);\n        }\n        else {\n            label = \"#\" + toTwoDigitHex(red256) + toTwoDigitHex(green256) + toTwoDigitHex(blue256) + toTwoDigitHex(Math.round(color.alpha * 255));\n        }\n        result.push({ label: label, textEdit: TextEdit.replace(range, JSON.stringify(label)) });\n        return result;\n    };\n    return JSONDocumentSymbols;\n}());\nexport { JSONDocumentSymbols };\nfunction getRange(document, node) {\n    return Range.create(document.positionAt(node.offset), document.positionAt(node.offset + node.length));\n}\n","/*---------------------------------------------------------------------------------------------\n *  Copyright (c) Microsoft Corporation. All rights reserved.\n *  Licensed under the MIT License. See License.txt in the project root for license information.\n *--------------------------------------------------------------------------------------------*/\nimport * as nls from './../../../fillers/vscode-nls.js';\nvar localize = nls.loadMessageBundle();\nexport var schemaContributions = {\n    schemaAssociations: {},\n    schemas: {\n        // bundle the schema-schema to include (localized) descriptions\n        'http://json-schema.org/draft-04/schema#': {\n            'title': localize('schema.json', 'Describes a JSON file using a schema. See json-schema.org for more info.'),\n            '$schema': 'http://json-schema.org/draft-04/schema#',\n            'definitions': {\n                'schemaArray': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'items': {\n                        '$ref': '#'\n                    }\n                },\n                'positiveInteger': {\n                    'type': 'integer',\n                    'minimum': 0\n                },\n                'positiveIntegerDefault0': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        },\n                        {\n                            'default': 0\n                        }\n                    ]\n                },\n                'simpleTypes': {\n                    'type': 'string',\n                    'enum': [\n                        'array',\n                        'boolean',\n                        'integer',\n                        'null',\n                        'number',\n                        'object',\n                        'string'\n                    ]\n                },\n                'stringArray': {\n                    'type': 'array',\n                    'items': {\n                        'type': 'string'\n                    },\n                    'minItems': 1,\n                    'uniqueItems': true\n                }\n            },\n            'type': 'object',\n            'properties': {\n                'id': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                '$schema': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                'title': {\n                    'type': 'string'\n                },\n                'description': {\n                    'type': 'string'\n                },\n                'default': {},\n                'multipleOf': {\n                    'type': 'number',\n                    'minimum': 0,\n                    'exclusiveMinimum': true\n                },\n                'maximum': {\n                    'type': 'number'\n                },\n                'exclusiveMaximum': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'minimum': {\n                    'type': 'number'\n                },\n                'exclusiveMinimum': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'maxLength': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minLength': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'pattern': {\n                    'type': 'string',\n                    'format': 'regex'\n                },\n                'additionalItems': {\n                    'anyOf': [\n                        {\n                            'type': 'boolean'\n                        },\n                        {\n                            '$ref': '#'\n                        }\n                    ],\n                    'default': {}\n                },\n                'items': {\n                    'anyOf': [\n                        {\n                            '$ref': '#'\n                        },\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ],\n                    'default': {}\n                },\n                'maxItems': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minItems': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'uniqueItems': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'maxProperties': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveInteger'\n                        }\n                    ]\n                },\n                'minProperties': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/positiveIntegerDefault0'\n                        }\n                    ]\n                },\n                'required': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/stringArray'\n                        }\n                    ]\n                },\n                'additionalProperties': {\n                    'anyOf': [\n                        {\n                            'type': 'boolean'\n                        },\n                        {\n                            '$ref': '#'\n                        }\n                    ],\n                    'default': {}\n                },\n                'definitions': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'properties': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'patternProperties': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        '$ref': '#'\n                    },\n                    'default': {}\n                },\n                'dependencies': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        'anyOf': [\n                            {\n                                '$ref': '#'\n                            },\n                            {\n                                '$ref': '#/definitions/stringArray'\n                            }\n                        ]\n                    }\n                },\n                'enum': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'uniqueItems': true\n                },\n                'type': {\n                    'anyOf': [\n                        {\n                            '$ref': '#/definitions/simpleTypes'\n                        },\n                        {\n                            'type': 'array',\n                            'items': {\n                                '$ref': '#/definitions/simpleTypes'\n                            },\n                            'minItems': 1,\n                            'uniqueItems': true\n                        }\n                    ]\n                },\n                'format': {\n                    'anyOf': [\n                        {\n                            'type': 'string',\n                            'enum': [\n                                'date-time',\n                                'uri',\n                                'email',\n                                'hostname',\n                                'ipv4',\n                                'ipv6',\n                                'regex'\n                            ]\n                        },\n                        {\n                            'type': 'string'\n                        }\n                    ]\n                },\n                'allOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'anyOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'oneOf': {\n                    'allOf': [\n                        {\n                            '$ref': '#/definitions/schemaArray'\n                        }\n                    ]\n                },\n                'not': {\n                    'allOf': [\n                        {\n                            '$ref': '#'\n                        }\n                    ]\n                }\n            },\n            'dependencies': {\n                'exclusiveMaximum': [\n                    'maximum'\n                ],\n                'exclusiveMinimum': [\n                    'minimum'\n                ]\n            },\n            'default': {}\n        },\n        'http://json-schema.org/draft-07/schema#': {\n            'title': localize('schema.json', 'Describes a JSON file using a schema. See json-schema.org for more info.'),\n            'definitions': {\n                'schemaArray': {\n                    'type': 'array',\n                    'minItems': 1,\n                    'items': { '$ref': '#' }\n                },\n                'nonNegativeInteger': {\n                    'type': 'integer',\n                    'minimum': 0\n                },\n                'nonNegativeIntegerDefault0': {\n                    'allOf': [\n                        { '$ref': '#/definitions/nonNegativeInteger' },\n                        { 'default': 0 }\n                    ]\n                },\n                'simpleTypes': {\n                    'enum': [\n                        'array',\n                        'boolean',\n                        'integer',\n                        'null',\n                        'number',\n                        'object',\n                        'string'\n                    ]\n                },\n                'stringArray': {\n                    'type': 'array',\n                    'items': { 'type': 'string' },\n                    'uniqueItems': true,\n                    'default': []\n                }\n            },\n            'type': ['object', 'boolean'],\n            'properties': {\n                '$id': {\n                    'type': 'string',\n                    'format': 'uri-reference'\n                },\n                '$schema': {\n                    'type': 'string',\n                    'format': 'uri'\n                },\n                '$ref': {\n                    'type': 'string',\n                    'format': 'uri-reference'\n                },\n                '$comment': {\n                    'type': 'string'\n                },\n                'title': {\n                    'type': 'string'\n                },\n                'description': {\n                    'type': 'string'\n                },\n                'default': true,\n                'readOnly': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'examples': {\n                    'type': 'array',\n                    'items': true\n                },\n                'multipleOf': {\n                    'type': 'number',\n                    'exclusiveMinimum': 0\n                },\n                'maximum': {\n                    'type': 'number'\n                },\n                'exclusiveMaximum': {\n                    'type': 'number'\n                },\n                'minimum': {\n                    'type': 'number'\n                },\n                'exclusiveMinimum': {\n                    'type': 'number'\n                },\n                'maxLength': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minLength': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'pattern': {\n                    'type': 'string',\n                    'format': 'regex'\n                },\n                'additionalItems': { '$ref': '#' },\n                'items': {\n                    'anyOf': [\n                        { '$ref': '#' },\n                        { '$ref': '#/definitions/schemaArray' }\n                    ],\n                    'default': true\n                },\n                'maxItems': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minItems': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'uniqueItems': {\n                    'type': 'boolean',\n                    'default': false\n                },\n                'contains': { '$ref': '#' },\n                'maxProperties': { '$ref': '#/definitions/nonNegativeInteger' },\n                'minProperties': { '$ref': '#/definitions/nonNegativeIntegerDefault0' },\n                'required': { '$ref': '#/definitions/stringArray' },\n                'additionalProperties': { '$ref': '#' },\n                'definitions': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {}\n                },\n                'properties': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'default': {}\n                },\n                'patternProperties': {\n                    'type': 'object',\n                    'additionalProperties': { '$ref': '#' },\n                    'propertyNames': { 'format': 'regex' },\n                    'default': {}\n                },\n                'dependencies': {\n                    'type': 'object',\n                    'additionalProperties': {\n                        'anyOf': [\n                            { '$ref': '#' },\n                            { '$ref': '#/definitions/stringArray' }\n                        ]\n                    }\n                },\n                'propertyNames': { '$ref': '#' },\n                'const': true,\n                'enum': {\n                    'type': 'array',\n                    'items': true,\n                    'minItems': 1,\n                    'uniqueItems': true\n                },\n                'type': {\n                    'anyOf': [\n                        { '$ref': '#/definitions/simpleTypes' },\n                        {\n                            'type': 'array',\n                            'items': { '$ref': '#/definitions/simpleTypes' },\n                            'minItems': 1,\n                            'uniqueItems': true\n                        }\n                    ]\n                },\n                'format': { 'type': 'string' },\n                'contentMediaType': { 'type': 'string' },\n                'contentEncoding': { 'type': 'string' },\n                'if': { '$ref': '#' },\n                'then': { '$ref': '#' },\n                'else': { '$ref': '#' },\n                'allOf': { '$ref': '#/definitions/schemaArray' },\n                'anyOf': { '$ref': '#/definitions/schemaArray' },\n                'oneOf': { '$ref': '#/definitions/schemaArray' },\n                'not': { '$ref': '#' }\n            },\n            'default': true\n        }\n    }\n};\nvar descriptions = {\n    id: localize('schema.json.id', \"A unique identifier for the schema.\"),\n    $schema: localize('schema.json.$schema', \"The schema to verify this document against.\"),\n    title: localize('schema.json.title', \"A descriptive title of the element.\"),\n    description: localize('schema.json.description', \"A long description of the element. Used in hover menus and suggestions.\"),\n    default: localize('schema.json.default', \"A default value. Used by suggestions.\"),\n    multipleOf: localize('schema.json.multipleOf', \"A number that should cleanly divide the current value (i.e. have no remainder).\"),\n    maximum: localize('schema.json.maximum', \"The maximum numerical value, inclusive by default.\"),\n    exclusiveMaximum: localize('schema.json.exclusiveMaximum', \"Makes the maximum property exclusive.\"),\n    minimum: localize('schema.json.minimum', \"The minimum numerical value, inclusive by default.\"),\n    exclusiveMinimum: localize('schema.json.exclusiveMininum', \"Makes the minimum property exclusive.\"),\n    maxLength: localize('schema.json.maxLength', \"The maximum length of a string.\"),\n    minLength: localize('schema.json.minLength', \"The minimum length of a string.\"),\n    pattern: localize('schema.json.pattern', \"A regular expression to match the string against. It is not implicitly anchored.\"),\n    additionalItems: localize('schema.json.additionalItems', \"For arrays, only when items is set as an array. If it is a schema, then this schema validates items after the ones specified by the items array. If it is false, then additional items will cause validation to fail.\"),\n    items: localize('schema.json.items', \"For arrays. Can either be a schema to validate every element against or an array of schemas to validate each item against in order (the first schema will validate the first element, the second schema will validate the second element, and so on.\"),\n    maxItems: localize('schema.json.maxItems', \"The maximum number of items that can be inside an array. Inclusive.\"),\n    minItems: localize('schema.json.minItems', \"The minimum number of items that can be inside an array. Inclusive.\"),\n    uniqueItems: localize('schema.json.uniqueItems', \"If all of the items in the array must be unique. Defaults to false.\"),\n    maxProperties: localize('schema.json.maxProperties', \"The maximum number of properties an object can have. Inclusive.\"),\n    minProperties: localize('schema.json.minProperties', \"The minimum number of properties an object can have. Inclusive.\"),\n    required: localize('schema.json.required', \"An array of strings that lists the names of all properties required on this object.\"),\n    additionalProperties: localize('schema.json.additionalProperties', \"Either a schema or a boolean. If a schema, then used to validate all properties not matched by 'properties' or 'patternProperties'. If false, then any properties not matched by either will cause this schema to fail.\"),\n    definitions: localize('schema.json.definitions', \"Not used for validation. Place subschemas here that you wish to reference inline with $ref.\"),\n    properties: localize('schema.json.properties', \"A map of property names to schemas for each property.\"),\n    patternProperties: localize('schema.json.patternProperties', \"A map of regular expressions on property names to schemas for matching properties.\"),\n    dependencies: localize('schema.json.dependencies', \"A map of property names to either an array of property names or a schema. An array of property names means the property named in the key depends on the properties in the array being present in the object in order to be valid. If the value is a schema, then the schema is only applied to the object if the property in the key exists on the object.\"),\n    enum: localize('schema.json.enum', \"The set of literal values that are valid.\"),\n    type: localize('schema.json.type', \"Either a string of one of the basic schema types (number, integer, null, array, object, boolean, string) or an array of strings specifying a subset of those types.\"),\n    format: localize('schema.json.format', \"Describes the format expected for the value.\"),\n    allOf: localize('schema.json.allOf', \"An array of schemas, all of which must match.\"),\n    anyOf: localize('schema.json.anyOf', \"An array of schemas, where at least one must match.\"),\n    oneOf: localize('schema.json.oneOf', \"An array of schemas, exactly one of which must match.\"),\n    not: localize('schema.json.not', \"A schema which must not match.\"),\n    $id: localize('schema.json.$id', \"A unique identifier for the schema.\"),\n    $ref: localize('schema.json.$ref', \"Reference a definition hosted on any location.\"),\n    $comment: localize('schema.json.$comment', \"Comments from schema authors to readers or maintainers of the schema.\"),\n    readOnly: localize('schema.json.readOnly', \"Indicates that the value of the instance is managed exclusively by the owning authority.\"),\n    examples: localize('schema.json.examples', \"Sample JSON values associated with a particular schema, for the purpose of illustrating usage.\"),\n    contains: localize('schema.json.contains', \"An array instance is valid against \\\"contains\\\" if at least one of its elements is valid against the given schema.\"),\n    propertyNames: localize('schema.json.propertyNames', \"If the instance is an object, this keyword validates if every property name in the instance validates against the provided schema.\"),\n    const: localize('schema.json.const', \"An instance validates successfully against this keyword if its value is equal to the value of the keyword.\"),\n    contentMediaType: localize('schema.json.contentMediaType', \"Describes the media type of a string property.\"),\n    contentEncoding: localize('schema.json.contentEncoding', \"Describes the content encoding of a string property.\"),\n    if: localize('schema.json.if', \"The validation outcome of the \\\"if\\\" subschema controls which of the \\\"then\\\" or \\\"else\\\" keywords are evaluated.\"),\n    then: localize('schema.json.then', \"The \\\"if\\\" subschema is used for validation when the \\\"if\\\" subschema succeeds.\"),\n    else: localize('schema.json.else', \"The \\\"else\\\" subschema is used for validation when the \\\"if\\\" subschema fails.\")\n};\nfor (var schemaName in schemaContributions.schemas) {\n    var schema = schemaContributions.schemas[schemaName];\n    for (var property in schema.properties) {\n        var propertyObject = schema.properties[property];\n        if (propertyObject === true) {\n            propertyObject = schema.properties[property] = {};\n        }\n        var description = descriptions[property];\n        if (description) {\n            propertyObject['description'] = description;\n        }\n        else {\n            console.log(property + \": localize('schema.json.\" + property + \"', \\\"\\\")\");\n        }\n    }\n}\n"],"sourceRoot":""}