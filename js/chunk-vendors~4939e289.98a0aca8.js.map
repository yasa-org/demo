{"version":3,"sources":["webpack:///./node_modules/echarts/lib/coord/cartesian/cartesianAxisHelper.js","webpack:///./node_modules/echarts/lib/data/helper/sourceHelper.js","webpack:///./node_modules/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./node_modules/echarts/lib/data/helper/dataProvider.js","webpack:///./node_modules/echarts/lib/data/helper/dimensionHelper.js","webpack:///./node_modules/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./node_modules/echarts/lib/config.js","webpack:///./node_modules/echarts/lib/data/DataDimensionInfo.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Grid.js","webpack:///./node_modules/echarts/lib/data/List.js","webpack:///./node_modules/echarts/lib/coord/axisHelper.js","webpack:///./node_modules/echarts/lib/coord/axisDefault.js","webpack:///./node_modules/echarts/lib/data/DataDiffer.js","webpack:///./node_modules/echarts/lib/coord/Axis.js","webpack:///./node_modules/echarts/lib/data/helper/completeDimensions.js","webpack:///./node_modules/echarts/lib/data/OrdinalMeta.js","webpack:///./node_modules/echarts/lib/coord/cartesian/GridModel.js","webpack:///./node_modules/echarts/lib/data/helper/sourceType.js","webpack:///./node_modules/echarts/lib/coord/axisModelCreator.js","webpack:///./node_modules/echarts/lib/data/helper/createDimensions.js","webpack:///./node_modules/echarts/lib/coord/geo/parseGeoJson.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./node_modules/echarts/lib/coord/axisTickLabelBuilder.js","webpack:///./node_modules/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./node_modules/echarts/lib/coord/geo/mapDataStorage.js","webpack:///./node_modules/echarts/lib/data/Source.js","webpack:///./node_modules/echarts/lib/data/helper/dataStackHelper.js","webpack:///./node_modules/echarts/lib/coord/geo/Region.js"],"names":["zrUtil","layout","gridModel","axisModel","opt","grid","coordinateSystem","axis","otherAxisOnZeroOf","getAxesOnZeroOf","rawAxisPosition","position","axisPosition","axisDim","dim","rect","getRect","rectBound","x","width","y","height","idx","left","right","top","bottom","onZero","axisOffset","get","posBound","onZeroCoord","toGlobalCoord","dataToCoord","Math","max","min","rotation","PI","dirMap","labelDirection","tickDirection","nameDirection","labelOffset","retrieve","labelInside","labelRotate","z2","exports","_config","_model","__DEV__","makeInner","getDataItemValue","_util","createHashMap","each","map","isArray","isString","isObject","isTypedArray","isArrayLike","extend","Source","assert","_sourceType","SOURCE_FORMAT_ORIGINAL","SOURCE_FORMAT_ARRAY_ROWS","SOURCE_FORMAT_OBJECT_ROWS","SOURCE_FORMAT_KEYED_COLUMNS","SOURCE_FORMAT_UNKNOWN","SOURCE_FORMAT_TYPED_ARRAY","SERIES_LAYOUT_BY_ROW","BE_ORDINAL","Must","Might","Not","inner","detectSourceFormat","datasetModel","data","option","source","sourceFormat","length","i","len","item","key","hasOwnProperty","Error","getSource","seriesModel","resetSourceDefaulter","ecModel","datasetMap","prepareSource","seriesOption","fromDataset","seriesLayoutBy","sourceHeader","dimensionsDefine","dimensions","getDatasetModel","datasetOption","completeResult","completeBySourceData","startIndex","dimensionsDetectCount","encodeDefine","encode","normalizeDimensionsDefine","arrayRowsTravelFirst","val","index","objectRowsCollectDimensions","colArr","push","value0","nameMap","name","displayName","exist","count","set","cb","maxLoop","Infinity","obj","firstIndex","value","makeSeriesEncodeForAxisCoordSys","coordDimensions","baseCategoryDimIndex","categoryWayValueDimStart","encodeItemName","encodeSeriesName","uid","slice","coordDimInfo","coordDimIdx","type","getDataDimCountOnCoordDim","datasetRecord","categoryWayDim","valueWayDim","pushDim","dimIdxArr","idxFrom","idxCount","dimsDef","coordDimName","start","itemName","seriesName","makeSeriesEncodeForNameBased","dimCount","potentialNameDimIndex","idxResult","idxRes0","idxRes1","guessRecords","guessResult","doGuessOrdinal","isPureNumber","v","n","fulfilled","nameDimIndex","thisData","getComponent","datasetIndex","guessOrdinal","dimIndex","result","dimName","dimType","dimDefItem","sample","detectValue","row","beStr","isFinite","_default","getMin","origin","this","rangeStart","eqNaN","scale","parse","getMax","rangeEnd","getNeedCrossZero","getCoordSysModel","noop","setRange","resetRange","module","isDataItemOption","_number","parseDate","DefaultDataProvider","dimSize","isInstance","seriesDataToSource","_source","_data","_offset","_dimSize","methods","providerMethods","providerProto","prototype","pure","persistent","getItem","appendData","appendDataSimply","countSimply","getItemSimply","col","dims","newData","newCol","oldCol","out","offset","clean","rawValueGetters","arrayRows","getRawValueSimply","objectRows","dataItem","dataIndex","keyedColumns","original","Array","typedArray","defaultDimValueGetters","getDimValueSimply","converDataValue","_dimensionInfos","_rawData","hasItemOption","dimInfo","ordinalMeta","parseAndCollect","NaN","retrieveRawValue","getRawDataItem","getProvider","getDimensionInfo","retrieveRawAttr","attr","OTHER_DIMENSIONS","summarizeDimensions","summary","notExtraCoordDimMap","defaultedLabel","defaultedTooltip","userOutput","dimensionNames","dimItem","coordDim","coordDimIndex","getOrCreateEncodeArr","isExtraCoord","mayLabelDimType","defaultTooltip","otherDim","encodeArr","otherDims","dataDimsOnCoord","encodeFirstDimNotExtra","dimArr","concat","encodeLabel","label","encodeTooltip","tooltip","getDimensionTypeByAxis","axisType","ComponentModel","axisModelCreator","axisModelCommonMixin","AxisModel","init","superApply","arguments","mergeOption","restoreData","queryComponents","mainType","gridIndex","id","gridId","getAxisType","merge","extraOption","dev","window","global","DataDimensionInfo","indexOf","_layout","getLayoutRect","_axisHelper","createScaleByModel","ifAxisCrossZero","niceScaleExtent","estimateLabelUnionRect","Cartesian2D","Axis2D","CoordinateSystem","_dataStackHelper","getStackedDimension","isAxisUsedInTheGrid","Grid","api","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","model","gridProto","fixAxisOnZero","axesMap","otherAxisDim","onZeroRecords","otherAxes","onZeroAxisIndex","canOnZeroToAxis","getOnZeroRecordKey","updateAxisTransform","coordBase","axisExtent","getExtent","axisExtentSum","coord","toLocalCoord","axisPointerEnabled","_rect","update","_updateScale","xAxis","yAxis","resize","ignoreContainLabel","gridRect","getBoxLayoutParams","getWidth","getHeight","axesList","adjustAxes","isHorizontal","extent","inverse","setExtent","labelUnionRect","margin","getAxis","axisIndex","axesMapOnDim","getAxes","getCartesian","xAxisIndex","yAxisIndex","coordList","getCartesians","convertToPixel","finder","target","_findConvertTarget","cartesian","dataToPoint","convertFromPixel","pointToData","coordToData","xAxisModel","getReferringComponents","yAxisModel","coordsList","componentIndex","containPoint","point","axisPositionUsed","axesCount","eachComponent","createAxisCreator","isCategory","onBand","addAxis","unionExtent","mapDimension","unionExtentFromData","eachSeries","isCartesian2D","axesModels","findAxesModels","getData","getTooltipAxes","baseAxes","baseAxis","getBaseAxis","otherAxis","getOtherAxis","axesTypes","create","grids","register","Model","DataDiffer","_dataProvider","_dimensionHelper","UNDEFINED","INDEX_NOT_FOUND","ID_PREFIX","dataCtors","Float64Array","Int32Array","CtorUint32Array","Uint32Array","CtorInt32Array","CtorUint16Array","Uint16Array","getIndicesCtor","list","_rawCount","cloneChunk","originalChunk","Ctor","constructor","TRANSFERABLE_PROPERTIES","CLONE_PROPERTIES","transferProperties","__wrappedMethods","propName","clone","_calculationInfo","List","hostModel","dimensionInfos","invertedIndicesMap","dimensionInfo","dimensionName","createInvertedIndices","dataType","_indices","_count","_storage","_nameList","_idList","_optionModels","_visual","_itemVisuals","hasItemVisual","_itemLayouts","_graphicEls","_chunkSize","_chunkCount","_rawExtent","_extent","_approximateExtent","_dimensionsSummary","_invertedIndicesMap","listProto","prepareChunks","storage","chunkSize","chunkCount","end","DataCtor","lastChunkIndex","resizeChunkArray","newStore","j","k","prepareInvertedIndex","invertedIndices","categories","getRawValueFromStore","rawIndex","chunkIndex","floor","chunkOffset","chunk","getRawIndexWithoutIndices","getRawIndexWithIndices","getId","_idDimIdx","normalizeDimensions","cloneListForMapAndSample","excludeDimensions","allDimensions","originalStorage","cloneDimStore","getInitialExtent","originalDimStore","newDimStore","getDimension","isNaN","getDimensionsOnCoord","dimensionsSummary","initData","nameList","dimValueGetter","notProvider","_nameRepeatCount","defaultDimValueGetter","_dimValueGetter","_dimValueGetterArrayRows","_initDataFromProvider","rawData","appendValues","values","names","dimLen","rawExtent","originalChunkCount","emptyDataItem","sourceIdx","dimRawExtent","nameDimIdx","dimensionInfoMap","idList","nameRepeatCount","_nameDimIdx","itemId","dimStorage","nameDim","nameDimChunk","getIndices","indices","thisCount","newIndices","buffer","getRawIndex","chunkStore","getByRawIndex","rawIdx","dimStore","_getFast","getValues","hasValue","getDataExtent","dimData","initialExtent","dimExtent","currEnd","useRaw","getApproximateExtent","setApproximateExtent","getCalculationInfo","setCalculationInfo","getSum","sum","getMedian","dimDataArray","sortedDimDataArray","sort","a","b","rawIndexOf","indexOfName","getName","indexOfRawIndex","rawDataIndex","mid","indicesOfNearest","maxDistance","nearestIndices","minDist","minDiff","nearestIndicesLen","diff","dist","abs","context","contextCompat","call","apply","filterSelf","dim0","keep","selectRange","range","originalCount","quickFinished","chunkStorage","dimStorage2","min2","max2","chunkStorage2","val2","dimk","mapArray","tmpRetValue","dataCount","retValue","rawExtentOnDim","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","frameValues","frameSize","dataIdx","originalChunkIndex","originalChunkOffset","sampleFrameIdx","sampleChunkIndex","sampleChunkOffset","getItemModel","otherList","thisList","getVisual","visual","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","getItemVisual","ignoreParent","itemVisual","setItemVisual","clearAllVisual","setItemDataAndSeriesIndex","child","seriesIndex","setItemGraphicEl","el","traverse","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","methodName","injectFunction","originalMethod","res","TRANSFERABLE_METHODS","CHANGABLE_METHODS","OrdinalScale","IntervalScale","Scale","numberUtil","_barGrid","prepareLayoutBarSeries","makeColumnLayout","retrieveColumnLayout","BoundingRect","getScaleExtent","axisDataLen","boundaryGap","span","scaleType","originalExtent","getCategories","parsePercent","fixMin","fixMax","setBlank","getOrdinalMeta","isBaseAxisAndHasBarSeries","barSeriesModels","barWidthAndOffset","adjustedScale","adjustScaleForOverflow","axisLength","barsOnCurrentAxis","undefined","minOverflow","maxOverflow","totalOverFlow","oldRange","oldRangePercentOfNew","overflowBuffer","extentInfo","splitNumber","base","niceExtent","minInterval","maxInterval","interval","setInterval","getClass","dataExtent","makeLabelFormatter","labelFormatter","getLabelModel","categoryTickStart","tpl","getLabel","replace","tickValue","getAxisRawValue","tick","isBlank","realNumberScaleTicks","tickCount","categoryScaleExtent","getTicks","axisLabelModel","step","ceil","unrotatedSingleRect","getTextRect","singleRect","rotateTextRect","union","textRect","rotate","rotateRadians","boundingBox","plain","beforeWidth","beforeHeight","afterWidth","cos","sin","afterHeight","rotatedRect","getOptionCategoryInterval","shouldShowAllLabels","defaultOption","show","zlevel","z","nameLocation","nameRotate","nameTruncate","maxWidth","ellipsis","placeholder","nameTextStyle","nameGap","silent","triggerEvent","axisPointer","axisLine","lineStyle","color","symbol","symbolSize","axisTick","inside","axisLabel","showMinLabel","showMaxLabel","fontSize","splitLine","splitArea","areaStyle","axisDefault","categoryAxis","deduplication","alignWithLabel","valueAxis","minorTick","minorSplitLine","timeAxis","defaults","logAxis","logBase","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","arr","keyArr","keyGetterName","dataDiffer","existence","add","func","_add","_update","remove","_remove","execute","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","shift","linearMap","getPixelPrecision","round","_axisTickLabelBuilder","createAxisTicks","createAxisLabels","calculateCategoryInterval","NORMALIZED_EXTENT","Axis","fixExtentWithBands","nTick","size","fixOnBandTicksCoords","ticksCoords","clamp","ticksLen","last","diffSize","crossLen","ticksItem","littleThan","unshift","pop","contain","containData","normalize","t","getTicksCoords","tickModel","getTickModel","ticks","getMinorTicksCoords","minorTickModel","getModel","minorTicks","getMinorTicks","minorTicksCoords","minorTicksGroup","getViewLabels","labels","getBandWidth","getRotate","normalizeToArray","_sourceHelper","completeDimensions","sysDims","dataDimNameMap","coordDimNameMap","getDimCount","userDimName","resultItem","encodeDef","encodeDefaulter","dataDims","validDataDims","resultDimIdx","applyDim","availDimIdx","sysDimItem","sysDimIndex","sysDimItemDimsDef","sysDimItemOtherDims","sysDimItemDimsDefItem","generateCoord","generateCoordCount","fromZero","extra","genName","optDimCount","OrdinalMeta","_needCollect","needCollect","_deduplication","_map","createByAxisModel","dedplication","proto","getOrCreateMap","getOrdinal","category","dependencies","layoutMode","containLabel","backgroundColor","borderWidth","borderColor","SERIES_LAYOUT_BY_COLUMN","getLayoutParams","mergeLayoutParam","AXIS_TYPES","axisName","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","mergeDefaultAndTheme","inputPositionParams","themeModel","getTheme","getDefaultOption","optionUpdated","thisOption","__ordinalMeta","mergeAll","registerSubTypeDefaulter","curry","dimensionsCount","Region","decode","json","UTF8Encoding","encodeScale","UTF8Scale","features","f","feature","geometry","coordinates","encodeOffsets","c","coordinate","decodePolygon","c2","polygon","prevX","prevY","charCodeAt","geoJson","nameProperty","filter","featureObj","properties","geo","geometries","exterior","interiors","region","cp","Cartesian","getAxesByScale","axisX","axisY","reserved","clampData","xScale","yScale","xAxisExtent","yAxisExtent","getArea","xExtent","getGlobalExtent","yExtent","inherits","dimAxisMapper","_axes","_dimList","toLowerCase","_dataCoordConvert","input","method","dimList","output","textContain","makeCategoryLabels","makeRealNumberLabels","makeCategoryTicks","labelModel","makeCategoryLabelsActually","labelCategoryInterval","numericLabelInterval","labelsCache","getListCache","optionLabelInterval","listCacheGet","isFunction","makeLabelsByCustomizedCategoryInterval","makeAutoCategoryInterval","makeLabelsByNumericCategoryInterval","listCacheSet","tickCategoryInterval","ticksCache","optionTickInterval","labelsResult","labelItem","formattedLabel","rawLabel","prop","cache","autoInterval","params","fetchAutoCategoryIntervalCalculationParams","axisRotate","ordinalScale","ordinalExtent","unitSpan","unitW","unitH","maxW","maxH","getBoundingRect","font","dw","dh","lastAutoInterval","lastTickCount","axisExtend0","axisExtend1","getFont","categoryInterval","onlyTick","startTick","showAllLabel","includeMinLabel","includeMaxLabel","addItem","tVal","coordExtent","asc","ret","reverse","_parseSVG","parseXML","registerMap","mapName","rawGeoJson","rawSpecialAreas","records","svg","specialAreas","record","parsers","retrieveMap","geoJSON","JSON","Function","svgXML","_clazz","enableClassCheck","fields","enableDataStack","stackedByDimInfo","stackedDimInfo","stackResultDimension","stackedOverDimension","byIndex","stackedCoordDimension","mayStack","stackedDimCoordDim","stackedDimType","stackedDimCoordIndex","isCalculationCoord","stackedDimension","stackedByDimension","isStackedByIndex","isDimensionStacked","stackedDim","targetDim","bbox","vec2","polygonContain","center","MAX_NUMBER","Number","MAX_VALUE","fromPoints","loopGeo","transformTo","aspect","transform","calculateTransform","p","applyTransform","h","copy","newRegion"],"mappings":"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","file":"js/chunk-vendors~4939e289.98a0aca8.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Can only be called after coordinate system creation stage.\n * (Can be called before coordinate system update stage).\n *\n * @param {Object} opt {labelInside}\n * @return {Object} {\n *  position, rotation, labelDirection, labelOffset,\n *  tickDirection, labelRotate, z2\n * }\n */\nfunction layout(gridModel, axisModel, opt) {\n  opt = opt || {};\n  var grid = gridModel.coordinateSystem;\n  var axis = axisModel.axis;\n  var layout = {};\n  var otherAxisOnZeroOf = axis.getAxesOnZeroOf()[0];\n  var rawAxisPosition = axis.position;\n  var axisPosition = otherAxisOnZeroOf ? 'onZero' : rawAxisPosition;\n  var axisDim = axis.dim;\n  var rect = grid.getRect();\n  var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n  var idx = {\n    left: 0,\n    right: 1,\n    top: 0,\n    bottom: 1,\n    onZero: 2\n  };\n  var axisOffset = axisModel.get('offset') || 0;\n  var posBound = axisDim === 'x' ? [rectBound[2] - axisOffset, rectBound[3] + axisOffset] : [rectBound[0] - axisOffset, rectBound[1] + axisOffset];\n\n  if (otherAxisOnZeroOf) {\n    var onZeroCoord = otherAxisOnZeroOf.toGlobalCoord(otherAxisOnZeroOf.dataToCoord(0));\n    posBound[idx.onZero] = Math.max(Math.min(onZeroCoord, posBound[1]), posBound[0]);\n  } // Axis position\n\n\n  layout.position = [axisDim === 'y' ? posBound[idx[axisPosition]] : rectBound[0], axisDim === 'x' ? posBound[idx[axisPosition]] : rectBound[3]]; // Axis rotation\n\n  layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1); // Tick and label direction, x y is axisDim\n\n  var dirMap = {\n    top: -1,\n    bottom: 1,\n    left: -1,\n    right: 1\n  };\n  layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n  layout.labelOffset = otherAxisOnZeroOf ? posBound[idx[rawAxisPosition]] - posBound[idx.onZero] : 0;\n\n  if (axisModel.get('axisTick.inside')) {\n    layout.tickDirection = -layout.tickDirection;\n  }\n\n  if (zrUtil.retrieve(opt.labelInside, axisModel.get('axisLabel.inside'))) {\n    layout.labelDirection = -layout.labelDirection;\n  } // Special label rotation\n\n\n  var labelRotate = axisModel.get('axisLabel.rotate');\n  layout.labelRotate = axisPosition === 'top' ? -labelRotate : labelRotate; // Over splitLine and splitArea\n\n  layout.z2 = 1;\n  return layout;\n}\n\nexports.layout = layout;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _model = require(\"../../util/model\");\n\nvar makeInner = _model.makeInner;\nvar getDataItemValue = _model.getDataItemValue;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar map = _util.map;\nvar isArray = _util.isArray;\nvar isString = _util.isString;\nvar isObject = _util.isObject;\nvar isTypedArray = _util.isTypedArray;\nvar isArrayLike = _util.isArrayLike;\nvar extend = _util.extend;\nvar assert = _util.assert;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SERIES_LAYOUT_BY_ROW = _sourceType.SERIES_LAYOUT_BY_ROW;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// The result of `guessOrdinal`.\nvar BE_ORDINAL = {\n  Must: 1,\n  // Encounter string but not '-' and not number-like.\n  Might: 2,\n  // Encounter string but number-like.\n  Not: 3 // Other cases\n\n};\nvar inner = makeInner();\n/**\n * @see {module:echarts/data/Source}\n * @param {module:echarts/component/dataset/DatasetModel} datasetModel\n * @return {string} sourceFormat\n */\n\nfunction detectSourceFormat(datasetModel) {\n  var data = datasetModel.option.source;\n  var sourceFormat = SOURCE_FORMAT_UNKNOWN;\n\n  if (isTypedArray(data)) {\n    sourceFormat = SOURCE_FORMAT_TYPED_ARRAY;\n  } else if (isArray(data)) {\n    // FIXME Whether tolerate null in top level array?\n    if (data.length === 0) {\n      sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n    }\n\n    for (var i = 0, len = data.length; i < len; i++) {\n      var item = data[i];\n\n      if (item == null) {\n        continue;\n      } else if (isArray(item)) {\n        sourceFormat = SOURCE_FORMAT_ARRAY_ROWS;\n        break;\n      } else if (isObject(item)) {\n        sourceFormat = SOURCE_FORMAT_OBJECT_ROWS;\n        break;\n      }\n    }\n  } else if (isObject(data)) {\n    for (var key in data) {\n      if (data.hasOwnProperty(key) && isArrayLike(data[key])) {\n        sourceFormat = SOURCE_FORMAT_KEYED_COLUMNS;\n        break;\n      }\n    }\n  } else if (data != null) {\n    throw new Error('Invalid data');\n  }\n\n  inner(datasetModel).sourceFormat = sourceFormat;\n}\n/**\n * [Scenarios]:\n * (1) Provide source data directly:\n *     series: {\n *         encode: {...},\n *         dimensions: [...]\n *         seriesLayoutBy: 'row',\n *         data: [[...]]\n *     }\n * (2) Refer to datasetModel.\n *     series: [{\n *         encode: {...}\n *         // Ignore datasetIndex means `datasetIndex: 0`\n *         // and the dimensions defination in dataset is used\n *     }, {\n *         encode: {...},\n *         seriesLayoutBy: 'column',\n *         datasetIndex: 1\n *     }]\n *\n * Get data from series itself or datset.\n * @return {module:echarts/data/Source} source\n */\n\n\nfunction getSource(seriesModel) {\n  return inner(seriesModel).source;\n}\n/**\n * MUST be called before mergeOption of all series.\n * @param {module:echarts/model/Global} ecModel\n */\n\n\nfunction resetSourceDefaulter(ecModel) {\n  // `datasetMap` is used to make default encode.\n  inner(ecModel).datasetMap = createHashMap();\n}\n/**\n * [Caution]:\n * MUST be called after series option merged and\n * before \"series.getInitailData()\" called.\n *\n * [The rule of making default encode]:\n * Category axis (if exists) alway map to the first dimension.\n * Each other axis occupies a subsequent dimension.\n *\n * [Why make default encode]:\n * Simplify the typing of encode in option, avoiding the case like that:\n * series: [{encode: {x: 0, y: 1}}, {encode: {x: 0, y: 2}}, {encode: {x: 0, y: 3}}],\n * where the \"y\" have to be manually typed as \"1, 2, 3, ...\".\n *\n * @param {module:echarts/model/Series} seriesModel\n */\n\n\nfunction prepareSource(seriesModel) {\n  var seriesOption = seriesModel.option;\n  var data = seriesOption.data;\n  var sourceFormat = isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL;\n  var fromDataset = false;\n  var seriesLayoutBy = seriesOption.seriesLayoutBy;\n  var sourceHeader = seriesOption.sourceHeader;\n  var dimensionsDefine = seriesOption.dimensions;\n  var datasetModel = getDatasetModel(seriesModel);\n\n  if (datasetModel) {\n    var datasetOption = datasetModel.option;\n    data = datasetOption.source;\n    sourceFormat = inner(datasetModel).sourceFormat;\n    fromDataset = true; // These settings from series has higher priority.\n\n    seriesLayoutBy = seriesLayoutBy || datasetOption.seriesLayoutBy;\n    sourceHeader == null && (sourceHeader = datasetOption.sourceHeader);\n    dimensionsDefine = dimensionsDefine || datasetOption.dimensions;\n  }\n\n  var completeResult = completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine);\n  inner(seriesModel).source = new Source({\n    data: data,\n    fromDataset: fromDataset,\n    seriesLayoutBy: seriesLayoutBy,\n    sourceFormat: sourceFormat,\n    dimensionsDefine: completeResult.dimensionsDefine,\n    startIndex: completeResult.startIndex,\n    dimensionsDetectCount: completeResult.dimensionsDetectCount,\n    // Note: dataset option does not have `encode`.\n    encodeDefine: seriesOption.encode\n  });\n} // return {startIndex, dimensionsDefine, dimensionsCount}\n\n\nfunction completeBySourceData(data, sourceFormat, seriesLayoutBy, sourceHeader, dimensionsDefine) {\n  if (!data) {\n    return {\n      dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine)\n    };\n  }\n\n  var dimensionsDetectCount;\n  var startIndex;\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    // Rule: Most of the first line are string: it is header.\n    // Caution: consider a line with 5 string and 1 number,\n    // it still can not be sure it is a head, because the\n    // 5 string may be 5 values of category columns.\n    if (sourceHeader === 'auto' || sourceHeader == null) {\n      arrayRowsTravelFirst(function (val) {\n        // '-' is regarded as null/undefined.\n        if (val != null && val !== '-') {\n          if (isString(val)) {\n            startIndex == null && (startIndex = 1);\n          } else {\n            startIndex = 0;\n          }\n        } // 10 is an experience number, avoid long loop.\n\n      }, seriesLayoutBy, data, 10);\n    } else {\n      startIndex = sourceHeader ? 1 : 0;\n    }\n\n    if (!dimensionsDefine && startIndex === 1) {\n      dimensionsDefine = [];\n      arrayRowsTravelFirst(function (val, index) {\n        dimensionsDefine[index] = val != null ? val : '';\n      }, seriesLayoutBy, data);\n    }\n\n    dimensionsDetectCount = dimensionsDefine ? dimensionsDefine.length : seriesLayoutBy === SERIES_LAYOUT_BY_ROW ? data.length : data[0] ? data[0].length : null;\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = objectRowsCollectDimensions(data);\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimensionsDefine) {\n      dimensionsDefine = [];\n      each(data, function (colArr, key) {\n        dimensionsDefine.push(key);\n      });\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    var value0 = getDataItemValue(data[0]);\n    dimensionsDetectCount = isArray(value0) && value0.length || 1;\n  } else if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {}\n\n  return {\n    startIndex: startIndex,\n    dimensionsDefine: normalizeDimensionsDefine(dimensionsDefine),\n    dimensionsDetectCount: dimensionsDetectCount\n  };\n} // Consider dimensions defined like ['A', 'price', 'B', 'price', 'C', 'price'],\n// which is reasonable. But dimension name is duplicated.\n// Returns undefined or an array contains only object without null/undefiend or string.\n\n\nfunction normalizeDimensionsDefine(dimensionsDefine) {\n  if (!dimensionsDefine) {\n    // The meaning of null/undefined is different from empty array.\n    return;\n  }\n\n  var nameMap = createHashMap();\n  return map(dimensionsDefine, function (item, index) {\n    item = extend({}, isObject(item) ? item : {\n      name: item\n    }); // User can set null in dimensions.\n    // We dont auto specify name, othewise a given name may\n    // cause it be refered unexpectedly.\n\n    if (item.name == null) {\n      return item;\n    } // Also consider number form like 2012.\n\n\n    item.name += ''; // User may also specify displayName.\n    // displayName will always exists except user not\n    // specified or dim name is not specified or detected.\n    // (A auto generated dim name will not be used as\n    // displayName).\n\n    if (item.displayName == null) {\n      item.displayName = item.name;\n    }\n\n    var exist = nameMap.get(item.name);\n\n    if (!exist) {\n      nameMap.set(item.name, {\n        count: 1\n      });\n    } else {\n      item.name += '-' + exist.count++;\n    }\n\n    return item;\n  });\n}\n\nfunction arrayRowsTravelFirst(cb, seriesLayoutBy, data, maxLoop) {\n  maxLoop == null && (maxLoop = Infinity);\n\n  if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      cb(data[i] ? data[i][0] : null, i);\n    }\n  } else {\n    var value0 = data[0] || [];\n\n    for (var i = 0; i < value0.length && i < maxLoop; i++) {\n      cb(value0[i], i);\n    }\n  }\n}\n\nfunction objectRowsCollectDimensions(data) {\n  var firstIndex = 0;\n  var obj;\n\n  while (firstIndex < data.length && !(obj = data[firstIndex++])) {} // jshint ignore: line\n\n\n  if (obj) {\n    var dimensions = [];\n    each(obj, function (value, key) {\n      dimensions.push(key);\n    });\n    return dimensions;\n  }\n}\n/**\n * [The strategy of the arrengment of data dimensions for dataset]:\n * \"value way\": all axes are non-category axes. So series one by one take\n *     several (the number is coordSysDims.length) dimensions from dataset.\n *     The result of data arrengment of data dimensions like:\n *     | ser0_x | ser0_y | ser1_x | ser1_y | ser2_x | ser2_y |\n * \"category way\": at least one axis is category axis. So the the first data\n *     dimension is always mapped to the first category axis and shared by\n *     all of the series. The other data dimensions are taken by series like\n *     \"value way\" does.\n *     The result of data arrengment of data dimensions like:\n *     | ser_shared_x | ser0_y | ser1_y | ser2_y |\n *\n * @param {Array.<Object|string>} coordDimensions [{name: <string>, type: <string>, dimsDef: <Array>}, ...]\n * @param {module:model/Series} seriesModel\n * @param {module:data/Source} source\n * @return {Object} encode Never be `null/undefined`.\n */\n\n\nfunction makeSeriesEncodeForAxisCoordSys(coordDimensions, seriesModel, source) {\n  var encode = {};\n  var datasetModel = getDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\n\n  if (!datasetModel || !coordDimensions) {\n    return encode;\n  }\n\n  var encodeItemName = [];\n  var encodeSeriesName = [];\n  var ecModel = seriesModel.ecModel;\n  var datasetMap = inner(ecModel).datasetMap;\n  var key = datasetModel.uid + '_' + source.seriesLayoutBy;\n  var baseCategoryDimIndex;\n  var categoryWayValueDimStart;\n  coordDimensions = coordDimensions.slice();\n  each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    !isObject(coordDimInfo) && (coordDimensions[coordDimIdx] = {\n      name: coordDimInfo\n    });\n\n    if (coordDimInfo.type === 'ordinal' && baseCategoryDimIndex == null) {\n      baseCategoryDimIndex = coordDimIdx;\n      categoryWayValueDimStart = getDataDimCountOnCoordDim(coordDimensions[coordDimIdx]);\n    }\n\n    encode[coordDimInfo.name] = [];\n  });\n  var datasetRecord = datasetMap.get(key) || datasetMap.set(key, {\n    categoryWayDim: categoryWayValueDimStart,\n    valueWayDim: 0\n  }); // TODO\n  // Auto detect first time axis and do arrangement.\n\n  each(coordDimensions, function (coordDimInfo, coordDimIdx) {\n    var coordDimName = coordDimInfo.name;\n    var count = getDataDimCountOnCoordDim(coordDimInfo); // In value way.\n\n    if (baseCategoryDimIndex == null) {\n      var start = datasetRecord.valueWayDim;\n      pushDim(encode[coordDimName], start, count);\n      pushDim(encodeSeriesName, start, count);\n      datasetRecord.valueWayDim += count; // ??? TODO give a better default series name rule?\n      // especially when encode x y specified.\n      // consider: when mutiple series share one dimension\n      // category axis, series name should better use\n      // the other dimsion name. On the other hand, use\n      // both dimensions name.\n    } // In category way, the first category axis.\n    else if (baseCategoryDimIndex === coordDimIdx) {\n        pushDim(encode[coordDimName], 0, count);\n        pushDim(encodeItemName, 0, count);\n      } // In category way, the other axis.\n      else {\n          var start = datasetRecord.categoryWayDim;\n          pushDim(encode[coordDimName], start, count);\n          pushDim(encodeSeriesName, start, count);\n          datasetRecord.categoryWayDim += count;\n        }\n  });\n\n  function pushDim(dimIdxArr, idxFrom, idxCount) {\n    for (var i = 0; i < idxCount; i++) {\n      dimIdxArr.push(idxFrom + i);\n    }\n  }\n\n  function getDataDimCountOnCoordDim(coordDimInfo) {\n    var dimsDef = coordDimInfo.dimsDef;\n    return dimsDef ? dimsDef.length : 1;\n  }\n\n  encodeItemName.length && (encode.itemName = encodeItemName);\n  encodeSeriesName.length && (encode.seriesName = encodeSeriesName);\n  return encode;\n}\n/**\n * Work for data like [{name: ..., value: ...}, ...].\n *\n * @param {module:model/Series} seriesModel\n * @param {module:data/Source} source\n * @return {Object} encode Never be `null/undefined`.\n */\n\n\nfunction makeSeriesEncodeForNameBased(seriesModel, source, dimCount) {\n  var encode = {};\n  var datasetModel = getDatasetModel(seriesModel); // Currently only make default when using dataset, util more reqirements occur.\n\n  if (!datasetModel) {\n    return encode;\n  }\n\n  var sourceFormat = source.sourceFormat;\n  var dimensionsDefine = source.dimensionsDefine;\n  var potentialNameDimIndex;\n\n  if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS || sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    each(dimensionsDefine, function (dim, idx) {\n      if ((isObject(dim) ? dim.name : dim) === 'name') {\n        potentialNameDimIndex = idx;\n      }\n    });\n  } // idxResult: {v, n}.\n\n\n  var idxResult = function () {\n    var idxRes0 = {};\n    var idxRes1 = {};\n    var guessRecords = []; // 5 is an experience value.\n\n    for (var i = 0, len = Math.min(5, dimCount); i < len; i++) {\n      var guessResult = doGuessOrdinal(source.data, sourceFormat, source.seriesLayoutBy, dimensionsDefine, source.startIndex, i);\n      guessRecords.push(guessResult);\n      var isPureNumber = guessResult === BE_ORDINAL.Not; // [Strategy of idxRes0]: find the first BE_ORDINAL.Not as the value dim,\n      // and then find a name dim with the priority:\n      // \"BE_ORDINAL.Might|BE_ORDINAL.Must\" > \"other dim\" > \"the value dim itself\".\n\n      if (isPureNumber && idxRes0.v == null && i !== potentialNameDimIndex) {\n        idxRes0.v = i;\n      }\n\n      if (idxRes0.n == null || idxRes0.n === idxRes0.v || !isPureNumber && guessRecords[idxRes0.n] === BE_ORDINAL.Not) {\n        idxRes0.n = i;\n      }\n\n      if (fulfilled(idxRes0) && guessRecords[idxRes0.n] !== BE_ORDINAL.Not) {\n        return idxRes0;\n      } // [Strategy of idxRes1]: if idxRes0 not satisfied (that is, no BE_ORDINAL.Not),\n      // find the first BE_ORDINAL.Might as the value dim,\n      // and then find a name dim with the priority:\n      // \"other dim\" > \"the value dim itself\".\n      // That is for backward compat: number-like (e.g., `'3'`, `'55'`) can be\n      // treated as number.\n\n\n      if (!isPureNumber) {\n        if (guessResult === BE_ORDINAL.Might && idxRes1.v == null && i !== potentialNameDimIndex) {\n          idxRes1.v = i;\n        }\n\n        if (idxRes1.n == null || idxRes1.n === idxRes1.v) {\n          idxRes1.n = i;\n        }\n      }\n    }\n\n    function fulfilled(idxResult) {\n      return idxResult.v != null && idxResult.n != null;\n    }\n\n    return fulfilled(idxRes0) ? idxRes0 : fulfilled(idxRes1) ? idxRes1 : null;\n  }();\n\n  if (idxResult) {\n    encode.value = idxResult.v; // `potentialNameDimIndex` has highest priority.\n\n    var nameDimIndex = potentialNameDimIndex != null ? potentialNameDimIndex : idxResult.n; // By default, label use itemName in charts.\n    // So we dont set encodeLabel here.\n\n    encode.itemName = [nameDimIndex];\n    encode.seriesName = [nameDimIndex];\n  }\n\n  return encode;\n}\n/**\n * If return null/undefined, indicate that should not use datasetModel.\n */\n\n\nfunction getDatasetModel(seriesModel) {\n  var option = seriesModel.option; // Caution: consider the scenario:\n  // A dataset is declared and a series is not expected to use the dataset,\n  // and at the beginning `setOption({series: { noData })` (just prepare other\n  // option but no data), then `setOption({series: {data: [...]}); In this case,\n  // the user should set an empty array to avoid that dataset is used by default.\n\n  var thisData = option.data;\n\n  if (!thisData) {\n    return seriesModel.ecModel.getComponent('dataset', option.datasetIndex || 0);\n  }\n}\n/**\n * The rule should not be complex, otherwise user might not\n * be able to known where the data is wrong.\n * The code is ugly, but how to make it neat?\n *\n * @param {module:echars/data/Source} source\n * @param {number} dimIndex\n * @return {BE_ORDINAL} guess result.\n */\n\n\nfunction guessOrdinal(source, dimIndex) {\n  return doGuessOrdinal(source.data, source.sourceFormat, source.seriesLayoutBy, source.dimensionsDefine, source.startIndex, dimIndex);\n} // dimIndex may be overflow source data.\n// return {BE_ORDINAL}\n\n\nfunction doGuessOrdinal(data, sourceFormat, seriesLayoutBy, dimensionsDefine, startIndex, dimIndex) {\n  var result; // Experience value.\n\n  var maxLoop = 5;\n\n  if (isTypedArray(data)) {\n    return BE_ORDINAL.Not;\n  } // When sourceType is 'objectRows' or 'keyedColumns', dimensionsDefine\n  // always exists in source.\n\n\n  var dimName;\n  var dimType;\n\n  if (dimensionsDefine) {\n    var dimDefItem = dimensionsDefine[dimIndex];\n\n    if (isObject(dimDefItem)) {\n      dimName = dimDefItem.name;\n      dimType = dimDefItem.type;\n    } else if (isString(dimDefItem)) {\n      dimName = dimDefItem;\n    }\n  }\n\n  if (dimType != null) {\n    return dimType === 'ordinal' ? BE_ORDINAL.Must : BE_ORDINAL.Not;\n  }\n\n  if (sourceFormat === SOURCE_FORMAT_ARRAY_ROWS) {\n    if (seriesLayoutBy === SERIES_LAYOUT_BY_ROW) {\n      var sample = data[dimIndex];\n\n      for (var i = 0; i < (sample || []).length && i < maxLoop; i++) {\n        if ((result = detectValue(sample[startIndex + i])) != null) {\n          return result;\n        }\n      }\n    } else {\n      for (var i = 0; i < data.length && i < maxLoop; i++) {\n        var row = data[startIndex + i];\n\n        if (row && (result = detectValue(row[dimIndex])) != null) {\n          return result;\n        }\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_OBJECT_ROWS) {\n    if (!dimName) {\n      return BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n\n      if (item && (result = detectValue(item[dimName])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS) {\n    if (!dimName) {\n      return BE_ORDINAL.Not;\n    }\n\n    var sample = data[dimName];\n\n    if (!sample || isTypedArray(sample)) {\n      return BE_ORDINAL.Not;\n    }\n\n    for (var i = 0; i < sample.length && i < maxLoop; i++) {\n      if ((result = detectValue(sample[i])) != null) {\n        return result;\n      }\n    }\n  } else if (sourceFormat === SOURCE_FORMAT_ORIGINAL) {\n    for (var i = 0; i < data.length && i < maxLoop; i++) {\n      var item = data[i];\n      var val = getDataItemValue(item);\n\n      if (!isArray(val)) {\n        return BE_ORDINAL.Not;\n      }\n\n      if ((result = detectValue(val[dimIndex])) != null) {\n        return result;\n      }\n    }\n  }\n\n  function detectValue(val) {\n    var beStr = isString(val); // Consider usage convenience, '1', '2' will be treated as \"number\".\n    // `isFinit('')` get `true`.\n\n    if (val != null && isFinite(val) && val !== '') {\n      return beStr ? BE_ORDINAL.Might : BE_ORDINAL.Not;\n    } else if (beStr && val !== '-') {\n      return BE_ORDINAL.Must;\n    }\n  }\n\n  return BE_ORDINAL.Not;\n}\n\nexports.BE_ORDINAL = BE_ORDINAL;\nexports.detectSourceFormat = detectSourceFormat;\nexports.getSource = getSource;\nexports.resetSourceDefaulter = resetSourceDefaulter;\nexports.prepareSource = prepareSource;\nexports.makeSeriesEncodeForAxisCoordSys = makeSeriesEncodeForAxisCoordSys;\nexports.makeSeriesEncodeForNameBased = makeSeriesEncodeForNameBased;\nexports.guessOrdinal = guessOrdinal;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// import * as axisHelper from './axisHelper';\nvar _default = {\n  /**\n   * @param {boolean} origin\n   * @return {number|string} min value or 'dataMin' or null/undefined (means auto) or NaN\n   */\n  getMin: function (origin) {\n    var option = this.option;\n    var min = !origin && option.rangeStart != null ? option.rangeStart : option.min;\n\n    if (this.axis && min != null && min !== 'dataMin' && typeof min !== 'function' && !zrUtil.eqNaN(min)) {\n      min = this.axis.scale.parse(min);\n    }\n\n    return min;\n  },\n\n  /**\n   * @param {boolean} origin\n   * @return {number|string} max value or 'dataMax' or null/undefined (means auto) or NaN\n   */\n  getMax: function (origin) {\n    var option = this.option;\n    var max = !origin && option.rangeEnd != null ? option.rangeEnd : option.max;\n\n    if (this.axis && max != null && max !== 'dataMax' && typeof max !== 'function' && !zrUtil.eqNaN(max)) {\n      max = this.axis.scale.parse(max);\n    }\n\n    return max;\n  },\n\n  /**\n   * @return {boolean}\n   */\n  getNeedCrossZero: function () {\n    var option = this.option;\n    return option.rangeStart != null || option.rangeEnd != null ? false : !option.scale;\n  },\n\n  /**\n   * Should be implemented by each axis model if necessary.\n   * @return {module:echarts/model/Component} coordinate system model\n   */\n  getCoordSysModel: zrUtil.noop,\n\n  /**\n   * @param {number} rangeStart Can only be finite number or null/undefined or NaN.\n   * @param {number} rangeEnd Can only be finite number or null/undefined or NaN.\n   */\n  setRange: function (rangeStart, rangeEnd) {\n    this.option.rangeStart = rangeStart;\n    this.option.rangeEnd = rangeEnd;\n  },\n\n  /**\n   * Reset range\n   */\n  resetRange: function () {\n    // rangeStart and rangeEnd is readonly.\n    this.option.rangeStart = this.option.rangeEnd = null;\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isTypedArray = _util.isTypedArray;\nvar extend = _util.extend;\nvar assert = _util.assert;\nvar each = _util.each;\nvar isObject = _util.isObject;\n\nvar _model = require(\"../../util/model\");\n\nvar getDataItemValue = _model.getDataItemValue;\nvar isDataItemOption = _model.isDataItemOption;\n\nvar _number = require(\"../../util/number\");\n\nvar parseDate = _number.parseDate;\n\nvar Source = require(\"../Source\");\n\nvar _sourceType = require(\"./sourceType\");\n\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_ARRAY_ROWS = _sourceType.SOURCE_FORMAT_ARRAY_ROWS;\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SOURCE_FORMAT_OBJECT_ROWS = _sourceType.SOURCE_FORMAT_OBJECT_ROWS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO\n// ??? refactor? check the outer usage of data provider.\n// merge with defaultDimValueGetter?\n\n/**\n * If normal array used, mutable chunk size is supported.\n * If typed array used, chunk size must be fixed.\n */\nfunction DefaultDataProvider(source, dimSize) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  this._source = source;\n  var data = this._data = source.data;\n  var sourceFormat = source.sourceFormat; // Typed array. TODO IE10+?\n\n  if (sourceFormat === SOURCE_FORMAT_TYPED_ARRAY) {\n    this._offset = 0;\n    this._dimSize = dimSize;\n    this._data = data;\n  }\n\n  var methods = providerMethods[sourceFormat === SOURCE_FORMAT_ARRAY_ROWS ? sourceFormat + '_' + source.seriesLayoutBy : sourceFormat];\n  extend(this, methods);\n}\n\nvar providerProto = DefaultDataProvider.prototype; // If data is pure without style configuration\n\nproviderProto.pure = false; // If data is persistent and will not be released after use.\n\nproviderProto.persistent = true; // ???! FIXME legacy data provider do not has method getSource\n\nproviderProto.getSource = function () {\n  return this._source;\n};\n\nvar providerMethods = {\n  'arrayRows_column': {\n    pure: true,\n    count: function () {\n      return Math.max(0, this._data.length - this._source.startIndex);\n    },\n    getItem: function (idx) {\n      return this._data[idx + this._source.startIndex];\n    },\n    appendData: appendDataSimply\n  },\n  'arrayRows_row': {\n    pure: true,\n    count: function () {\n      var row = this._data[0];\n      return row ? Math.max(0, row.length - this._source.startIndex) : 0;\n    },\n    getItem: function (idx) {\n      idx += this._source.startIndex;\n      var item = [];\n      var data = this._data;\n\n      for (var i = 0; i < data.length; i++) {\n        var row = data[i];\n        item.push(row ? row[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function () {\n      throw new Error('Do not support appendData when set seriesLayoutBy: \"row\".');\n    }\n  },\n  'objectRows': {\n    pure: true,\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'keyedColumns': {\n    pure: true,\n    count: function () {\n      var dimName = this._source.dimensionsDefine[0].name;\n      var col = this._data[dimName];\n      return col ? col.length : 0;\n    },\n    getItem: function (idx) {\n      var item = [];\n      var dims = this._source.dimensionsDefine;\n\n      for (var i = 0; i < dims.length; i++) {\n        var col = this._data[dims[i].name];\n        item.push(col ? col[idx] : null);\n      }\n\n      return item;\n    },\n    appendData: function (newData) {\n      var data = this._data;\n      each(newData, function (newCol, key) {\n        var oldCol = data[key] || (data[key] = []);\n\n        for (var i = 0; i < (newCol || []).length; i++) {\n          oldCol.push(newCol[i]);\n        }\n      });\n    }\n  },\n  'original': {\n    count: countSimply,\n    getItem: getItemSimply,\n    appendData: appendDataSimply\n  },\n  'typedArray': {\n    persistent: false,\n    pure: true,\n    count: function () {\n      return this._data ? this._data.length / this._dimSize : 0;\n    },\n    getItem: function (idx, out) {\n      idx = idx - this._offset;\n      out = out || [];\n      var offset = this._dimSize * idx;\n\n      for (var i = 0; i < this._dimSize; i++) {\n        out[i] = this._data[offset + i];\n      }\n\n      return out;\n    },\n    appendData: function (newData) {\n      this._data = newData;\n    },\n    // Clean self if data is already used.\n    clean: function () {\n      // PENDING\n      this._offset += this.count();\n      this._data = null;\n    }\n  }\n};\n\nfunction countSimply() {\n  return this._data.length;\n}\n\nfunction getItemSimply(idx) {\n  return this._data[idx];\n}\n\nfunction appendDataSimply(newData) {\n  for (var i = 0; i < newData.length; i++) {\n    this._data.push(newData[i]);\n  }\n}\n\nvar rawValueGetters = {\n  arrayRows: getRawValueSimply,\n  objectRows: function (dataItem, dataIndex, dimIndex, dimName) {\n    return dimIndex != null ? dataItem[dimName] : dataItem;\n  },\n  keyedColumns: getRawValueSimply,\n  original: function (dataItem, dataIndex, dimIndex, dimName) {\n    // FIXME\n    // In some case (markpoint in geo (geo-map.html)), dataItem\n    // is {coord: [...]}\n    var value = getDataItemValue(dataItem);\n    return dimIndex == null || !(value instanceof Array) ? value : value[dimIndex];\n  },\n  typedArray: getRawValueSimply\n};\n\nfunction getRawValueSimply(dataItem, dataIndex, dimIndex, dimName) {\n  return dimIndex != null ? dataItem[dimIndex] : dataItem;\n}\n\nvar defaultDimValueGetters = {\n  arrayRows: getDimValueSimply,\n  objectRows: function (dataItem, dimName, dataIndex, dimIndex) {\n    return converDataValue(dataItem[dimName], this._dimensionInfos[dimName]);\n  },\n  keyedColumns: getDimValueSimply,\n  original: function (dataItem, dimName, dataIndex, dimIndex) {\n    // Performance sensitive, do not use modelUtil.getDataItemValue.\n    // If dataItem is an plain object with no value field, the var `value`\n    // will be assigned with the object, but it will be tread correctly\n    // in the `convertDataValue`.\n    var value = dataItem && (dataItem.value == null ? dataItem : dataItem.value); // If any dataItem is like { value: 10 }\n\n    if (!this._rawData.pure && isDataItemOption(dataItem)) {\n      this.hasItemOption = true;\n    }\n\n    return converDataValue(value instanceof Array ? value[dimIndex] // If value is a single number or something else not array.\n    : value, this._dimensionInfos[dimName]);\n  },\n  typedArray: function (dataItem, dimName, dataIndex, dimIndex) {\n    return dataItem[dimIndex];\n  }\n};\n\nfunction getDimValueSimply(dataItem, dimName, dataIndex, dimIndex) {\n  return converDataValue(dataItem[dimIndex], this._dimensionInfos[dimName]);\n}\n/**\n * This helper method convert value in data.\n * @param {string|number|Date} value\n * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n *        If \"dimInfo.ordinalParseAndSave\", ordinal value can be parsed.\n */\n\n\nfunction converDataValue(value, dimInfo) {\n  // Performance sensitive.\n  var dimType = dimInfo && dimInfo.type;\n\n  if (dimType === 'ordinal') {\n    // If given value is a category string\n    var ordinalMeta = dimInfo && dimInfo.ordinalMeta;\n    return ordinalMeta ? ordinalMeta.parseAndCollect(value) : value;\n  }\n\n  if (dimType === 'time' // spead up when using timestamp\n  && typeof value !== 'number' && value != null && value !== '-') {\n    value = +parseDate(value);\n  } // dimType defaults 'number'.\n  // If dimType is not ordinal and value is null or undefined or NaN or '-',\n  // parse to NaN.\n\n\n  return value == null || value === '' ? NaN // If string (like '-'), using '+' parse to NaN\n  // If object, also parse to NaN\n  : +value;\n} // ??? FIXME can these logic be more neat: getRawValue, getRawDataItem,\n// Consider persistent.\n// Caution: why use raw value to display on label or tooltip?\n// A reason is to avoid format. For example time value we do not know\n// how to format is expected. More over, if stack is used, calculated\n// value may be 0.91000000001, which have brings trouble to display.\n// TODO: consider how to treat null/undefined/NaN when display?\n\n/**\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string|number} [dim] dimName or dimIndex\n * @return {Array.<number>|string|number} can be null/undefined.\n */\n\n\nfunction retrieveRawValue(data, dataIndex, dim) {\n  if (!data) {\n    return;\n  } // Consider data may be not persistent.\n\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (dataItem == null) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n  var dimName;\n  var dimIndex;\n  var dimInfo = data.getDimensionInfo(dim);\n\n  if (dimInfo) {\n    dimName = dimInfo.name;\n    dimIndex = dimInfo.index;\n  }\n\n  return rawValueGetters[sourceFormat](dataItem, dataIndex, dimIndex, dimName);\n}\n/**\n * Compatible with some cases (in pie, map) like:\n * data: [{name: 'xx', value: 5, selected: true}, ...]\n * where only sourceFormat is 'original' and 'objectRows' supported.\n *\n * ??? TODO\n * Supported detail options in data item when using 'arrayRows'.\n *\n * @param {module:echarts/data/List} data\n * @param {number} dataIndex\n * @param {string} attr like 'selected'\n */\n\n\nfunction retrieveRawAttr(data, dataIndex, attr) {\n  if (!data) {\n    return;\n  }\n\n  var sourceFormat = data.getProvider().getSource().sourceFormat;\n\n  if (sourceFormat !== SOURCE_FORMAT_ORIGINAL && sourceFormat !== SOURCE_FORMAT_OBJECT_ROWS) {\n    return;\n  }\n\n  var dataItem = data.getRawDataItem(dataIndex);\n\n  if (sourceFormat === SOURCE_FORMAT_ORIGINAL && !isObject(dataItem)) {\n    dataItem = null;\n  }\n\n  if (dataItem) {\n    return dataItem[attr];\n  }\n}\n\nexports.DefaultDataProvider = DefaultDataProvider;\nexports.defaultDimValueGetters = defaultDimValueGetters;\nexports.retrieveRawValue = retrieveRawValue;\nexports.retrieveRawAttr = retrieveRawAttr;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar createHashMap = _util.createHashMap;\nvar assert = _util.assert;\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar OTHER_DIMENSIONS = createHashMap(['tooltip', 'label', 'itemName', 'itemId', 'seriesName']);\n\nfunction summarizeDimensions(data) {\n  var summary = {};\n  var encode = summary.encode = {};\n  var notExtraCoordDimMap = createHashMap();\n  var defaultedLabel = [];\n  var defaultedTooltip = []; // See the comment of `List.js#userOutput`.\n\n  var userOutput = summary.userOutput = {\n    dimensionNames: data.dimensions.slice(),\n    encode: {}\n  };\n  each(data.dimensions, function (dimName) {\n    var dimItem = data.getDimensionInfo(dimName);\n    var coordDim = dimItem.coordDim;\n\n    if (coordDim) {\n      var coordDimIndex = dimItem.coordDimIndex;\n      getOrCreateEncodeArr(encode, coordDim)[coordDimIndex] = dimName;\n\n      if (!dimItem.isExtraCoord) {\n        notExtraCoordDimMap.set(coordDim, 1); // Use the last coord dim (and label friendly) as default label,\n        // because when dataset is used, it is hard to guess which dimension\n        // can be value dimension. If both show x, y on label is not look good,\n        // and conventionally y axis is focused more.\n\n        if (mayLabelDimType(dimItem.type)) {\n          defaultedLabel[0] = dimName;\n        } // User output encode do not contain generated coords.\n        // And it only has index. User can use index to retrieve value from the raw item array.\n\n\n        getOrCreateEncodeArr(userOutput.encode, coordDim)[coordDimIndex] = dimItem.index;\n      }\n\n      if (dimItem.defaultTooltip) {\n        defaultedTooltip.push(dimName);\n      }\n    }\n\n    OTHER_DIMENSIONS.each(function (v, otherDim) {\n      var encodeArr = getOrCreateEncodeArr(encode, otherDim);\n      var dimIndex = dimItem.otherDims[otherDim];\n\n      if (dimIndex != null && dimIndex !== false) {\n        encodeArr[dimIndex] = dimItem.name;\n      }\n    });\n  });\n  var dataDimsOnCoord = [];\n  var encodeFirstDimNotExtra = {};\n  notExtraCoordDimMap.each(function (v, coordDim) {\n    var dimArr = encode[coordDim]; // ??? FIXME extra coord should not be set in dataDimsOnCoord.\n    // But should fix the case that radar axes: simplify the logic\n    // of `completeDimension`, remove `extraPrefix`.\n\n    encodeFirstDimNotExtra[coordDim] = dimArr[0]; // Not necessary to remove duplicate, because a data\n    // dim canot on more than one coordDim.\n\n    dataDimsOnCoord = dataDimsOnCoord.concat(dimArr);\n  });\n  summary.dataDimsOnCoord = dataDimsOnCoord;\n  summary.encodeFirstDimNotExtra = encodeFirstDimNotExtra;\n  var encodeLabel = encode.label; // FIXME `encode.label` is not recommanded, because formatter can not be set\n  // in this way. Use label.formatter instead. May be remove this approach someday.\n\n  if (encodeLabel && encodeLabel.length) {\n    defaultedLabel = encodeLabel.slice();\n  }\n\n  var encodeTooltip = encode.tooltip;\n\n  if (encodeTooltip && encodeTooltip.length) {\n    defaultedTooltip = encodeTooltip.slice();\n  } else if (!defaultedTooltip.length) {\n    defaultedTooltip = defaultedLabel.slice();\n  }\n\n  encode.defaultedLabel = defaultedLabel;\n  encode.defaultedTooltip = defaultedTooltip;\n  return summary;\n}\n\nfunction getOrCreateEncodeArr(encode, dim) {\n  if (!encode.hasOwnProperty(dim)) {\n    encode[dim] = [];\n  }\n\n  return encode[dim];\n}\n\nfunction getDimensionTypeByAxis(axisType) {\n  return axisType === 'category' ? 'ordinal' : axisType === 'time' ? 'time' : 'float';\n}\n\nfunction mayLabelDimType(dimType) {\n  // In most cases, ordinal and time do not suitable for label.\n  // Ordinal info can be displayed on axis. Time is too long.\n  return !(dimType === 'ordinal' || dimType === 'time');\n} // function findTheLastDimMayLabel(data) {\n//     // Get last value dim\n//     var dimensions = data.dimensions.slice();\n//     var valueType;\n//     var valueDim;\n//     while (dimensions.length && (\n//         valueDim = dimensions.pop(),\n//         valueType = data.getDimensionInfo(valueDim).type,\n//         valueType === 'ordinal' || valueType === 'time'\n//     )) {} // jshint ignore:line\n//     return valueDim;\n// }\n\n\nexports.OTHER_DIMENSIONS = OTHER_DIMENSIONS;\nexports.summarizeDimensions = summarizeDimensions;\nexports.getDimensionTypeByAxis = getDimensionTypeByAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\nvar axisModelCreator = require(\"../axisModelCreator\");\n\nvar axisModelCommonMixin = require(\"../axisModelCommonMixin\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar AxisModel = ComponentModel.extend({\n  type: 'cartesian2dAxis',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Axis2D}\n   */\n  axis: null,\n\n  /**\n   * @override\n   */\n  init: function () {\n    AxisModel.superApply(this, 'init', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  mergeOption: function () {\n    AxisModel.superApply(this, 'mergeOption', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   */\n  restoreData: function () {\n    AxisModel.superApply(this, 'restoreData', arguments);\n    this.resetRange();\n  },\n\n  /**\n   * @override\n   * @return {module:echarts/model/Component}\n   */\n  getCoordSysModel: function () {\n    return this.ecModel.queryComponents({\n      mainType: 'grid',\n      index: this.option.gridIndex,\n      id: this.option.gridId\n    })[0];\n  }\n});\n\nfunction getAxisType(axisDim, option) {\n  // Default axis with data is category axis\n  return option.type || (option.data ? 'category' : 'value');\n}\n\nzrUtil.merge(AxisModel.prototype, axisModelCommonMixin);\nvar extraOption = {\n  // gridIndex: 0,\n  // gridId: '',\n  // Offset is for multiple axis on the same position\n  offset: 0\n};\naxisModelCreator('x', AxisModel, getAxisType, extraOption);\naxisModelCreator('y', AxisModel, getAxisType, extraOption);\nvar _default = AxisModel;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// (1) The code `if (__DEV__) ...` can be removed by build tool.\n// (2) If intend to use `__DEV__`, this module should be imported. Use a global\n// variable `__DEV__` may cause that miss the declaration (see #6535), or the\n// declaration is behind of the using position (for example in `Model.extent`,\n// And tools like rollup can not analysis the dependency if not import).\nvar dev; // In browser\n\nif (typeof window !== 'undefined') {\n  dev = window.__DEV__;\n} // In node\nelse if (typeof global !== 'undefined') {\n    dev = global.__DEV__;\n  }\n\nif (typeof dev === 'undefined') {\n  dev = true;\n}\n\nvar __DEV__ = dev;\nexports.__DEV__ = __DEV__;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @class\n * @param {Object|DataDimensionInfo} [opt] All of the fields will be shallow copied.\n */\nfunction DataDimensionInfo(opt) {\n  if (opt != null) {\n    zrUtil.extend(this, opt);\n  }\n  /**\n   * Dimension name.\n   * Mandatory.\n   * @type {string}\n   */\n  // this.name;\n\n  /**\n   * The origin name in dimsDef, see source helper.\n   * If displayName given, the tooltip will displayed vertically.\n   * Optional.\n   * @type {string}\n   */\n  // this.displayName;\n\n  /**\n   * Which coordSys dimension this dimension mapped to.\n   * A `coordDim` can be a \"coordSysDim\" that the coordSys required\n   * (for example, an item in `coordSysDims` of `model/referHelper#CoordSysInfo`),\n   * or an generated \"extra coord name\" if does not mapped to any \"coordSysDim\"\n   * (That is determined by whether `isExtraCoord` is `true`).\n   * Mandatory.\n   * @type {string}\n   */\n  // this.coordDim;\n\n  /**\n   * The index of this dimension in `series.encode[coordDim]`.\n   * Mandatory.\n   * @type {number}\n   */\n  // this.coordDimIndex;\n\n  /**\n   * Dimension type. The enumerable values are the key of\n   * `dataCtors` of `data/List`.\n   * Optional.\n   * @type {string}\n   */\n  // this.type;\n\n  /**\n   * This index of this dimension info in `data/List#_dimensionInfos`.\n   * Mandatory after added to `data/List`.\n   * @type {number}\n   */\n  // this.index;\n\n  /**\n   * The format of `otherDims` is:\n   * ```js\n   * {\n   *     tooltip: number optional,\n   *     label: number optional,\n   *     itemName: number optional,\n   *     seriesName: number optional,\n   * }\n   * ```\n   *\n   * A `series.encode` can specified these fields:\n   * ```js\n   * encode: {\n   *     // \"3, 1, 5\" is the index of data dimension.\n   *     tooltip: [3, 1, 5],\n   *     label: [0, 3],\n   *     ...\n   * }\n   * ```\n   * `otherDims` is the parse result of the `series.encode` above, like:\n   * ```js\n   * // Suppose the index of this data dimension is `3`.\n   * this.otherDims = {\n   *     // `3` is at the index `0` of the `encode.tooltip`\n   *     tooltip: 0,\n   *     // `3` is at the index `1` of the `encode.tooltip`\n   *     label: 1\n   * };\n   * ```\n   *\n   * This prop should never be `null`/`undefined` after initialized.\n   * @type {Object}\n   */\n\n\n  this.otherDims = {};\n  /**\n   * Be `true` if this dimension is not mapped to any \"coordSysDim\" that the\n   * \"coordSys\" required.\n   * Mandatory.\n   * @type {boolean}\n   */\n  // this.isExtraCoord;\n\n  /**\n   * @type {module:data/OrdinalMeta}\n   */\n  // this.ordinalMeta;\n\n  /**\n   * Whether to create inverted indices.\n   * @type {boolean}\n   */\n  // this.createInvertedIndices;\n}\n\n;\nvar _default = DataDimensionInfo;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar isObject = _util.isObject;\nvar each = _util.each;\nvar map = _util.map;\nvar indexOf = _util.indexOf;\nvar retrieve = _util.retrieve;\n\nvar _layout = require(\"../../util/layout\");\n\nvar getLayoutRect = _layout.getLayoutRect;\n\nvar _axisHelper = require(\"../../coord/axisHelper\");\n\nvar createScaleByModel = _axisHelper.createScaleByModel;\nvar ifAxisCrossZero = _axisHelper.ifAxisCrossZero;\nvar niceScaleExtent = _axisHelper.niceScaleExtent;\nvar estimateLabelUnionRect = _axisHelper.estimateLabelUnionRect;\n\nvar Cartesian2D = require(\"./Cartesian2D\");\n\nvar Axis2D = require(\"./Axis2D\");\n\nvar CoordinateSystem = require(\"../../CoordinateSystem\");\n\nvar _dataStackHelper = require(\"../../data/helper/dataStackHelper\");\n\nvar getStackedDimension = _dataStackHelper.getStackedDimension;\n\nrequire(\"./GridModel\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\n// Depends on GridModel, AxisModel, which performs preprocess.\n\n/**\n * Check if the axis is used in the specified grid\n * @inner\n */\nfunction isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n  return axisModel.getCoordSysModel() === gridModel;\n}\n\nfunction Grid(gridModel, ecModel, api) {\n  /**\n   * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n   * @private\n   */\n  this._coordsMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n   * @private\n   */\n\n  this._coordsList = [];\n  /**\n   * @type {Object.<string, Array.<module:echarts/coord/cartesian/Axis2D>>}\n   * @private\n   */\n\n  this._axesMap = {};\n  /**\n   * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n   * @private\n   */\n\n  this._axesList = [];\n\n  this._initCartesian(gridModel, ecModel, api);\n\n  this.model = gridModel;\n}\n\nvar gridProto = Grid.prototype;\ngridProto.type = 'grid';\ngridProto.axisPointerEnabled = true;\n\ngridProto.getRect = function () {\n  return this._rect;\n};\n\ngridProto.update = function (ecModel, api) {\n  var axesMap = this._axesMap;\n\n  this._updateScale(ecModel, this.model);\n\n  each(axesMap.x, function (xAxis) {\n    niceScaleExtent(xAxis.scale, xAxis.model);\n  });\n  each(axesMap.y, function (yAxis) {\n    niceScaleExtent(yAxis.scale, yAxis.model);\n  }); // Key: axisDim_axisIndex, value: boolean, whether onZero target.\n\n  var onZeroRecords = {};\n  each(axesMap.x, function (xAxis) {\n    fixAxisOnZero(axesMap, 'y', xAxis, onZeroRecords);\n  });\n  each(axesMap.y, function (yAxis) {\n    fixAxisOnZero(axesMap, 'x', yAxis, onZeroRecords);\n  }); // Resize again if containLabel is enabled\n  // FIXME It may cause getting wrong grid size in data processing stage\n\n  this.resize(this.model, api);\n};\n\nfunction fixAxisOnZero(axesMap, otherAxisDim, axis, onZeroRecords) {\n  axis.getAxesOnZeroOf = function () {\n    // TODO: onZero of multiple axes.\n    return otherAxisOnZeroOf ? [otherAxisOnZeroOf] : [];\n  }; // onZero can not be enabled in these two situations:\n  // 1. When any other axis is a category axis.\n  // 2. When no axis is cross 0 point.\n\n\n  var otherAxes = axesMap[otherAxisDim];\n  var otherAxisOnZeroOf;\n  var axisModel = axis.model;\n  var onZero = axisModel.get('axisLine.onZero');\n  var onZeroAxisIndex = axisModel.get('axisLine.onZeroAxisIndex');\n\n  if (!onZero) {\n    return;\n  } // If target axis is specified.\n\n\n  if (onZeroAxisIndex != null) {\n    if (canOnZeroToAxis(otherAxes[onZeroAxisIndex])) {\n      otherAxisOnZeroOf = otherAxes[onZeroAxisIndex];\n    }\n  } else {\n    // Find the first available other axis.\n    for (var idx in otherAxes) {\n      if (otherAxes.hasOwnProperty(idx) && canOnZeroToAxis(otherAxes[idx]) // Consider that two Y axes on one value axis,\n      // if both onZero, the two Y axes overlap.\n      && !onZeroRecords[getOnZeroRecordKey(otherAxes[idx])]) {\n        otherAxisOnZeroOf = otherAxes[idx];\n        break;\n      }\n    }\n  }\n\n  if (otherAxisOnZeroOf) {\n    onZeroRecords[getOnZeroRecordKey(otherAxisOnZeroOf)] = true;\n  }\n\n  function getOnZeroRecordKey(axis) {\n    return axis.dim + '_' + axis.index;\n  }\n}\n\nfunction canOnZeroToAxis(axis) {\n  return axis && axis.type !== 'category' && axis.type !== 'time' && ifAxisCrossZero(axis);\n}\n/**\n * Resize the grid\n * @param {module:echarts/coord/cartesian/GridModel} gridModel\n * @param {module:echarts/ExtensionAPI} api\n */\n\n\ngridProto.resize = function (gridModel, api, ignoreContainLabel) {\n  var gridRect = getLayoutRect(gridModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n  this._rect = gridRect;\n  var axesList = this._axesList;\n  adjustAxes(); // Minus label size\n\n  if (!ignoreContainLabel && gridModel.get('containLabel')) {\n    each(axesList, function (axis) {\n      if (!axis.model.get('axisLabel.inside')) {\n        var labelUnionRect = estimateLabelUnionRect(axis);\n\n        if (labelUnionRect) {\n          var dim = axis.isHorizontal() ? 'height' : 'width';\n          var margin = axis.model.get('axisLabel.margin');\n          gridRect[dim] -= labelUnionRect[dim] + margin;\n\n          if (axis.position === 'top') {\n            gridRect.y += labelUnionRect.height + margin;\n          } else if (axis.position === 'left') {\n            gridRect.x += labelUnionRect.width + margin;\n          }\n        }\n      }\n    });\n    adjustAxes();\n  }\n\n  function adjustAxes() {\n    each(axesList, function (axis) {\n      var isHorizontal = axis.isHorizontal();\n      var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n      var idx = axis.inverse ? 1 : 0;\n      axis.setExtent(extent[idx], extent[1 - idx]);\n      updateAxisTransform(axis, isHorizontal ? gridRect.x : gridRect.y);\n    });\n  }\n};\n/**\n * @param {string} axisType\n * @param {number} [axisIndex]\n */\n\n\ngridProto.getAxis = function (axisType, axisIndex) {\n  var axesMapOnDim = this._axesMap[axisType];\n\n  if (axesMapOnDim != null) {\n    if (axisIndex == null) {\n      // Find first axis\n      for (var name in axesMapOnDim) {\n        if (axesMapOnDim.hasOwnProperty(name)) {\n          return axesMapOnDim[name];\n        }\n      }\n    }\n\n    return axesMapOnDim[axisIndex];\n  }\n};\n/**\n * @return {Array.<module:echarts/coord/Axis>}\n */\n\n\ngridProto.getAxes = function () {\n  return this._axesList.slice();\n};\n/**\n * Usage:\n *      grid.getCartesian(xAxisIndex, yAxisIndex);\n *      grid.getCartesian(xAxisIndex);\n *      grid.getCartesian(null, yAxisIndex);\n *      grid.getCartesian({xAxisIndex: ..., yAxisIndex: ...});\n *\n * @param {number|Object} [xAxisIndex]\n * @param {number} [yAxisIndex]\n */\n\n\ngridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n  if (xAxisIndex != null && yAxisIndex != null) {\n    var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n    return this._coordsMap[key];\n  }\n\n  if (isObject(xAxisIndex)) {\n    yAxisIndex = xAxisIndex.yAxisIndex;\n    xAxisIndex = xAxisIndex.xAxisIndex;\n  } // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n\n\n  for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n    if (coordList[i].getAxis('x').index === xAxisIndex || coordList[i].getAxis('y').index === yAxisIndex) {\n      return coordList[i];\n    }\n  }\n};\n\ngridProto.getCartesians = function () {\n  return this._coordsList.slice();\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertToPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.dataToPoint(value) : target.axis ? target.axis.toGlobalCoord(target.axis.dataToCoord(value)) : null;\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.convertFromPixel = function (ecModel, finder, value) {\n  var target = this._findConvertTarget(ecModel, finder);\n\n  return target.cartesian ? target.cartesian.pointToData(value) : target.axis ? target.axis.coordToData(target.axis.toLocalCoord(value)) : null;\n};\n/**\n * @inner\n */\n\n\ngridProto._findConvertTarget = function (ecModel, finder) {\n  var seriesModel = finder.seriesModel;\n  var xAxisModel = finder.xAxisModel || seriesModel && seriesModel.getReferringComponents('xAxis')[0];\n  var yAxisModel = finder.yAxisModel || seriesModel && seriesModel.getReferringComponents('yAxis')[0];\n  var gridModel = finder.gridModel;\n  var coordsList = this._coordsList;\n  var cartesian;\n  var axis;\n\n  if (seriesModel) {\n    cartesian = seriesModel.coordinateSystem;\n    indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n  } else if (xAxisModel && yAxisModel) {\n    cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  } else if (xAxisModel) {\n    axis = this.getAxis('x', xAxisModel.componentIndex);\n  } else if (yAxisModel) {\n    axis = this.getAxis('y', yAxisModel.componentIndex);\n  } // Lowest priority.\n  else if (gridModel) {\n      var grid = gridModel.coordinateSystem;\n\n      if (grid === this) {\n        cartesian = this._coordsList[0];\n      }\n    }\n\n  return {\n    cartesian: cartesian,\n    axis: axis\n  };\n};\n/**\n * @implements\n * see {module:echarts/CoodinateSystem}\n */\n\n\ngridProto.containPoint = function (point) {\n  var coord = this._coordsList[0];\n\n  if (coord) {\n    return coord.containPoint(point);\n  }\n};\n/**\n * Initialize cartesian coordinate systems\n * @private\n */\n\n\ngridProto._initCartesian = function (gridModel, ecModel, api) {\n  var axisPositionUsed = {\n    left: false,\n    right: false,\n    top: false,\n    bottom: false\n  };\n  var axesMap = {\n    x: {},\n    y: {}\n  };\n  var axesCount = {\n    x: 0,\n    y: 0\n  }; /// Create axis\n\n  ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n  ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n  if (!axesCount.x || !axesCount.y) {\n    // Roll back when there no either x or y axis\n    this._axesMap = {};\n    this._axesList = [];\n    return;\n  }\n\n  this._axesMap = axesMap; /// Create cartesian2d\n\n  each(axesMap.x, function (xAxis, xAxisIndex) {\n    each(axesMap.y, function (yAxis, yAxisIndex) {\n      var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n      var cartesian = new Cartesian2D(key);\n      cartesian.grid = this;\n      cartesian.model = gridModel;\n      this._coordsMap[key] = cartesian;\n\n      this._coordsList.push(cartesian);\n\n      cartesian.addAxis(xAxis);\n      cartesian.addAxis(yAxis);\n    }, this);\n  }, this);\n\n  function createAxisCreator(axisType) {\n    return function (axisModel, idx) {\n      if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var axisPosition = axisModel.get('position');\n\n      if (axisType === 'x') {\n        // Fix position\n        if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n          // Default bottom of X\n          axisPosition = axisPositionUsed.bottom ? 'top' : 'bottom';\n        }\n      } else {\n        // Fix position\n        if (axisPosition !== 'left' && axisPosition !== 'right') {\n          // Default left of Y\n          axisPosition = axisPositionUsed.left ? 'right' : 'left';\n        }\n      }\n\n      axisPositionUsed[axisPosition] = true;\n      var axis = new Axis2D(axisType, createScaleByModel(axisModel), [0, 0], axisModel.get('type'), axisPosition);\n      var isCategory = axis.type === 'category';\n      axis.onBand = isCategory && axisModel.get('boundaryGap');\n      axis.inverse = axisModel.get('inverse'); // Inject axis into axisModel\n\n      axisModel.axis = axis; // Inject axisModel into axis\n\n      axis.model = axisModel; // Inject grid info axis\n\n      axis.grid = this; // Index of axis, can be used as key\n\n      axis.index = idx;\n\n      this._axesList.push(axis);\n\n      axesMap[axisType][idx] = axis;\n      axesCount[axisType]++;\n    };\n  }\n};\n/**\n * Update cartesian properties from series\n * @param  {module:echarts/model/Option} option\n * @private\n */\n\n\ngridProto._updateScale = function (ecModel, gridModel) {\n  // Reset scale\n  each(this._axesList, function (axis) {\n    axis.scale.setExtent(Infinity, -Infinity);\n  });\n  ecModel.eachSeries(function (seriesModel) {\n    if (isCartesian2D(seriesModel)) {\n      var axesModels = findAxesModels(seriesModel, ecModel);\n      var xAxisModel = axesModels[0];\n      var yAxisModel = axesModels[1];\n\n      if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel) || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)) {\n        return;\n      }\n\n      var cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n      var data = seriesModel.getData();\n      var xAxis = cartesian.getAxis('x');\n      var yAxis = cartesian.getAxis('y');\n\n      if (data.type === 'list') {\n        unionExtent(data, xAxis, seriesModel);\n        unionExtent(data, yAxis, seriesModel);\n      }\n    }\n  }, this);\n\n  function unionExtent(data, axis, seriesModel) {\n    each(data.mapDimension(axis.dim, true), function (dim) {\n      axis.scale.unionExtentFromData( // For example, the extent of the orginal dimension\n      // is [0.1, 0.5], the extent of the `stackResultDimension`\n      // is [7, 9], the final extent should not include [0.1, 0.5].\n      data, getStackedDimension(data, dim));\n    });\n  }\n};\n/**\n * @param {string} [dim] 'x' or 'y' or 'auto' or null/undefined\n * @return {Object} {baseAxes: [], otherAxes: []}\n */\n\n\ngridProto.getTooltipAxes = function (dim) {\n  var baseAxes = [];\n  var otherAxes = [];\n  each(this.getCartesians(), function (cartesian) {\n    var baseAxis = dim != null && dim !== 'auto' ? cartesian.getAxis(dim) : cartesian.getBaseAxis();\n    var otherAxis = cartesian.getOtherAxis(baseAxis);\n    indexOf(baseAxes, baseAxis) < 0 && baseAxes.push(baseAxis);\n    indexOf(otherAxes, otherAxis) < 0 && otherAxes.push(otherAxis);\n  });\n  return {\n    baseAxes: baseAxes,\n    otherAxes: otherAxes\n  };\n};\n/**\n * @inner\n */\n\n\nfunction updateAxisTransform(axis, coordBase) {\n  var axisExtent = axis.getExtent();\n  var axisExtentSum = axisExtent[0] + axisExtent[1]; // Fast transform\n\n  axis.toGlobalCoord = axis.dim === 'x' ? function (coord) {\n    return coord + coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n  axis.toLocalCoord = axis.dim === 'x' ? function (coord) {\n    return coord - coordBase;\n  } : function (coord) {\n    return axisExtentSum - coord + coordBase;\n  };\n}\n\nvar axesTypes = ['xAxis', 'yAxis'];\n/**\n * @inner\n */\n\nfunction findAxesModels(seriesModel, ecModel) {\n  return map(axesTypes, function (axisType) {\n    var axisModel = seriesModel.getReferringComponents(axisType)[0];\n    return axisModel;\n  });\n}\n/**\n * @inner\n */\n\n\nfunction isCartesian2D(seriesModel) {\n  return seriesModel.get('coordinateSystem') === 'cartesian2d';\n}\n\nGrid.create = function (ecModel, api) {\n  var grids = [];\n  ecModel.eachComponent('grid', function (gridModel, idx) {\n    var grid = new Grid(gridModel, ecModel, api);\n    grid.name = 'grid_' + idx; // dataSampling requires axis extent, so resize\n    // should be performed in create stage.\n\n    grid.resize(gridModel, api, true);\n    gridModel.coordinateSystem = grid;\n    grids.push(grid);\n  }); // Inject the coordinateSystems into seriesModel\n\n  ecModel.eachSeries(function (seriesModel) {\n    if (!isCartesian2D(seriesModel)) {\n      return;\n    }\n\n    var axesModels = findAxesModels(seriesModel, ecModel);\n    var xAxisModel = axesModels[0];\n    var yAxisModel = axesModels[1];\n    var gridModel = xAxisModel.getCoordSysModel();\n    var grid = gridModel.coordinateSystem;\n    seriesModel.coordinateSystem = grid.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n  });\n  return grids;\n}; // For deciding which dimensions to use when creating list data\n\n\nGrid.dimensions = Grid.prototype.dimensions = Cartesian2D.prototype.dimensions;\nCoordinateSystem.register('cartesian2d', Grid);\nvar _default = Grid;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Model = require(\"../model/Model\");\n\nvar DataDiffer = require(\"./DataDiffer\");\n\nvar Source = require(\"./Source\");\n\nvar _dataProvider = require(\"./helper/dataProvider\");\n\nvar defaultDimValueGetters = _dataProvider.defaultDimValueGetters;\nvar DefaultDataProvider = _dataProvider.DefaultDataProvider;\n\nvar _dimensionHelper = require(\"./helper/dimensionHelper\");\n\nvar summarizeDimensions = _dimensionHelper.summarizeDimensions;\n\nvar DataDimensionInfo = require(\"./DataDimensionInfo\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/* global Float64Array, Int32Array, Uint32Array, Uint16Array */\n\n/**\n * List for data storage\n * @module echarts/data/List\n */\nvar isObject = zrUtil.isObject;\nvar UNDEFINED = 'undefined';\nvar INDEX_NOT_FOUND = -1; // Use prefix to avoid index to be the same as otherIdList[idx],\n// which will cause weird udpate animation.\n\nvar ID_PREFIX = 'e\\0\\0';\nvar dataCtors = {\n  'float': typeof Float64Array === UNDEFINED ? Array : Float64Array,\n  'int': typeof Int32Array === UNDEFINED ? Array : Int32Array,\n  // Ordinal data type can be string or int\n  'ordinal': Array,\n  'number': Array,\n  'time': Array\n}; // Caution: MUST not use `new CtorUint32Array(arr, 0, len)`, because the Ctor of array is\n// different from the Ctor of typed array.\n\nvar CtorUint32Array = typeof Uint32Array === UNDEFINED ? Array : Uint32Array;\nvar CtorInt32Array = typeof Int32Array === UNDEFINED ? Array : Int32Array;\nvar CtorUint16Array = typeof Uint16Array === UNDEFINED ? Array : Uint16Array;\n\nfunction getIndicesCtor(list) {\n  // The possible max value in this._indicies is always this._rawCount despite of filtering.\n  return list._rawCount > 65535 ? CtorUint32Array : CtorUint16Array;\n}\n\nfunction cloneChunk(originalChunk) {\n  var Ctor = originalChunk.constructor; // Only shallow clone is enough when Array.\n\n  return Ctor === Array ? originalChunk.slice() : new Ctor(originalChunk);\n}\n\nvar TRANSFERABLE_PROPERTIES = ['hasItemOption', '_nameList', '_idList', '_invertedIndicesMap', '_rawData', '_chunkSize', '_chunkCount', '_dimValueGetter', '_count', '_rawCount', '_nameDimIdx', '_idDimIdx'];\nvar CLONE_PROPERTIES = ['_extent', '_approximateExtent', '_rawExtent'];\n\nfunction transferProperties(target, source) {\n  zrUtil.each(TRANSFERABLE_PROPERTIES.concat(source.__wrappedMethods || []), function (propName) {\n    if (source.hasOwnProperty(propName)) {\n      target[propName] = source[propName];\n    }\n  });\n  target.__wrappedMethods = source.__wrappedMethods;\n  zrUtil.each(CLONE_PROPERTIES, function (propName) {\n    target[propName] = zrUtil.clone(source[propName]);\n  });\n  target._calculationInfo = zrUtil.extend(source._calculationInfo);\n}\n/**\n * @constructor\n * @alias module:echarts/data/List\n *\n * @param {Array.<string|Object|module:data/DataDimensionInfo>} dimensions\n *      For example, ['someDimName', {name: 'someDimName', type: 'someDimType'}, ...].\n *      Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n * @param {module:echarts/model/Model} hostModel\n */\n\n\nvar List = function (dimensions, hostModel) {\n  dimensions = dimensions || ['x', 'y'];\n  var dimensionInfos = {};\n  var dimensionNames = [];\n  var invertedIndicesMap = {};\n\n  for (var i = 0; i < dimensions.length; i++) {\n    // Use the original dimensions[i], where other flag props may exists.\n    var dimensionInfo = dimensions[i];\n\n    if (zrUtil.isString(dimensionInfo)) {\n      dimensionInfo = new DataDimensionInfo({\n        name: dimensionInfo\n      });\n    } else if (!(dimensionInfo instanceof DataDimensionInfo)) {\n      dimensionInfo = new DataDimensionInfo(dimensionInfo);\n    }\n\n    var dimensionName = dimensionInfo.name;\n    dimensionInfo.type = dimensionInfo.type || 'float';\n\n    if (!dimensionInfo.coordDim) {\n      dimensionInfo.coordDim = dimensionName;\n      dimensionInfo.coordDimIndex = 0;\n    }\n\n    dimensionInfo.otherDims = dimensionInfo.otherDims || {};\n    dimensionNames.push(dimensionName);\n    dimensionInfos[dimensionName] = dimensionInfo;\n    dimensionInfo.index = i;\n\n    if (dimensionInfo.createInvertedIndices) {\n      invertedIndicesMap[dimensionName] = [];\n    }\n  }\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n\n\n  this.dimensions = dimensionNames;\n  /**\n   * Infomation of each data dimension, like data type.\n   * @type {Object}\n   */\n\n  this._dimensionInfos = dimensionInfos;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.hostModel = hostModel;\n  /**\n   * @type {module:echarts/model/Model}\n   */\n\n  this.dataType;\n  /**\n   * Indices stores the indices of data subset after filtered.\n   * This data subset will be used in chart.\n   * @type {Array.<number>}\n   * @readOnly\n   */\n\n  this._indices = null;\n  this._count = 0;\n  this._rawCount = 0;\n  /**\n   * Data storage\n   * @type {Object.<key, Array.<TypedArray|Array>>}\n   * @private\n   */\n\n  this._storage = {};\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._nameList = [];\n  /**\n   * @type {Array.<string>}\n   */\n\n  this._idList = [];\n  /**\n   * Models of data option is stored sparse for optimizing memory cost\n   * @type {Array.<module:echarts/model/Model>}\n   * @private\n   */\n\n  this._optionModels = [];\n  /**\n   * Global visual properties after visual coding\n   * @type {Object}\n   * @private\n   */\n\n  this._visual = {};\n  /**\n   * Globel layout properties.\n   * @type {Object}\n   * @private\n   */\n\n  this._layout = {};\n  /**\n   * Item visual properties after visual coding\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemVisuals = [];\n  /**\n   * Key: visual type, Value: boolean\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.hasItemVisual = {};\n  /**\n   * Item layout properties after layout\n   * @type {Array.<Object>}\n   * @private\n   */\n\n  this._itemLayouts = [];\n  /**\n   * Graphic elemnents\n   * @type {Array.<module:zrender/Element>}\n   * @private\n   */\n\n  this._graphicEls = [];\n  /**\n   * Max size of each chunk.\n   * @type {number}\n   * @private\n   */\n\n  this._chunkSize = 1e5;\n  /**\n   * @type {number}\n   * @private\n   */\n\n  this._chunkCount = 0;\n  /**\n   * @type {Array.<Array|Object>}\n   * @private\n   */\n\n  this._rawData;\n  /**\n   * Raw extent will not be cloned, but only transfered.\n   * It will not be calculated util needed.\n   * key: dim,\n   * value: {end: number, extent: Array.<number>}\n   * @type {Object}\n   * @private\n   */\n\n  this._rawExtent = {};\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._extent = {};\n  /**\n   * key: dim\n   * value: extent\n   * @type {Object}\n   * @private\n   */\n\n  this._approximateExtent = {};\n  /**\n   * Cache summary info for fast visit. See \"dimensionHelper\".\n   * @type {Object}\n   * @private\n   */\n\n  this._dimensionsSummary = summarizeDimensions(this);\n  /**\n   * @type {Object.<Array|TypedArray>}\n   * @private\n   */\n\n  this._invertedIndicesMap = invertedIndicesMap;\n  /**\n   * @type {Object}\n   * @private\n   */\n\n  this._calculationInfo = {};\n  /**\n   * User output info of this data.\n   * DO NOT use it in other places!\n   *\n   * When preparing user params for user callbacks, we have\n   * to clone these inner data structures to prevent users\n   * from modifying them to effect built-in logic. And for\n   * performance consideration we make this `userOutput` to\n   * avoid clone them too many times.\n   *\n   * @type {Object}\n   * @readOnly\n   */\n\n  this.userOutput = this._dimensionsSummary.userOutput;\n};\n\nvar listProto = List.prototype;\nlistProto.type = 'list';\n/**\n * If each data item has it's own option\n * @type {boolean}\n */\n\nlistProto.hasItemOption = true;\n/**\n * The meanings of the input parameter `dim`:\n *\n * + If dim is a number (e.g., `1`), it means the index of the dimension.\n *   For example, `getDimension(0)` will return 'x' or 'lng' or 'radius'.\n * + If dim is a number-like string (e.g., `\"1\"`):\n *     + If there is the same concrete dim name defined in `this.dimensions`, it means that concrete name.\n *     + If not, it will be converted to a number, which means the index of the dimension.\n *        (why? because of the backward compatbility. We have been tolerating number-like string in\n *        dimension setting, although now it seems that it is not a good idea.)\n *     For example, `visualMap[i].dimension: \"1\"` is the same meaning as `visualMap[i].dimension: 1`,\n *     if no dimension name is defined as `\"1\"`.\n * + If dim is a not-number-like string, it means the concrete dim name.\n *   For example, it can be be default name `\"x\"`, `\"y\"`, `\"z\"`, `\"lng\"`, `\"lat\"`, `\"angle\"`, `\"radius\"`,\n *   or customized in `dimensions` property of option like `\"age\"`.\n *\n * Get dimension name\n * @param {string|number} dim See above.\n * @return {string} Concrete dim name.\n */\n\nlistProto.getDimension = function (dim) {\n  if (typeof dim === 'number' // If being a number-like string but not being defined a dimension name.\n  || !isNaN(dim) && !this._dimensionInfos.hasOwnProperty(dim)) {\n    dim = this.dimensions[dim];\n  }\n\n  return dim;\n};\n/**\n * Get type and calculation info of particular dimension\n * @param {string|number} dim\n *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n */\n\n\nlistProto.getDimensionInfo = function (dim) {\n  // Do not clone, because there may be categories in dimInfo.\n  return this._dimensionInfos[this.getDimension(dim)];\n};\n/**\n * @return {Array.<string>} concrete dimension name list on coord.\n */\n\n\nlistProto.getDimensionsOnCoord = function () {\n  return this._dimensionsSummary.dataDimsOnCoord.slice();\n};\n/**\n * @param {string} coordDim\n * @param {number} [idx] A coordDim may map to more than one data dim.\n *        If idx is `true`, return a array of all mapped dims.\n *        If idx is not specified, return the first dim not extra.\n * @return {string|Array.<string>} concrete data dim.\n *        If idx is number, and not found, return null/undefined.\n *        If idx is `true`, and not found, return empty array (always return array).\n */\n\n\nlistProto.mapDimension = function (coordDim, idx) {\n  var dimensionsSummary = this._dimensionsSummary;\n\n  if (idx == null) {\n    return dimensionsSummary.encodeFirstDimNotExtra[coordDim];\n  }\n\n  var dims = dimensionsSummary.encode[coordDim];\n  return idx === true // always return array if idx is `true`\n  ? (dims || []).slice() : dims && dims[idx];\n};\n/**\n * Initialize from data\n * @param {Array.<Object|number|Array>} data source or data or data provider.\n * @param {Array.<string>} [nameLIst] The name of a datum is used on data diff and\n *        defualt label/tooltip.\n *        A name can be specified in encode.itemName,\n *        or dataItem.name (only for series option data),\n *        or provided in nameList from outside.\n * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n */\n\n\nlistProto.initData = function (data, nameList, dimValueGetter) {\n  var notProvider = Source.isInstance(data) || zrUtil.isArrayLike(data);\n\n  if (notProvider) {\n    data = new DefaultDataProvider(data, this.dimensions.length);\n  }\n\n  this._rawData = data; // Clear\n\n  this._storage = {};\n  this._indices = null;\n  this._nameList = nameList || [];\n  this._idList = [];\n  this._nameRepeatCount = {};\n\n  if (!dimValueGetter) {\n    this.hasItemOption = false;\n  }\n  /**\n   * @readOnly\n   */\n\n\n  this.defaultDimValueGetter = defaultDimValueGetters[this._rawData.getSource().sourceFormat]; // Default dim value getter\n\n  this._dimValueGetter = dimValueGetter = dimValueGetter || this.defaultDimValueGetter;\n  this._dimValueGetterArrayRows = defaultDimValueGetters.arrayRows; // Reset raw extent.\n\n  this._rawExtent = {};\n\n  this._initDataFromProvider(0, data.count()); // If data has no item option.\n\n\n  if (data.pure) {\n    this.hasItemOption = false;\n  }\n};\n\nlistProto.getProvider = function () {\n  return this._rawData;\n};\n/**\n * Caution: Can be only called on raw data (before `this._indices` created).\n */\n\n\nlistProto.appendData = function (data) {\n  var rawData = this._rawData;\n  var start = this.count();\n  rawData.appendData(data);\n  var end = rawData.count();\n\n  if (!rawData.persistent) {\n    end += start;\n  }\n\n  this._initDataFromProvider(start, end);\n};\n/**\n * Caution: Can be only called on raw data (before `this._indices` created).\n * This method does not modify `rawData` (`dataProvider`), but only\n * add values to storage.\n *\n * The final count will be increased by `Math.max(values.length, names.length)`.\n *\n * @param {Array.<Array.<*>>} values That is the SourceType: 'arrayRows', like\n *        [\n *            [12, 33, 44],\n *            [NaN, 43, 1],\n *            ['-', 'asdf', 0]\n *        ]\n *        Each item is exaclty cooresponding to a dimension.\n * @param {Array.<string>} [names]\n */\n\n\nlistProto.appendValues = function (values, names) {\n  var chunkSize = this._chunkSize;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var rawExtent = this._rawExtent;\n  var start = this.count();\n  var end = start + Math.max(values.length, names ? names.length : 0);\n  var originalChunkCount = this._chunkCount;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    prepareChunks(storage, this._dimensionInfos[dim], chunkSize, originalChunkCount, end);\n    this._chunkCount = storage[dim].length;\n  }\n\n  var emptyDataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    var sourceIdx = idx - start;\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n\n      var val = this._dimValueGetterArrayRows(values[sourceIdx] || emptyDataItem, dim, sourceIdx, k);\n\n      storage[dim][chunkIndex][chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\n    }\n\n    if (names) {\n      this._nameList[idx] = names[sourceIdx];\n    }\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nlistProto._initDataFromProvider = function (start, end) {\n  // Optimize.\n  if (start >= end) {\n    return;\n  }\n\n  var chunkSize = this._chunkSize;\n  var rawData = this._rawData;\n  var storage = this._storage;\n  var dimensions = this.dimensions;\n  var dimLen = dimensions.length;\n  var dimensionInfoMap = this._dimensionInfos;\n  var nameList = this._nameList;\n  var idList = this._idList;\n  var rawExtent = this._rawExtent;\n  var nameRepeatCount = this._nameRepeatCount = {};\n  var nameDimIdx;\n  var originalChunkCount = this._chunkCount;\n\n  for (var i = 0; i < dimLen; i++) {\n    var dim = dimensions[i];\n\n    if (!rawExtent[dim]) {\n      rawExtent[dim] = getInitialExtent();\n    }\n\n    var dimInfo = dimensionInfoMap[dim];\n\n    if (dimInfo.otherDims.itemName === 0) {\n      nameDimIdx = this._nameDimIdx = i;\n    }\n\n    if (dimInfo.otherDims.itemId === 0) {\n      this._idDimIdx = i;\n    }\n\n    if (!storage[dim]) {\n      storage[dim] = [];\n    }\n\n    prepareChunks(storage, dimInfo, chunkSize, originalChunkCount, end);\n    this._chunkCount = storage[dim].length;\n  }\n\n  var dataItem = new Array(dimLen);\n\n  for (var idx = start; idx < end; idx++) {\n    // NOTICE: Try not to write things into dataItem\n    dataItem = rawData.getItem(idx, dataItem); // Each data item is value\n    // [1, 2]\n    // 2\n    // Bar chart, line chart which uses category axis\n    // only gives the 'y' value. 'x' value is the indices of category\n    // Use a tempValue to normalize the value to be a (x, y) value\n\n    var chunkIndex = Math.floor(idx / chunkSize);\n    var chunkOffset = idx % chunkSize; // Store the data by dimensions\n\n    for (var k = 0; k < dimLen; k++) {\n      var dim = dimensions[k];\n      var dimStorage = storage[dim][chunkIndex]; // PENDING NULL is empty or zero\n\n      var val = this._dimValueGetter(dataItem, dim, idx, k);\n\n      dimStorage[chunkOffset] = val;\n      var dimRawExtent = rawExtent[dim];\n      val < dimRawExtent[0] && (dimRawExtent[0] = val);\n      val > dimRawExtent[1] && (dimRawExtent[1] = val);\n    } // ??? FIXME not check by pure but sourceFormat?\n    // TODO refactor these logic.\n\n\n    if (!rawData.pure) {\n      var name = nameList[idx];\n\n      if (dataItem && name == null) {\n        // If dataItem is {name: ...}, it has highest priority.\n        // That is appropriate for many common cases.\n        if (dataItem.name != null) {\n          // There is no other place to persistent dataItem.name,\n          // so save it to nameList.\n          nameList[idx] = name = dataItem.name;\n        } else if (nameDimIdx != null) {\n          var nameDim = dimensions[nameDimIdx];\n          var nameDimChunk = storage[nameDim][chunkIndex];\n\n          if (nameDimChunk) {\n            name = nameDimChunk[chunkOffset];\n            var ordinalMeta = dimensionInfoMap[nameDim].ordinalMeta;\n\n            if (ordinalMeta && ordinalMeta.categories.length) {\n              name = ordinalMeta.categories[name];\n            }\n          }\n        }\n      } // Try using the id in option\n      // id or name is used on dynamical data, mapping old and new items.\n\n\n      var id = dataItem == null ? null : dataItem.id;\n\n      if (id == null && name != null) {\n        // Use name as id and add counter to avoid same name\n        nameRepeatCount[name] = nameRepeatCount[name] || 0;\n        id = name;\n\n        if (nameRepeatCount[name] > 0) {\n          id += '__ec__' + nameRepeatCount[name];\n        }\n\n        nameRepeatCount[name]++;\n      }\n\n      id != null && (idList[idx] = id);\n    }\n  }\n\n  if (!rawData.persistent && rawData.clean) {\n    // Clean unused data if data source is typed array.\n    rawData.clean();\n  }\n\n  this._rawCount = this._count = end; // Reset data extent\n\n  this._extent = {};\n  prepareInvertedIndex(this);\n};\n\nfunction prepareChunks(storage, dimInfo, chunkSize, chunkCount, end) {\n  var DataCtor = dataCtors[dimInfo.type];\n  var lastChunkIndex = chunkCount - 1;\n  var dim = dimInfo.name;\n  var resizeChunkArray = storage[dim][lastChunkIndex];\n\n  if (resizeChunkArray && resizeChunkArray.length < chunkSize) {\n    var newStore = new DataCtor(Math.min(end - lastChunkIndex * chunkSize, chunkSize)); // The cost of the copy is probably inconsiderable\n    // within the initial chunkSize.\n\n    for (var j = 0; j < resizeChunkArray.length; j++) {\n      newStore[j] = resizeChunkArray[j];\n    }\n\n    storage[dim][lastChunkIndex] = newStore;\n  } // Create new chunks.\n\n\n  for (var k = chunkCount * chunkSize; k < end; k += chunkSize) {\n    storage[dim].push(new DataCtor(Math.min(end - k, chunkSize)));\n  }\n}\n\nfunction prepareInvertedIndex(list) {\n  var invertedIndicesMap = list._invertedIndicesMap;\n  zrUtil.each(invertedIndicesMap, function (invertedIndices, dim) {\n    var dimInfo = list._dimensionInfos[dim]; // Currently, only dimensions that has ordinalMeta can create inverted indices.\n\n    var ordinalMeta = dimInfo.ordinalMeta;\n\n    if (ordinalMeta) {\n      invertedIndices = invertedIndicesMap[dim] = new CtorInt32Array(ordinalMeta.categories.length); // The default value of TypedArray is 0. To avoid miss\n      // mapping to 0, we should set it as INDEX_NOT_FOUND.\n\n      for (var i = 0; i < invertedIndices.length; i++) {\n        invertedIndices[i] = INDEX_NOT_FOUND;\n      }\n\n      for (var i = 0; i < list._count; i++) {\n        // Only support the case that all values are distinct.\n        invertedIndices[list.get(dim, i)] = i;\n      }\n    }\n  });\n}\n\nfunction getRawValueFromStore(list, dimIndex, rawIndex) {\n  var val;\n\n  if (dimIndex != null) {\n    var chunkSize = list._chunkSize;\n    var chunkIndex = Math.floor(rawIndex / chunkSize);\n    var chunkOffset = rawIndex % chunkSize;\n    var dim = list.dimensions[dimIndex];\n    var chunk = list._storage[dim][chunkIndex];\n\n    if (chunk) {\n      val = chunk[chunkOffset];\n      var ordinalMeta = list._dimensionInfos[dim].ordinalMeta;\n\n      if (ordinalMeta && ordinalMeta.categories.length) {\n        val = ordinalMeta.categories[val];\n      }\n    }\n  }\n\n  return val;\n}\n/**\n * @return {number}\n */\n\n\nlistProto.count = function () {\n  return this._count;\n};\n\nlistProto.getIndices = function () {\n  var newIndices;\n  var indices = this._indices;\n\n  if (indices) {\n    var Ctor = indices.constructor;\n    var thisCount = this._count; // `new Array(a, b, c)` is different from `new Uint32Array(a, b, c)`.\n\n    if (Ctor === Array) {\n      newIndices = new Ctor(thisCount);\n\n      for (var i = 0; i < thisCount; i++) {\n        newIndices[i] = indices[i];\n      }\n    } else {\n      newIndices = new Ctor(indices.buffer, 0, thisCount);\n    }\n  } else {\n    var Ctor = getIndicesCtor(this);\n    var newIndices = new Ctor(this.count());\n\n    for (var i = 0; i < newIndices.length; i++) {\n      newIndices[i] = i;\n    }\n  }\n\n  return newIndices;\n};\n/**\n * Get value. Return NaN if idx is out of range.\n * @param {string} dim Dim must be concrete name.\n * @param {number} idx\n * @param {boolean} stack\n * @return {number}\n */\n\n\nlistProto.get = function (dim, idx\n/*, stack */\n) {\n  if (!(idx >= 0 && idx < this._count)) {\n    return NaN;\n  }\n\n  var storage = this._storage;\n\n  if (!storage[dim]) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  idx = this.getRawIndex(idx);\n  var chunkIndex = Math.floor(idx / this._chunkSize);\n  var chunkOffset = idx % this._chunkSize;\n  var chunkStore = storage[dim][chunkIndex];\n  var value = chunkStore[chunkOffset]; // FIXME ordinal data type is not stackable\n  // if (stack) {\n  //     var dimensionInfo = this._dimensionInfos[dim];\n  //     if (dimensionInfo && dimensionInfo.stackable) {\n  //         var stackedOn = this.stackedOn;\n  //         while (stackedOn) {\n  //             // Get no stacked data of stacked on\n  //             var stackedValue = stackedOn.get(dim, idx);\n  //             // Considering positive stack, negative stack and empty data\n  //             if ((value >= 0 && stackedValue > 0)  // Positive stack\n  //                 || (value <= 0 && stackedValue < 0) // Negative stack\n  //             ) {\n  //                 value += stackedValue;\n  //             }\n  //             stackedOn = stackedOn.stackedOn;\n  //         }\n  //     }\n  // }\n\n  return value;\n};\n/**\n * @param {string} dim concrete dim\n * @param {number} rawIndex\n * @return {number|string}\n */\n\n\nlistProto.getByRawIndex = function (dim, rawIdx) {\n  if (!(rawIdx >= 0 && rawIdx < this._rawCount)) {\n    return NaN;\n  }\n\n  var dimStore = this._storage[dim];\n\n  if (!dimStore) {\n    // TODO Warn ?\n    return NaN;\n  }\n\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = dimStore[chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * FIXME Use `get` on chrome maybe slow(in filterSelf and selectRange).\n * Hack a much simpler _getFast\n * @private\n */\n\n\nlistProto._getFast = function (dim, rawIdx) {\n  var chunkIndex = Math.floor(rawIdx / this._chunkSize);\n  var chunkOffset = rawIdx % this._chunkSize;\n  var chunkStore = this._storage[dim][chunkIndex];\n  return chunkStore[chunkOffset];\n};\n/**\n * Get value for multi dimensions.\n * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getValues = function (dimensions, idx\n/*, stack */\n) {\n  var values = [];\n\n  if (!zrUtil.isArray(dimensions)) {\n    // stack = idx;\n    idx = dimensions;\n    dimensions = this.dimensions;\n  }\n\n  for (var i = 0, len = dimensions.length; i < len; i++) {\n    values.push(this.get(dimensions[i], idx\n    /*, stack */\n    ));\n  }\n\n  return values;\n};\n/**\n * If value is NaN. Inlcuding '-'\n * Only check the coord dimensions.\n * @param {string} dim\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.hasValue = function (idx) {\n  var dataDimsOnCoord = this._dimensionsSummary.dataDimsOnCoord;\n\n  for (var i = 0, len = dataDimsOnCoord.length; i < len; i++) {\n    // Ordinal type originally can be string or number.\n    // But when an ordinal type is used on coord, it can\n    // not be string but only number. So we can also use isNaN.\n    if (isNaN(this.get(dataDimsOnCoord[i], idx))) {\n      return false;\n    }\n  }\n\n  return true;\n};\n/**\n * Get extent of data in one dimension\n * @param {string} dim\n * @param {boolean} stack\n */\n\n\nlistProto.getDataExtent = function (dim\n/*, stack */\n) {\n  // Make sure use concrete dim as cache name.\n  dim = this.getDimension(dim);\n  var dimData = this._storage[dim];\n  var initialExtent = getInitialExtent(); // stack = !!((stack || false) && this.getCalculationInfo(dim));\n\n  if (!dimData) {\n    return initialExtent;\n  } // Make more strict checkings to ensure hitting cache.\n\n\n  var currEnd = this.count(); // var cacheName = [dim, !!stack].join('_');\n  // var cacheName = dim;\n  // Consider the most cases when using data zoom, `getDataExtent`\n  // happened before filtering. We cache raw extent, which is not\n  // necessary to be cleared and recalculated when restore data.\n\n  var useRaw = !this._indices; // && !stack;\n\n  var dimExtent;\n\n  if (useRaw) {\n    return this._rawExtent[dim].slice();\n  }\n\n  dimExtent = this._extent[dim];\n\n  if (dimExtent) {\n    return dimExtent.slice();\n  }\n\n  dimExtent = initialExtent;\n  var min = dimExtent[0];\n  var max = dimExtent[1];\n\n  for (var i = 0; i < currEnd; i++) {\n    // var value = stack ? this.get(dim, i, true) : this._getFast(dim, this.getRawIndex(i));\n    var value = this._getFast(dim, this.getRawIndex(i));\n\n    value < min && (min = value);\n    value > max && (max = value);\n  }\n\n  dimExtent = [min, max];\n  this._extent[dim] = dimExtent;\n  return dimExtent;\n};\n/**\n * Optimize for the scenario that data is filtered by a given extent.\n * Consider that if data amount is more than hundreds of thousand,\n * extent calculation will cost more than 10ms and the cache will\n * be erased because of the filtering.\n */\n\n\nlistProto.getApproximateExtent = function (dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  return this._approximateExtent[dim] || this.getDataExtent(dim\n  /*, stack */\n  );\n};\n\nlistProto.setApproximateExtent = function (extent, dim\n/*, stack */\n) {\n  dim = this.getDimension(dim);\n  this._approximateExtent[dim] = extent.slice();\n};\n/**\n * @param {string} key\n * @return {*}\n */\n\n\nlistProto.getCalculationInfo = function (key) {\n  return this._calculationInfo[key];\n};\n/**\n * @param {string|Object} key or k-v object\n * @param {*} [value]\n */\n\n\nlistProto.setCalculationInfo = function (key, value) {\n  isObject(key) ? zrUtil.extend(this._calculationInfo, key) : this._calculationInfo[key] = value;\n};\n/**\n * Get sum of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getSum = function (dim\n/*, stack */\n) {\n  var dimData = this._storage[dim];\n  var sum = 0;\n\n  if (dimData) {\n    for (var i = 0, len = this.count(); i < len; i++) {\n      var value = this.get(dim, i\n      /*, stack */\n      );\n\n      if (!isNaN(value)) {\n        sum += value;\n      }\n    }\n  }\n\n  return sum;\n};\n/**\n * Get median of data in one dimension\n * @param {string} dim\n */\n\n\nlistProto.getMedian = function (dim\n/*, stack */\n) {\n  var dimDataArray = []; // map all data of one dimension\n\n  this.each(dim, function (val, idx) {\n    if (!isNaN(val)) {\n      dimDataArray.push(val);\n    }\n  }); // TODO\n  // Use quick select?\n  // immutability & sort\n\n  var sortedDimDataArray = [].concat(dimDataArray).sort(function (a, b) {\n    return a - b;\n  });\n  var len = this.count(); // calculate median\n\n  return len === 0 ? 0 : len % 2 === 1 ? sortedDimDataArray[(len - 1) / 2] : (sortedDimDataArray[len / 2] + sortedDimDataArray[len / 2 - 1]) / 2;\n}; // /**\n//  * Retreive the index with given value\n//  * @param {string} dim Concrete dimension.\n//  * @param {number} value\n//  * @return {number}\n//  */\n// Currently incorrect: should return dataIndex but not rawIndex.\n// Do not fix it until this method is to be used somewhere.\n// FIXME Precision of float value\n// listProto.indexOf = function (dim, value) {\n//     var storage = this._storage;\n//     var dimData = storage[dim];\n//     var chunkSize = this._chunkSize;\n//     if (dimData) {\n//         for (var i = 0, len = this.count(); i < len; i++) {\n//             var chunkIndex = Math.floor(i / chunkSize);\n//             var chunkOffset = i % chunkSize;\n//             if (dimData[chunkIndex][chunkOffset] === value) {\n//                 return i;\n//             }\n//         }\n//     }\n//     return -1;\n// };\n\n/**\n * Only support the dimension which inverted index created.\n * Do not support other cases until required.\n * @param {string} concrete dim\n * @param {number|string} value\n * @return {number} rawIndex\n */\n\n\nlistProto.rawIndexOf = function (dim, value) {\n  var invertedIndices = dim && this._invertedIndicesMap[dim];\n  var rawIndex = invertedIndices[value];\n\n  if (rawIndex == null || isNaN(rawIndex)) {\n    return INDEX_NOT_FOUND;\n  }\n\n  return rawIndex;\n};\n/**\n * Retreive the index with given name\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfName = function (name) {\n  for (var i = 0, len = this.count(); i < len; i++) {\n    if (this.getName(i) === name) {\n      return i;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index with given raw data index\n * @param {number} idx\n * @param {number} name\n * @return {number}\n */\n\n\nlistProto.indexOfRawIndex = function (rawIndex) {\n  if (rawIndex >= this._rawCount || rawIndex < 0) {\n    return -1;\n  }\n\n  if (!this._indices) {\n    return rawIndex;\n  } // Indices are ascending\n\n\n  var indices = this._indices; // If rawIndex === dataIndex\n\n  var rawDataIndex = indices[rawIndex];\n\n  if (rawDataIndex != null && rawDataIndex < this._count && rawDataIndex === rawIndex) {\n    return rawIndex;\n  }\n\n  var left = 0;\n  var right = this._count - 1;\n\n  while (left <= right) {\n    var mid = (left + right) / 2 | 0;\n\n    if (indices[mid] < rawIndex) {\n      left = mid + 1;\n    } else if (indices[mid] > rawIndex) {\n      right = mid - 1;\n    } else {\n      return mid;\n    }\n  }\n\n  return -1;\n};\n/**\n * Retreive the index of nearest value\n * @param {string} dim\n * @param {number} value\n * @param {number} [maxDistance=Infinity]\n * @return {Array.<number>} If and only if multiple indices has\n *        the same value, they are put to the result.\n */\n\n\nlistProto.indicesOfNearest = function (dim, value, maxDistance) {\n  var storage = this._storage;\n  var dimData = storage[dim];\n  var nearestIndices = [];\n\n  if (!dimData) {\n    return nearestIndices;\n  }\n\n  if (maxDistance == null) {\n    maxDistance = Infinity;\n  }\n\n  var minDist = Infinity;\n  var minDiff = -1;\n  var nearestIndicesLen = 0; // Check the test case of `test/ut/spec/data/List.js`.\n\n  for (var i = 0, len = this.count(); i < len; i++) {\n    var diff = value - this.get(dim, i);\n    var dist = Math.abs(diff);\n\n    if (dist <= maxDistance) {\n      // When the `value` is at the middle of `this.get(dim, i)` and `this.get(dim, i+1)`,\n      // we'd better not push both of them to `nearestIndices`, otherwise it is easy to\n      // get more than one item in `nearestIndices` (more specifically, in `tooltip`).\n      // So we chose the one that `diff >= 0` in this csae.\n      // But if `this.get(dim, i)` and `this.get(dim, j)` get the same value, both of them\n      // should be push to `nearestIndices`.\n      if (dist < minDist || dist === minDist && diff >= 0 && minDiff < 0) {\n        minDist = dist;\n        minDiff = diff;\n        nearestIndicesLen = 0;\n      }\n\n      if (diff === minDiff) {\n        nearestIndices[nearestIndicesLen++] = i;\n      }\n    }\n  }\n\n  nearestIndices.length = nearestIndicesLen;\n  return nearestIndices;\n};\n/**\n * Get raw data index\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawIndex = getRawIndexWithoutIndices;\n\nfunction getRawIndexWithoutIndices(idx) {\n  return idx;\n}\n\nfunction getRawIndexWithIndices(idx) {\n  if (idx < this._count && idx >= 0) {\n    return this._indices[idx];\n  }\n\n  return -1;\n}\n/**\n * Get raw data item\n * @param {number} idx\n * @return {number}\n */\n\n\nlistProto.getRawDataItem = function (idx) {\n  if (!this._rawData.persistent) {\n    var val = [];\n\n    for (var i = 0; i < this.dimensions.length; i++) {\n      var dim = this.dimensions[i];\n      val.push(this.get(dim, idx));\n    }\n\n    return val;\n  } else {\n    return this._rawData.getItem(this.getRawIndex(idx));\n  }\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getName = function (idx) {\n  var rawIndex = this.getRawIndex(idx);\n  return this._nameList[rawIndex] || getRawValueFromStore(this, this._nameDimIdx, rawIndex) || '';\n};\n/**\n * @param {number} idx\n * @param {boolean} [notDefaultIdx=false]\n * @return {string}\n */\n\n\nlistProto.getId = function (idx) {\n  return getId(this, this.getRawIndex(idx));\n};\n\nfunction getId(list, rawIndex) {\n  var id = list._idList[rawIndex];\n\n  if (id == null) {\n    id = getRawValueFromStore(list, list._idDimIdx, rawIndex);\n  }\n\n  if (id == null) {\n    // FIXME Check the usage in graph, should not use prefix.\n    id = ID_PREFIX + rawIndex;\n  }\n\n  return id;\n}\n\nfunction normalizeDimensions(dimensions) {\n  if (!zrUtil.isArray(dimensions)) {\n    dimensions = [dimensions];\n  }\n\n  return dimensions;\n}\n\nfunction validateDimensions(list, dims) {\n  for (var i = 0; i < dims.length; i++) {\n    // stroage may be empty when no data, so use\n    // dimensionInfos to check.\n    if (!list._dimensionInfos[dims[i]]) {\n      console.error('Unkown dimension ' + dims[i]);\n    }\n  }\n}\n/**\n * Data iteration\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n *\n * @example\n *  list.each('x', function (x, idx) {});\n *  list.each(['x', 'y'], function (x, y, idx) {});\n *  list.each(function (idx) {})\n */\n\n\nlistProto.each = function (dims, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dims === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dims;\n    dims = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n  var dimSize = dims.length;\n\n  for (var i = 0; i < this.count(); i++) {\n    // Simple optimization\n    switch (dimSize) {\n      case 0:\n        cb.call(context, i);\n        break;\n\n      case 1:\n        cb.call(context, this.get(dims[0], i), i);\n        break;\n\n      case 2:\n        cb.call(context, this.get(dims[0], i), this.get(dims[1], i), i);\n        break;\n\n      default:\n        var k = 0;\n        var value = [];\n\n        for (; k < dimSize; k++) {\n          value[k] = this.get(dims[k], i);\n        } // Index\n\n\n        value[k] = i;\n        cb.apply(context, value);\n    }\n  }\n};\n/**\n * Data filter\n * @param {string|Array.<string>}\n * @param {Function} cb\n * @param {*} [context=this]\n */\n\n\nlistProto.filterSelf = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var count = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(count);\n  var value = [];\n  var dimSize = dimensions.length;\n  var offset = 0;\n  var dim0 = dimensions[0];\n\n  for (var i = 0; i < count; i++) {\n    var keep;\n    var rawIdx = this.getRawIndex(i); // Simple optimization\n\n    if (dimSize === 0) {\n      keep = cb.call(context, i);\n    } else if (dimSize === 1) {\n      var val = this._getFast(dim0, rawIdx);\n\n      keep = cb.call(context, val, i);\n    } else {\n      for (var k = 0; k < dimSize; k++) {\n        value[k] = this._getFast(dim0, rawIdx);\n      }\n\n      value[k] = i;\n      keep = cb.apply(context, value);\n    }\n\n    if (keep) {\n      newIndices[offset++] = rawIdx;\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < count) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Select data in range. (For optimization of filter)\n * (Manually inline code, support 5 million data filtering in data zoom.)\n */\n\n\nlistProto.selectRange = function (range) {\n  'use strict';\n\n  if (!this._count) {\n    return;\n  }\n\n  var dimensions = [];\n\n  for (var dim in range) {\n    if (range.hasOwnProperty(dim)) {\n      dimensions.push(dim);\n    }\n  }\n\n  var dimSize = dimensions.length;\n\n  if (!dimSize) {\n    return;\n  }\n\n  var originalCount = this.count();\n  var Ctor = getIndicesCtor(this);\n  var newIndices = new Ctor(originalCount);\n  var offset = 0;\n  var dim0 = dimensions[0];\n  var min = range[dim0][0];\n  var max = range[dim0][1];\n  var quickFinished = false;\n\n  if (!this._indices) {\n    // Extreme optimization for common case. About 2x faster in chrome.\n    var idx = 0;\n\n    if (dimSize === 1) {\n      var dimStorage = this._storage[dimensions[0]];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i]; // NaN will not be filtered. Consider the case, in line chart, empty\n          // value indicates the line should be broken. But for the case like\n          // scatter plot, a data item with empty value will not be rendered,\n          // but the axis extent may be effected if some other dim of the data\n          // item has value. Fortunately it is not a significant negative effect.\n\n          if (val >= min && val <= max || isNaN(val)) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    } else if (dimSize === 2) {\n      var dimStorage = this._storage[dim0];\n      var dimStorage2 = this._storage[dimensions[1]];\n      var min2 = range[dimensions[1]][0];\n      var max2 = range[dimensions[1]][1];\n\n      for (var k = 0; k < this._chunkCount; k++) {\n        var chunkStorage = dimStorage[k];\n        var chunkStorage2 = dimStorage2[k];\n        var len = Math.min(this._count - k * this._chunkSize, this._chunkSize);\n\n        for (var i = 0; i < len; i++) {\n          var val = chunkStorage[i];\n          var val2 = chunkStorage2[i]; // Do not filter NaN, see comment above.\n\n          if ((val >= min && val <= max || isNaN(val)) && (val2 >= min2 && val2 <= max2 || isNaN(val2))) {\n            newIndices[offset++] = idx;\n          }\n\n          idx++;\n        }\n      }\n\n      quickFinished = true;\n    }\n  }\n\n  if (!quickFinished) {\n    if (dimSize === 1) {\n      for (var i = 0; i < originalCount; i++) {\n        var rawIndex = this.getRawIndex(i);\n\n        var val = this._getFast(dim0, rawIndex); // Do not filter NaN, see comment above.\n\n\n        if (val >= min && val <= max || isNaN(val)) {\n          newIndices[offset++] = rawIndex;\n        }\n      }\n    } else {\n      for (var i = 0; i < originalCount; i++) {\n        var keep = true;\n        var rawIndex = this.getRawIndex(i);\n\n        for (var k = 0; k < dimSize; k++) {\n          var dimk = dimensions[k];\n\n          var val = this._getFast(dim, rawIndex); // Do not filter NaN, see comment above.\n\n\n          if (val < range[dimk][0] || val > range[dimk][1]) {\n            keep = false;\n          }\n        }\n\n        if (keep) {\n          newIndices[offset++] = this.getRawIndex(i);\n        }\n      }\n    }\n  } // Set indices after filtered.\n\n\n  if (offset < originalCount) {\n    this._indices = newIndices;\n  }\n\n  this._count = offset; // Reset data extent\n\n  this._extent = {};\n  this.getRawIndex = this._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return this;\n};\n/**\n * Data mapping to a plain array\n * @param {string|Array.<string>} [dimensions]\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.mapArray = function (dimensions, cb, context, contextCompat) {\n  'use strict';\n\n  if (typeof dimensions === 'function') {\n    contextCompat = context;\n    context = cb;\n    cb = dimensions;\n    dimensions = [];\n  } // contextCompat just for compat echarts3\n\n\n  context = context || contextCompat || this;\n  var result = [];\n  this.each(dimensions, function () {\n    result.push(cb && cb.apply(this, arguments));\n  }, context);\n  return result;\n}; // Data in excludeDimensions is copied, otherwise transfered.\n\n\nfunction cloneListForMapAndSample(original, excludeDimensions) {\n  var allDimensions = original.dimensions;\n  var list = new List(zrUtil.map(allDimensions, original.getDimensionInfo, original), original.hostModel); // FIXME If needs stackedOn, value may already been stacked\n\n  transferProperties(list, original);\n  var storage = list._storage = {};\n  var originalStorage = original._storage; // Init storage\n\n  for (var i = 0; i < allDimensions.length; i++) {\n    var dim = allDimensions[i];\n\n    if (originalStorage[dim]) {\n      // Notice that we do not reset invertedIndicesMap here, becuase\n      // there is no scenario of mapping or sampling ordinal dimension.\n      if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n        storage[dim] = cloneDimStore(originalStorage[dim]);\n        list._rawExtent[dim] = getInitialExtent();\n        list._extent[dim] = null;\n      } else {\n        // Direct reference for other dimensions\n        storage[dim] = originalStorage[dim];\n      }\n    }\n  }\n\n  return list;\n}\n\nfunction cloneDimStore(originalDimStore) {\n  var newDimStore = new Array(originalDimStore.length);\n\n  for (var j = 0; j < originalDimStore.length; j++) {\n    newDimStore[j] = cloneChunk(originalDimStore[j]);\n  }\n\n  return newDimStore;\n}\n\nfunction getInitialExtent() {\n  return [Infinity, -Infinity];\n}\n/**\n * Data mapping to a new List with given dimensions\n * @param {string|Array.<string>} dimensions\n * @param {Function} cb\n * @param {*} [context=this]\n * @return {Array}\n */\n\n\nlistProto.map = function (dimensions, cb, context, contextCompat) {\n  'use strict'; // contextCompat just for compat echarts3\n\n  context = context || contextCompat || this;\n  dimensions = zrUtil.map(normalizeDimensions(dimensions), this.getDimension, this);\n  var list = cloneListForMapAndSample(this, dimensions); // Following properties are all immutable.\n  // So we can reference to the same value\n\n  list._indices = this._indices;\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  var storage = list._storage;\n  var tmpRetValue = [];\n  var chunkSize = this._chunkSize;\n  var dimSize = dimensions.length;\n  var dataCount = this.count();\n  var values = [];\n  var rawExtent = list._rawExtent;\n\n  for (var dataIndex = 0; dataIndex < dataCount; dataIndex++) {\n    for (var dimIndex = 0; dimIndex < dimSize; dimIndex++) {\n      values[dimIndex] = this.get(dimensions[dimIndex], dataIndex\n      /*, stack */\n      );\n    }\n\n    values[dimSize] = dataIndex;\n    var retValue = cb && cb.apply(context, values);\n\n    if (retValue != null) {\n      // a number or string (in oridinal dimension)?\n      if (typeof retValue !== 'object') {\n        tmpRetValue[0] = retValue;\n        retValue = tmpRetValue;\n      }\n\n      var rawIndex = this.getRawIndex(dataIndex);\n      var chunkIndex = Math.floor(rawIndex / chunkSize);\n      var chunkOffset = rawIndex % chunkSize;\n\n      for (var i = 0; i < retValue.length; i++) {\n        var dim = dimensions[i];\n        var val = retValue[i];\n        var rawExtentOnDim = rawExtent[dim];\n        var dimStore = storage[dim];\n\n        if (dimStore) {\n          dimStore[chunkIndex][chunkOffset] = val;\n        }\n\n        if (val < rawExtentOnDim[0]) {\n          rawExtentOnDim[0] = val;\n        }\n\n        if (val > rawExtentOnDim[1]) {\n          rawExtentOnDim[1] = val;\n        }\n      }\n    }\n  }\n\n  return list;\n};\n/**\n * Large data down sampling on given dimension\n * @param {string} dimension\n * @param {number} rate\n * @param {Function} sampleValue\n * @param {Function} sampleIndex Sample index for name and id\n */\n\n\nlistProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n  var list = cloneListForMapAndSample(this, [dimension]);\n  var targetStorage = list._storage;\n  var frameValues = [];\n  var frameSize = Math.floor(1 / rate);\n  var dimStore = targetStorage[dimension];\n  var len = this.count();\n  var chunkSize = this._chunkSize;\n  var rawExtentOnDim = list._rawExtent[dimension];\n  var newIndices = new (getIndicesCtor(this))(len);\n  var offset = 0;\n\n  for (var i = 0; i < len; i += frameSize) {\n    // Last frame\n    if (frameSize > len - i) {\n      frameSize = len - i;\n      frameValues.length = frameSize;\n    }\n\n    for (var k = 0; k < frameSize; k++) {\n      var dataIdx = this.getRawIndex(i + k);\n      var originalChunkIndex = Math.floor(dataIdx / chunkSize);\n      var originalChunkOffset = dataIdx % chunkSize;\n      frameValues[k] = dimStore[originalChunkIndex][originalChunkOffset];\n    }\n\n    var value = sampleValue(frameValues);\n    var sampleFrameIdx = this.getRawIndex(Math.min(i + sampleIndex(frameValues, value) || 0, len - 1));\n    var sampleChunkIndex = Math.floor(sampleFrameIdx / chunkSize);\n    var sampleChunkOffset = sampleFrameIdx % chunkSize; // Only write value on the filtered data\n\n    dimStore[sampleChunkIndex][sampleChunkOffset] = value;\n\n    if (value < rawExtentOnDim[0]) {\n      rawExtentOnDim[0] = value;\n    }\n\n    if (value > rawExtentOnDim[1]) {\n      rawExtentOnDim[1] = value;\n    }\n\n    newIndices[offset++] = sampleFrameIdx;\n  }\n\n  list._count = offset;\n  list._indices = newIndices;\n  list.getRawIndex = getRawIndexWithIndices;\n  return list;\n};\n/**\n * Get model of one data item.\n *\n * @param {number} idx\n */\n// FIXME Model proxy ?\n\n\nlistProto.getItemModel = function (idx) {\n  var hostModel = this.hostModel;\n  return new Model(this.getRawDataItem(idx), hostModel, hostModel && hostModel.ecModel);\n};\n/**\n * Create a data differ\n * @param {module:echarts/data/List} otherList\n * @return {module:echarts/data/DataDiffer}\n */\n\n\nlistProto.diff = function (otherList) {\n  var thisList = this;\n  return new DataDiffer(otherList ? otherList.getIndices() : [], this.getIndices(), function (idx) {\n    return getId(otherList, idx);\n  }, function (idx) {\n    return getId(thisList, idx);\n  });\n};\n/**\n * Get visual property.\n * @param {string} key\n */\n\n\nlistProto.getVisual = function (key) {\n  var visual = this._visual;\n  return visual && visual[key];\n};\n/**\n * Set visual property\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setVisual('color', color);\n *  setVisual({\n *      'color': color\n *  });\n */\n\n\nlistProto.setVisual = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setVisual(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._visual = this._visual || {};\n  this._visual[key] = val;\n};\n/**\n * Set layout property.\n * @param {string|Object} key\n * @param {*} [val]\n */\n\n\nlistProto.setLayout = function (key, val) {\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        this.setLayout(name, key[name]);\n      }\n    }\n\n    return;\n  }\n\n  this._layout[key] = val;\n};\n/**\n * Get layout property.\n * @param  {string} key.\n * @return {*}\n */\n\n\nlistProto.getLayout = function (key) {\n  return this._layout[key];\n};\n/**\n * Get layout of single data item\n * @param {number} idx\n */\n\n\nlistProto.getItemLayout = function (idx) {\n  return this._itemLayouts[idx];\n};\n/**\n * Set layout of single data item\n * @param {number} idx\n * @param {Object} layout\n * @param {boolean=} [merge=false]\n */\n\n\nlistProto.setItemLayout = function (idx, layout, merge) {\n  this._itemLayouts[idx] = merge ? zrUtil.extend(this._itemLayouts[idx] || {}, layout) : layout;\n};\n/**\n * Clear all layout of single data item\n */\n\n\nlistProto.clearItemLayouts = function () {\n  this._itemLayouts.length = 0;\n};\n/**\n * Get visual property of single data item\n * @param {number} idx\n * @param {string} key\n * @param {boolean} [ignoreParent=false]\n */\n\n\nlistProto.getItemVisual = function (idx, key, ignoreParent) {\n  var itemVisual = this._itemVisuals[idx];\n  var val = itemVisual && itemVisual[key];\n\n  if (val == null && !ignoreParent) {\n    // Use global visual property\n    return this.getVisual(key);\n  }\n\n  return val;\n};\n/**\n * Set visual property of single data item\n *\n * @param {number} idx\n * @param {string|Object} key\n * @param {*} [value]\n *\n * @example\n *  setItemVisual(0, 'color', color);\n *  setItemVisual(0, {\n *      'color': color\n *  });\n */\n\n\nlistProto.setItemVisual = function (idx, key, value) {\n  var itemVisual = this._itemVisuals[idx] || {};\n  var hasItemVisual = this.hasItemVisual;\n  this._itemVisuals[idx] = itemVisual;\n\n  if (isObject(key)) {\n    for (var name in key) {\n      if (key.hasOwnProperty(name)) {\n        itemVisual[name] = key[name];\n        hasItemVisual[name] = true;\n      }\n    }\n\n    return;\n  }\n\n  itemVisual[key] = value;\n  hasItemVisual[key] = true;\n};\n/**\n * Clear itemVisuals and list visual.\n */\n\n\nlistProto.clearAllVisual = function () {\n  this._visual = {};\n  this._itemVisuals = [];\n  this.hasItemVisual = {};\n};\n\nvar setItemDataAndSeriesIndex = function (child) {\n  child.seriesIndex = this.seriesIndex;\n  child.dataIndex = this.dataIndex;\n  child.dataType = this.dataType;\n};\n/**\n * Set graphic element relative to data. It can be set as null\n * @param {number} idx\n * @param {module:zrender/Element} [el]\n */\n\n\nlistProto.setItemGraphicEl = function (idx, el) {\n  var hostModel = this.hostModel;\n\n  if (el) {\n    // Add data index and series index for indexing the data by element\n    // Useful in tooltip\n    el.dataIndex = idx;\n    el.dataType = this.dataType;\n    el.seriesIndex = hostModel && hostModel.seriesIndex;\n\n    if (el.type === 'group') {\n      el.traverse(setItemDataAndSeriesIndex, el);\n    }\n  }\n\n  this._graphicEls[idx] = el;\n};\n/**\n * @param {number} idx\n * @return {module:zrender/Element}\n */\n\n\nlistProto.getItemGraphicEl = function (idx) {\n  return this._graphicEls[idx];\n};\n/**\n * @param {Function} cb\n * @param {*} context\n */\n\n\nlistProto.eachItemGraphicEl = function (cb, context) {\n  zrUtil.each(this._graphicEls, function (el, idx) {\n    if (el) {\n      cb && cb.call(context, el, idx);\n    }\n  });\n};\n/**\n * Shallow clone a new list except visual and layout properties, and graph elements.\n * New list only change the indices.\n */\n\n\nlistProto.cloneShallow = function (list) {\n  if (!list) {\n    var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n    list = new List(dimensionInfoList, this.hostModel);\n  } // FIXME\n\n\n  list._storage = this._storage;\n  transferProperties(list, this); // Clone will not change the data extent and indices\n\n  if (this._indices) {\n    var Ctor = this._indices.constructor;\n    list._indices = new Ctor(this._indices);\n  } else {\n    list._indices = null;\n  }\n\n  list.getRawIndex = list._indices ? getRawIndexWithIndices : getRawIndexWithoutIndices;\n  return list;\n};\n/**\n * Wrap some method to add more feature\n * @param {string} methodName\n * @param {Function} injectFunction\n */\n\n\nlistProto.wrapMethod = function (methodName, injectFunction) {\n  var originalMethod = this[methodName];\n\n  if (typeof originalMethod !== 'function') {\n    return;\n  }\n\n  this.__wrappedMethods = this.__wrappedMethods || [];\n\n  this.__wrappedMethods.push(methodName);\n\n  this[methodName] = function () {\n    var res = originalMethod.apply(this, arguments);\n    return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n  };\n}; // Methods that create a new list based on this list should be listed here.\n// Notice that those method should `RETURN` the new list.\n\n\nlistProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map']; // Methods that change indices of this list should be listed here.\n\nlistProto.CHANGABLE_METHODS = ['filterSelf', 'selectRange'];\nvar _default = List;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar OrdinalScale = require(\"../scale/Ordinal\");\n\nvar IntervalScale = require(\"../scale/Interval\");\n\nvar Scale = require(\"../scale/Scale\");\n\nvar numberUtil = require(\"../util/number\");\n\nvar _barGrid = require(\"../layout/barGrid\");\n\nvar prepareLayoutBarSeries = _barGrid.prepareLayoutBarSeries;\nvar makeColumnLayout = _barGrid.makeColumnLayout;\nvar retrieveColumnLayout = _barGrid.retrieveColumnLayout;\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nrequire(\"../scale/Time\");\n\nrequire(\"../scale/Log\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Get axis scale extent before niced.\n * Item of returned array can only be number (including Infinity and NaN).\n */\nfunction getScaleExtent(scale, model) {\n  var scaleType = scale.type;\n  var min = model.getMin();\n  var max = model.getMax();\n  var originalExtent = scale.getExtent();\n  var axisDataLen;\n  var boundaryGap;\n  var span;\n\n  if (scaleType === 'ordinal') {\n    axisDataLen = model.getCategories().length;\n  } else {\n    boundaryGap = model.get('boundaryGap');\n\n    if (!zrUtil.isArray(boundaryGap)) {\n      boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n    }\n\n    if (typeof boundaryGap[0] === 'boolean') {\n      boundaryGap = [0, 0];\n    }\n\n    boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n    boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n    span = originalExtent[1] - originalExtent[0] || Math.abs(originalExtent[0]);\n  } // Notice: When min/max is not set (that is, when there are null/undefined,\n  // which is the most common case), these cases should be ensured:\n  // (1) For 'ordinal', show all axis.data.\n  // (2) For others:\n  //      + `boundaryGap` is applied (if min/max set, boundaryGap is\n  //      disabled).\n  //      + If `needCrossZero`, min/max should be zero, otherwise, min/max should\n  //      be the result that originalExtent enlarged by boundaryGap.\n  // (3) If no data, it should be ensured that `scale.setBlank` is set.\n  // FIXME\n  // (1) When min/max is 'dataMin' or 'dataMax', should boundaryGap be able to used?\n  // (2) When `needCrossZero` and all data is positive/negative, should it be ensured\n  // that the results processed by boundaryGap are positive/negative?\n\n\n  if (min === 'dataMin') {\n    min = originalExtent[0];\n  } else if (typeof min === 'function') {\n    min = min({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  if (max === 'dataMax') {\n    max = originalExtent[1];\n  } else if (typeof max === 'function') {\n    max = max({\n      min: originalExtent[0],\n      max: originalExtent[1]\n    });\n  }\n\n  var fixMin = min != null;\n  var fixMax = max != null;\n\n  if (min == null) {\n    min = scaleType === 'ordinal' ? axisDataLen ? 0 : NaN : originalExtent[0] - boundaryGap[0] * span;\n  }\n\n  if (max == null) {\n    max = scaleType === 'ordinal' ? axisDataLen ? axisDataLen - 1 : NaN : originalExtent[1] + boundaryGap[1] * span;\n  }\n\n  (min == null || !isFinite(min)) && (min = NaN);\n  (max == null || !isFinite(max)) && (max = NaN);\n  scale.setBlank(zrUtil.eqNaN(min) || zrUtil.eqNaN(max) || scaleType === 'ordinal' && !scale.getOrdinalMeta().categories.length); // Evaluate if axis needs cross zero\n\n  if (model.getNeedCrossZero()) {\n    // Axis is over zero and min is not set\n    if (min > 0 && max > 0 && !fixMin) {\n      min = 0;\n    } // Axis is under zero and max is not set\n\n\n    if (min < 0 && max < 0 && !fixMax) {\n      max = 0;\n    }\n  } // If bars are placed on a base axis of type time or interval account for axis boundary overflow and current axis\n  // is base axis\n  // FIXME\n  // (1) Consider support value axis, where below zero and axis `onZero` should be handled properly.\n  // (2) Refactor the logic with `barGrid`. Is it not need to `makeBarWidthAndOffsetInfo` twice with different extent?\n  //     Should not depend on series type `bar`?\n  // (3) Fix that might overlap when using dataZoom.\n  // (4) Consider other chart types using `barGrid`?\n  // See #6728, #4862, `test/bar-overflow-time-plot.html`\n\n\n  var ecModel = model.ecModel;\n\n  if (ecModel && scaleType === 'time'\n  /*|| scaleType === 'interval' */\n  ) {\n    var barSeriesModels = prepareLayoutBarSeries('bar', ecModel);\n    var isBaseAxisAndHasBarSeries;\n    zrUtil.each(barSeriesModels, function (seriesModel) {\n      isBaseAxisAndHasBarSeries |= seriesModel.getBaseAxis() === model.axis;\n    });\n\n    if (isBaseAxisAndHasBarSeries) {\n      // Calculate placement of bars on axis\n      var barWidthAndOffset = makeColumnLayout(barSeriesModels); // Adjust axis min and max to account for overflow\n\n      var adjustedScale = adjustScaleForOverflow(min, max, model, barWidthAndOffset);\n      min = adjustedScale.min;\n      max = adjustedScale.max;\n    }\n  }\n\n  return {\n    extent: [min, max],\n    // \"fix\" means \"fixed\", the value should not be\n    // changed in the subsequent steps.\n    fixMin: fixMin,\n    fixMax: fixMax\n  };\n}\n\nfunction adjustScaleForOverflow(min, max, model, barWidthAndOffset) {\n  // Get Axis Length\n  var axisExtent = model.axis.getExtent();\n  var axisLength = axisExtent[1] - axisExtent[0]; // Get bars on current base axis and calculate min and max overflow\n\n  var barsOnCurrentAxis = retrieveColumnLayout(barWidthAndOffset, model.axis);\n\n  if (barsOnCurrentAxis === undefined) {\n    return {\n      min: min,\n      max: max\n    };\n  }\n\n  var minOverflow = Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    minOverflow = Math.min(item.offset, minOverflow);\n  });\n  var maxOverflow = -Infinity;\n  zrUtil.each(barsOnCurrentAxis, function (item) {\n    maxOverflow = Math.max(item.offset + item.width, maxOverflow);\n  });\n  minOverflow = Math.abs(minOverflow);\n  maxOverflow = Math.abs(maxOverflow);\n  var totalOverFlow = minOverflow + maxOverflow; // Calulate required buffer based on old range and overflow\n\n  var oldRange = max - min;\n  var oldRangePercentOfNew = 1 - (minOverflow + maxOverflow) / axisLength;\n  var overflowBuffer = oldRange / oldRangePercentOfNew - oldRange;\n  max += overflowBuffer * (maxOverflow / totalOverFlow);\n  min -= overflowBuffer * (minOverflow / totalOverFlow);\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction niceScaleExtent(scale, model) {\n  var extentInfo = getScaleExtent(scale, model);\n  var extent = extentInfo.extent;\n  var splitNumber = model.get('splitNumber');\n\n  if (scale.type === 'log') {\n    scale.base = model.get('logBase');\n  }\n\n  var scaleType = scale.type;\n  scale.setExtent(extent[0], extent[1]);\n  scale.niceExtent({\n    splitNumber: splitNumber,\n    fixMin: extentInfo.fixMin,\n    fixMax: extentInfo.fixMax,\n    minInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('minInterval') : null,\n    maxInterval: scaleType === 'interval' || scaleType === 'time' ? model.get('maxInterval') : null\n  }); // If some one specified the min, max. And the default calculated interval\n  // is not good enough. He can specify the interval. It is often appeared\n  // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n  // to be 60.\n  // FIXME\n\n  var interval = model.get('interval');\n\n  if (interval != null) {\n    scale.setInterval && scale.setInterval(interval);\n  }\n}\n/**\n * @param {module:echarts/model/Model} model\n * @param {string} [axisType] Default retrieve from model.type\n * @return {module:echarts/scale/*}\n */\n\n\nfunction createScaleByModel(model, axisType) {\n  axisType = axisType || model.get('type');\n\n  if (axisType) {\n    switch (axisType) {\n      // Buildin scale\n      case 'category':\n        return new OrdinalScale(model.getOrdinalMeta ? model.getOrdinalMeta() : model.getCategories(), [Infinity, -Infinity]);\n\n      case 'value':\n        return new IntervalScale();\n      // Extended scale, like time and log\n\n      default:\n        return (Scale.getClass(axisType) || IntervalScale).create(model);\n    }\n  }\n}\n/**\n * Check if the axis corss 0\n */\n\n\nfunction ifAxisCrossZero(axis) {\n  var dataExtent = axis.scale.getExtent();\n  var min = dataExtent[0];\n  var max = dataExtent[1];\n  return !(min > 0 && max > 0 || min < 0 && max < 0);\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {Function} Label formatter function.\n *         param: {number} tickValue,\n *         param: {number} idx, the index in all ticks.\n *                         If category axis, this param is not requied.\n *         return: {string} label string.\n */\n\n\nfunction makeLabelFormatter(axis) {\n  var labelFormatter = axis.getLabelModel().get('formatter');\n  var categoryTickStart = axis.type === 'category' ? axis.scale.getExtent()[0] : null;\n\n  if (typeof labelFormatter === 'string') {\n    labelFormatter = function (tpl) {\n      return function (val) {\n        // For category axis, get raw value; for numeric axis,\n        // get foramtted label like '1,333,444'.\n        val = axis.scale.getLabel(val);\n        return tpl.replace('{value}', val != null ? val : '');\n      };\n    }(labelFormatter); // Consider empty array\n\n\n    return labelFormatter;\n  } else if (typeof labelFormatter === 'function') {\n    return function (tickValue, idx) {\n      // The original intention of `idx` is \"the index of the tick in all ticks\".\n      // But the previous implementation of category axis do not consider the\n      // `axisLabel.interval`, which cause that, for example, the `interval` is\n      // `1`, then the ticks \"name5\", \"name7\", \"name9\" are displayed, where the\n      // corresponding `idx` are `0`, `2`, `4`, but not `0`, `1`, `2`. So we keep\n      // the definition here for back compatibility.\n      if (categoryTickStart != null) {\n        idx = tickValue - categoryTickStart;\n      }\n\n      return labelFormatter(getAxisRawValue(axis, tickValue), idx);\n    };\n  } else {\n    return function (tick) {\n      return axis.scale.getLabel(tick);\n    };\n  }\n}\n\nfunction getAxisRawValue(axis, value) {\n  // In category axis with data zoom, tick is not the original\n  // index of axis.data. So tick should not be exposed to user\n  // in category axis.\n  return axis.type === 'category' ? axis.scale.getLabel(value) : value;\n}\n/**\n * @param {module:echarts/coord/Axis} axis\n * @return {module:zrender/core/BoundingRect} Be null/undefined if no labels.\n */\n\n\nfunction estimateLabelUnionRect(axis) {\n  var axisModel = axis.model;\n  var scale = axis.scale;\n\n  if (!axisModel.get('axisLabel.show') || scale.isBlank()) {\n    return;\n  }\n\n  var isCategory = axis.type === 'category';\n  var realNumberScaleTicks;\n  var tickCount;\n  var categoryScaleExtent = scale.getExtent(); // Optimize for large category data, avoid call `getTicks()`.\n\n  if (isCategory) {\n    tickCount = scale.count();\n  } else {\n    realNumberScaleTicks = scale.getTicks();\n    tickCount = realNumberScaleTicks.length;\n  }\n\n  var axisLabelModel = axis.getLabelModel();\n  var labelFormatter = makeLabelFormatter(axis);\n  var rect;\n  var step = 1; // Simple optimization for large amount of labels\n\n  if (tickCount > 40) {\n    step = Math.ceil(tickCount / 40);\n  }\n\n  for (var i = 0; i < tickCount; i += step) {\n    var tickValue = realNumberScaleTicks ? realNumberScaleTicks[i] : categoryScaleExtent[0] + i;\n    var label = labelFormatter(tickValue);\n    var unrotatedSingleRect = axisLabelModel.getTextRect(label);\n    var singleRect = rotateTextRect(unrotatedSingleRect, axisLabelModel.get('rotate') || 0);\n    rect ? rect.union(singleRect) : rect = singleRect;\n  }\n\n  return rect;\n}\n\nfunction rotateTextRect(textRect, rotate) {\n  var rotateRadians = rotate * Math.PI / 180;\n  var boundingBox = textRect.plain();\n  var beforeWidth = boundingBox.width;\n  var beforeHeight = boundingBox.height;\n  var afterWidth = beforeWidth * Math.cos(rotateRadians) + beforeHeight * Math.sin(rotateRadians);\n  var afterHeight = beforeWidth * Math.sin(rotateRadians) + beforeHeight * Math.cos(rotateRadians);\n  var rotatedRect = new BoundingRect(boundingBox.x, boundingBox.y, afterWidth, afterHeight);\n  return rotatedRect;\n}\n/**\n * @param {module:echarts/src/model/Model} model axisLabelModel or axisTickModel\n * @return {number|String} Can be null|'auto'|number|function\n */\n\n\nfunction getOptionCategoryInterval(model) {\n  var interval = model.get('interval');\n  return interval == null ? 'auto' : interval;\n}\n/**\n * Set `categoryInterval` as 0 implicitly indicates that\n * show all labels reguardless of overlap.\n * @param {Object} axis axisModel.axis\n * @return {boolean}\n */\n\n\nfunction shouldShowAllLabels(axis) {\n  return axis.type === 'category' && getOptionCategoryInterval(axis.getLabelModel()) === 0;\n}\n\nexports.getScaleExtent = getScaleExtent;\nexports.niceScaleExtent = niceScaleExtent;\nexports.createScaleByModel = createScaleByModel;\nexports.ifAxisCrossZero = ifAxisCrossZero;\nexports.makeLabelFormatter = makeLabelFormatter;\nexports.getAxisRawValue = getAxisRawValue;\nexports.estimateLabelUnionRect = estimateLabelUnionRect;\nexports.getOptionCategoryInterval = getOptionCategoryInterval;\nexports.shouldShowAllLabels = shouldShowAllLabels;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar defaultOption = {\n  show: true,\n  zlevel: 0,\n  z: 0,\n  // Inverse the axis.\n  inverse: false,\n  // Axis name displayed.\n  name: '',\n  // 'start' | 'middle' | 'end'\n  nameLocation: 'end',\n  // By degree. By defualt auto rotate by nameLocation.\n  nameRotate: null,\n  nameTruncate: {\n    maxWidth: null,\n    ellipsis: '...',\n    placeholder: '.'\n  },\n  // Use global text style by default.\n  nameTextStyle: {},\n  // The gap between axisName and axisLine.\n  nameGap: 15,\n  // Default `false` to support tooltip.\n  silent: false,\n  // Default `false` to avoid legacy user event listener fail.\n  triggerEvent: false,\n  tooltip: {\n    show: false\n  },\n  axisPointer: {},\n  axisLine: {\n    show: true,\n    onZero: true,\n    onZeroAxisIndex: null,\n    lineStyle: {\n      color: '#333',\n      width: 1,\n      type: 'solid'\n    },\n    // The arrow at both ends the the axis.\n    symbol: ['none', 'none'],\n    symbolSize: [10, 15]\n  },\n  axisTick: {\n    show: true,\n    // Whether axisTick is inside the grid or outside the grid.\n    inside: false,\n    // The length of axisTick.\n    length: 5,\n    lineStyle: {\n      width: 1\n    }\n  },\n  axisLabel: {\n    show: true,\n    // Whether axisLabel is inside the grid or outside the grid.\n    inside: false,\n    rotate: 0,\n    // true | false | null/undefined (auto)\n    showMinLabel: null,\n    // true | false | null/undefined (auto)\n    showMaxLabel: null,\n    margin: 8,\n    // formatter: null,\n    fontSize: 12\n  },\n  splitLine: {\n    show: true,\n    lineStyle: {\n      color: ['#ccc'],\n      width: 1,\n      type: 'solid'\n    }\n  },\n  splitArea: {\n    show: false,\n    areaStyle: {\n      color: ['rgba(250,250,250,0.3)', 'rgba(200,200,200,0.3)']\n    }\n  }\n};\nvar axisDefault = {};\naxisDefault.categoryAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For categoryAxis, boolean.\n  boundaryGap: true,\n  // Set false to faster category collection.\n  // Only usefull in the case like: category is\n  // ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // null means \"auto\":\n  // if axis.data provided, do not deduplication,\n  // else do deduplication.\n  deduplication: null,\n  // splitArea: {\n  // show: false\n  // },\n  splitLine: {\n    show: false\n  },\n  axisTick: {\n    // If tick is align with label when boundaryGap is true\n    alignWithLabel: false,\n    interval: 'auto'\n  },\n  axisLabel: {\n    interval: 'auto'\n  }\n}, defaultOption);\naxisDefault.valueAxis = zrUtil.merge({\n  // The gap at both ends of the axis. For value axis, [GAP, GAP], where\n  // `GAP` can be an absolute pixel number (like `35`), or percent (like `'30%'`)\n  boundaryGap: [0, 0],\n  // TODO\n  // min/max: [30, datamin, 60] or [20, datamin] or [datamin, 60]\n  // Min value of the axis. can be:\n  // + a number\n  // + 'dataMin': use the min value in data.\n  // + null/undefined: auto decide min value (consider pretty look and boundaryGap).\n  // min: null,\n  // Max value of the axis. can be:\n  // + a number\n  // + 'dataMax': use the max value in data.\n  // + null/undefined: auto decide max value (consider pretty look and boundaryGap).\n  // max: null,\n  // Readonly prop, specifies start value of the range when using data zoom.\n  // rangeStart: null\n  // Readonly prop, specifies end value of the range when using data zoom.\n  // rangeEnd: null\n  // Optional value can be:\n  // + `false`: always include value 0.\n  // + `true`: the extent do not consider value 0.\n  // scale: false,\n  // AxisTick and axisLabel and splitLine are caculated based on splitNumber.\n  splitNumber: 5,\n  // Interval specifies the span of the ticks is mandatorily.\n  // interval: null\n  // Specify min interval when auto calculate tick interval.\n  // minInterval: null\n  // Specify max interval when auto calculate tick interval.\n  // maxInterval: null\n  minorTick: {\n    // Minor tick, not available for cateogry axis.\n    show: false,\n    // Split number of minor ticks. The value should be in range of (0, 100)\n    splitNumber: 5,\n    // Lenght of minor tick\n    length: 3,\n    // Same inside with axisTick\n    // Line style\n    lineStyle: {// Default to be same with axisTick\n    }\n  },\n  minorSplitLine: {\n    show: false,\n    lineStyle: {\n      color: '#eee',\n      width: 1\n    }\n  }\n}, defaultOption);\naxisDefault.timeAxis = zrUtil.defaults({\n  scale: true,\n  min: 'dataMin',\n  max: 'dataMax'\n}, axisDefault.valueAxis);\naxisDefault.logAxis = zrUtil.defaults({\n  scale: true,\n  logBase: 10\n}, axisDefault.valueAxis);\nvar _default = axisDefault;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction defaultKeyGetter(item) {\n  return item;\n}\n/**\n * @param {Array} oldArr\n * @param {Array} newArr\n * @param {Function} oldKeyGetter\n * @param {Function} newKeyGetter\n * @param {Object} [context] Can be visited by this.context in callback.\n */\n\n\nfunction DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter, context) {\n  this._old = oldArr;\n  this._new = newArr;\n  this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n  this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n  this.context = context;\n}\n\nDataDiffer.prototype = {\n  constructor: DataDiffer,\n\n  /**\n   * Callback function when add a data\n   */\n  add: function (func) {\n    this._add = func;\n    return this;\n  },\n\n  /**\n   * Callback function when update a data\n   */\n  update: function (func) {\n    this._update = func;\n    return this;\n  },\n\n  /**\n   * Callback function when remove a data\n   */\n  remove: function (func) {\n    this._remove = func;\n    return this;\n  },\n  execute: function () {\n    var oldArr = this._old;\n    var newArr = this._new;\n    var oldDataIndexMap = {};\n    var newDataIndexMap = {};\n    var oldDataKeyArr = [];\n    var newDataKeyArr = [];\n    var i;\n    initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, '_oldKeyGetter', this);\n    initIndexMap(newArr, newDataIndexMap, newDataKeyArr, '_newKeyGetter', this);\n\n    for (i = 0; i < oldArr.length; i++) {\n      var key = oldDataKeyArr[i];\n      var idx = newDataIndexMap[key]; // idx can never be empty array here. see 'set null' logic below.\n\n      if (idx != null) {\n        // Consider there is duplicate key (for example, use dataItem.name as key).\n        // We should make sure every item in newArr and oldArr can be visited.\n        var len = idx.length;\n\n        if (len) {\n          len === 1 && (newDataIndexMap[key] = null);\n          idx = idx.shift();\n        } else {\n          newDataIndexMap[key] = null;\n        }\n\n        this._update && this._update(idx, i);\n      } else {\n        this._remove && this._remove(i);\n      }\n    }\n\n    for (var i = 0; i < newDataKeyArr.length; i++) {\n      var key = newDataKeyArr[i];\n\n      if (newDataIndexMap.hasOwnProperty(key)) {\n        var idx = newDataIndexMap[key];\n\n        if (idx == null) {\n          continue;\n        } // idx can never be empty array here. see 'set null' logic above.\n\n\n        if (!idx.length) {\n          this._add && this._add(idx);\n        } else {\n          for (var j = 0, len = idx.length; j < len; j++) {\n            this._add && this._add(idx[j]);\n          }\n        }\n      }\n    }\n  }\n};\n\nfunction initIndexMap(arr, map, keyArr, keyGetterName, dataDiffer) {\n  for (var i = 0; i < arr.length; i++) {\n    // Add prefix to avoid conflict with Object.prototype.\n    var key = '_ec_' + dataDiffer[keyGetterName](arr[i], i);\n    var existence = map[key];\n\n    if (existence == null) {\n      keyArr.push(key);\n      map[key] = i;\n    } else {\n      if (!existence.length) {\n        map[key] = existence = [existence];\n      }\n\n      existence.push(i);\n    }\n  }\n}\n\nvar _default = DataDiffer;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar map = _util.map;\n\nvar _number = require(\"../util/number\");\n\nvar linearMap = _number.linearMap;\nvar getPixelPrecision = _number.getPixelPrecision;\nvar round = _number.round;\n\nvar _axisTickLabelBuilder = require(\"./axisTickLabelBuilder\");\n\nvar createAxisTicks = _axisTickLabelBuilder.createAxisTicks;\nvar createAxisLabels = _axisTickLabelBuilder.createAxisLabels;\nvar calculateCategoryInterval = _axisTickLabelBuilder.calculateCategoryInterval;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar NORMALIZED_EXTENT = [0, 1];\n/**\n * Base class of Axis.\n * @constructor\n */\n\nvar Axis = function (dim, scale, extent) {\n  /**\n   * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'.\n   * @type {string}\n   */\n  this.dim = dim;\n  /**\n   * Axis scale\n   * @type {module:echarts/coord/scale/*}\n   */\n\n  this.scale = scale;\n  /**\n   * @type {Array.<number>}\n   * @private\n   */\n\n  this._extent = extent || [0, 0];\n  /**\n   * @type {boolean}\n   */\n\n  this.inverse = false;\n  /**\n   * Usually true when axis has a ordinal scale\n   * @type {boolean}\n   */\n\n  this.onBand = false;\n};\n\nAxis.prototype = {\n  constructor: Axis,\n\n  /**\n   * If axis extent contain given coord\n   * @param {number} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var extent = this._extent;\n    var min = Math.min(extent[0], extent[1]);\n    var max = Math.max(extent[0], extent[1]);\n    return coord >= min && coord <= max;\n  },\n\n  /**\n   * If axis extent contain given data\n   * @param {number} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.scale.contain(data);\n  },\n\n  /**\n   * Get coord extent.\n   * @return {Array.<number>}\n   */\n  getExtent: function () {\n    return this._extent.slice();\n  },\n\n  /**\n   * Get precision used for formatting\n   * @param {Array.<number>} [dataExtent]\n   * @return {number}\n   */\n  getPixelPrecision: function (dataExtent) {\n    return getPixelPrecision(dataExtent || this.scale.getExtent(), this._extent);\n  },\n\n  /**\n   * Set coord extent\n   * @param {number} start\n   * @param {number} end\n   */\n  setExtent: function (start, end) {\n    var extent = this._extent;\n    extent[0] = start;\n    extent[1] = end;\n  },\n\n  /**\n   * Convert data to coord. Data is the rank if it has an ordinal scale\n   * @param {number} data\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  dataToCoord: function (data, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n    data = scale.normalize(data);\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    return linearMap(data, NORMALIZED_EXTENT, extent, clamp);\n  },\n\n  /**\n   * Convert coord to data. Data is the rank if it has an ordinal scale\n   * @param {number} coord\n   * @param  {boolean} clamp\n   * @return {number}\n   */\n  coordToData: function (coord, clamp) {\n    var extent = this._extent;\n    var scale = this.scale;\n\n    if (this.onBand && scale.type === 'ordinal') {\n      extent = extent.slice();\n      fixExtentWithBands(extent, scale.count());\n    }\n\n    var t = linearMap(coord, extent, NORMALIZED_EXTENT, clamp);\n    return this.scale.scale(t);\n  },\n\n  /**\n   * Convert pixel point to data in axis\n   * @param {Array.<number>} point\n   * @param  {boolean} clamp\n   * @return {number} data\n   */\n  pointToData: function (point, clamp) {// Should be implemented in derived class if necessary.\n  },\n\n  /**\n   * Different from `zrUtil.map(axis.getTicks(), axis.dataToCoord, axis)`,\n   * `axis.getTicksCoords` considers `onBand`, which is used by\n   * `boundaryGap:true` of category axis and splitLine and splitArea.\n   * @param {Object} [opt]\n   * @param {Model} [opt.tickModel=axis.model.getModel('axisTick')]\n   * @param {boolean} [opt.clamp] If `true`, the first and the last\n   *        tick must be at the axis end points. Otherwise, clip ticks\n   *        that outside the axis extent.\n   * @return {Array.<Object>} [{\n   *     coord: ...,\n   *     tickValue: ...\n   * }, ...]\n   */\n  getTicksCoords: function (opt) {\n    opt = opt || {};\n    var tickModel = opt.tickModel || this.getTickModel();\n    var result = createAxisTicks(this, tickModel);\n    var ticks = result.ticks;\n    var ticksCoords = map(ticks, function (tickValue) {\n      return {\n        coord: this.dataToCoord(tickValue),\n        tickValue: tickValue\n      };\n    }, this);\n    var alignWithLabel = tickModel.get('alignWithLabel');\n    fixOnBandTicksCoords(this, ticksCoords, alignWithLabel, opt.clamp);\n    return ticksCoords;\n  },\n\n  /**\n   * @return {Array.<Array.<Object>>} [{ coord: ..., tickValue: ...}]\n   */\n  getMinorTicksCoords: function () {\n    if (this.scale.type === 'ordinal') {\n      // Category axis doesn't support minor ticks\n      return [];\n    }\n\n    var minorTickModel = this.model.getModel('minorTick');\n    var splitNumber = minorTickModel.get('splitNumber'); // Protection.\n\n    if (!(splitNumber > 0 && splitNumber < 100)) {\n      splitNumber = 5;\n    }\n\n    var minorTicks = this.scale.getMinorTicks(splitNumber);\n    var minorTicksCoords = map(minorTicks, function (minorTicksGroup) {\n      return map(minorTicksGroup, function (minorTick) {\n        return {\n          coord: this.dataToCoord(minorTick),\n          tickValue: minorTick\n        };\n      }, this);\n    }, this);\n    return minorTicksCoords;\n  },\n\n  /**\n   * @return {Array.<Object>} [{\n   *     formattedLabel: string,\n   *     rawLabel: axis.scale.getLabel(tickValue)\n   *     tickValue: number\n   * }, ...]\n   */\n  getViewLabels: function () {\n    return createAxisLabels(this).labels;\n  },\n\n  /**\n   * @return {module:echarts/coord/model/Model}\n   */\n  getLabelModel: function () {\n    return this.model.getModel('axisLabel');\n  },\n\n  /**\n   * Notice here we only get the default tick model. For splitLine\n   * or splitArea, we should pass the splitLineModel or splitAreaModel\n   * manually when calling `getTicksCoords`.\n   * In GL, this method may be overrided to:\n   * `axisModel.getModel('axisTick', grid3DModel.getModel('axisTick'));`\n   * @return {module:echarts/coord/model/Model}\n   */\n  getTickModel: function () {\n    return this.model.getModel('axisTick');\n  },\n\n  /**\n   * Get width of band\n   * @return {number}\n   */\n  getBandWidth: function () {\n    var axisExtent = this._extent;\n    var dataExtent = this.scale.getExtent();\n    var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0); // Fix #2728, avoid NaN when only one data.\n\n    len === 0 && (len = 1);\n    var size = Math.abs(axisExtent[1] - axisExtent[0]);\n    return Math.abs(size) / len;\n  },\n\n  /**\n   * @abstract\n   * @return {boolean} Is horizontal\n   */\n  isHorizontal: null,\n\n  /**\n   * @abstract\n   * @return {number} Get axis rotate, by degree.\n   */\n  getRotate: null,\n\n  /**\n   * Only be called in category axis.\n   * Can be overrided, consider other axes like in 3D.\n   * @return {number} Auto interval for cateogry axis tick and label\n   */\n  calculateCategoryInterval: function () {\n    return calculateCategoryInterval(this);\n  }\n};\n\nfunction fixExtentWithBands(extent, nTick) {\n  var size = extent[1] - extent[0];\n  var len = nTick;\n  var margin = size / len / 2;\n  extent[0] += margin;\n  extent[1] -= margin;\n} // If axis has labels [1, 2, 3, 4]. Bands on the axis are\n// |---1---|---2---|---3---|---4---|.\n// So the displayed ticks and splitLine/splitArea should between\n// each data item, otherwise cause misleading (e.g., split tow bars\n// of a single data item when there are two bar series).\n// Also consider if tickCategoryInterval > 0 and onBand, ticks and\n// splitLine/spliteArea should layout appropriately corresponding\n// to displayed labels. (So we should not use `getBandWidth` in this\n// case).\n\n\nfunction fixOnBandTicksCoords(axis, ticksCoords, alignWithLabel, clamp) {\n  var ticksLen = ticksCoords.length;\n\n  if (!axis.onBand || alignWithLabel || !ticksLen) {\n    return;\n  }\n\n  var axisExtent = axis.getExtent();\n  var last;\n  var diffSize;\n\n  if (ticksLen === 1) {\n    ticksCoords[0].coord = axisExtent[0];\n    last = ticksCoords[1] = {\n      coord: axisExtent[0]\n    };\n  } else {\n    var crossLen = ticksCoords[ticksLen - 1].tickValue - ticksCoords[0].tickValue;\n    var shift = (ticksCoords[ticksLen - 1].coord - ticksCoords[0].coord) / crossLen;\n    each(ticksCoords, function (ticksItem) {\n      ticksItem.coord -= shift / 2;\n    });\n    var dataExtent = axis.scale.getExtent();\n    diffSize = 1 + dataExtent[1] - ticksCoords[ticksLen - 1].tickValue;\n    last = {\n      coord: ticksCoords[ticksLen - 1].coord + shift * diffSize\n    };\n    ticksCoords.push(last);\n  }\n\n  var inverse = axisExtent[0] > axisExtent[1]; // Handling clamp.\n\n  if (littleThan(ticksCoords[0].coord, axisExtent[0])) {\n    clamp ? ticksCoords[0].coord = axisExtent[0] : ticksCoords.shift();\n  }\n\n  if (clamp && littleThan(axisExtent[0], ticksCoords[0].coord)) {\n    ticksCoords.unshift({\n      coord: axisExtent[0]\n    });\n  }\n\n  if (littleThan(axisExtent[1], last.coord)) {\n    clamp ? last.coord = axisExtent[1] : ticksCoords.pop();\n  }\n\n  if (clamp && littleThan(last.coord, axisExtent[1])) {\n    ticksCoords.push({\n      coord: axisExtent[1]\n    });\n  }\n\n  function littleThan(a, b) {\n    // Avoid rounding error cause calculated tick coord different with extent.\n    // It may cause an extra unecessary tick added.\n    a = round(a);\n    b = round(b);\n    return inverse ? a > b : a < b;\n  }\n}\n\nvar _default = Axis;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar each = _util.each;\nvar isString = _util.isString;\nvar defaults = _util.defaults;\nvar extend = _util.extend;\nvar isObject = _util.isObject;\nvar clone = _util.clone;\n\nvar _model = require(\"../../util/model\");\n\nvar normalizeToArray = _model.normalizeToArray;\n\nvar _sourceHelper = require(\"./sourceHelper\");\n\nvar guessOrdinal = _sourceHelper.guessOrdinal;\nvar BE_ORDINAL = _sourceHelper.BE_ORDINAL;\n\nvar Source = require(\"../Source\");\n\nvar _dimensionHelper = require(\"./dimensionHelper\");\n\nvar OTHER_DIMENSIONS = _dimensionHelper.OTHER_DIMENSIONS;\n\nvar DataDimensionInfo = require(\"../DataDimensionInfo\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @deprecated\n * Use `echarts/data/helper/createDimensions` instead.\n */\n\n/**\n * @see {module:echarts/test/ut/spec/data/completeDimensions}\n *\n * This method builds the relationship between:\n * + \"what the coord sys or series requires (see `sysDims`)\",\n * + \"what the user defines (in `encode` and `dimensions`, see `opt.dimsDef` and `opt.encodeDef`)\"\n * + \"what the data source provids (see `source`)\".\n *\n * Some guess strategy will be adapted if user does not define something.\n * If no 'value' dimension specified, the first no-named dimension will be\n * named as 'value'.\n *\n * @param {Array.<string>} sysDims Necessary dimensions, like ['x', 'y'], which\n *      provides not only dim template, but also default order.\n *      properties: 'name', 'type', 'displayName'.\n *      `name` of each item provides default coord name.\n *      [{dimsDef: [string|Object, ...]}, ...] dimsDef of sysDim item provides default dim name, and\n *                                    provide dims count that the sysDim required.\n *      [{ordinalMeta}] can be specified.\n * @param {module:echarts/data/Source|Array|Object} source or data (for compatibal with pervious)\n * @param {Object} [opt]\n * @param {Array.<Object|string>} [opt.dimsDef] option.series.dimensions User defined dimensions\n *      For example: ['asdf', {name, type}, ...].\n * @param {Object|HashMap} [opt.encodeDef] option.series.encode {x: 2, y: [3, 1], tooltip: [1, 2], label: 3}\n * @param {Function} [opt.encodeDefaulter] Called if no `opt.encodeDef` exists.\n *      If not specified, auto find the next available data dim.\n *      param source {module:data/Source}\n *      param dimCount {number}\n *      return {Object} encode Never be `null/undefined`.\n * @param {string} [opt.generateCoord] Generate coord dim with the given name.\n *      If not specified, extra dim names will be:\n *      'value', 'value0', 'value1', ...\n * @param {number} [opt.generateCoordCount] By default, the generated dim name is `generateCoord`.\n *      If `generateCoordCount` specified, the generated dim names will be:\n *      `generateCoord` + 0, `generateCoord` + 1, ...\n *      can be Infinity, indicate that use all of the remain columns.\n * @param {number} [opt.dimCount] If not specified, guess by the first data item.\n * @return {Array.<module:data/DataDimensionInfo>}\n */\nfunction completeDimensions(sysDims, source, opt) {\n  if (!Source.isInstance(source)) {\n    source = Source.seriesDataToSource(source);\n  }\n\n  opt = opt || {};\n  sysDims = (sysDims || []).slice();\n  var dimsDef = (opt.dimsDef || []).slice();\n  var dataDimNameMap = createHashMap();\n  var coordDimNameMap = createHashMap(); // var valueCandidate;\n\n  var result = [];\n  var dimCount = getDimCount(source, sysDims, dimsDef, opt.dimCount); // Apply user defined dims (`name` and `type`) and init result.\n\n  for (var i = 0; i < dimCount; i++) {\n    var dimDefItem = dimsDef[i] = extend({}, isObject(dimsDef[i]) ? dimsDef[i] : {\n      name: dimsDef[i]\n    });\n    var userDimName = dimDefItem.name;\n    var resultItem = result[i] = new DataDimensionInfo(); // Name will be applied later for avoiding duplication.\n\n    if (userDimName != null && dataDimNameMap.get(userDimName) == null) {\n      // Only if `series.dimensions` is defined in option\n      // displayName, will be set, and dimension will be diplayed vertically in\n      // tooltip by default.\n      resultItem.name = resultItem.displayName = userDimName;\n      dataDimNameMap.set(userDimName, i);\n    }\n\n    dimDefItem.type != null && (resultItem.type = dimDefItem.type);\n    dimDefItem.displayName != null && (resultItem.displayName = dimDefItem.displayName);\n  }\n\n  var encodeDef = opt.encodeDef;\n\n  if (!encodeDef && opt.encodeDefaulter) {\n    encodeDef = opt.encodeDefaulter(source, dimCount);\n  }\n\n  encodeDef = createHashMap(encodeDef); // Set `coordDim` and `coordDimIndex` by `encodeDef` and normalize `encodeDef`.\n\n  encodeDef.each(function (dataDims, coordDim) {\n    dataDims = normalizeToArray(dataDims).slice(); // Note: It is allowed that `dataDims.length` is `0`, e.g., options is\n    // `{encode: {x: -1, y: 1}}`. Should not filter anything in\n    // this case.\n\n    if (dataDims.length === 1 && !isString(dataDims[0]) && dataDims[0] < 0) {\n      encodeDef.set(coordDim, false);\n      return;\n    }\n\n    var validDataDims = encodeDef.set(coordDim, []);\n    each(dataDims, function (resultDimIdx, idx) {\n      // The input resultDimIdx can be dim name or index.\n      isString(resultDimIdx) && (resultDimIdx = dataDimNameMap.get(resultDimIdx));\n\n      if (resultDimIdx != null && resultDimIdx < dimCount) {\n        validDataDims[idx] = resultDimIdx;\n        applyDim(result[resultDimIdx], coordDim, idx);\n      }\n    });\n  }); // Apply templetes and default order from `sysDims`.\n\n  var availDimIdx = 0;\n  each(sysDims, function (sysDimItem, sysDimIndex) {\n    var coordDim;\n    var sysDimItem;\n    var sysDimItemDimsDef;\n    var sysDimItemOtherDims;\n\n    if (isString(sysDimItem)) {\n      coordDim = sysDimItem;\n      sysDimItem = {};\n    } else {\n      coordDim = sysDimItem.name;\n      var ordinalMeta = sysDimItem.ordinalMeta;\n      sysDimItem.ordinalMeta = null;\n      sysDimItem = clone(sysDimItem);\n      sysDimItem.ordinalMeta = ordinalMeta; // `coordDimIndex` should not be set directly.\n\n      sysDimItemDimsDef = sysDimItem.dimsDef;\n      sysDimItemOtherDims = sysDimItem.otherDims;\n      sysDimItem.name = sysDimItem.coordDim = sysDimItem.coordDimIndex = sysDimItem.dimsDef = sysDimItem.otherDims = null;\n    }\n\n    var dataDims = encodeDef.get(coordDim); // negative resultDimIdx means no need to mapping.\n\n    if (dataDims === false) {\n      return;\n    }\n\n    var dataDims = normalizeToArray(dataDims); // dimensions provides default dim sequences.\n\n    if (!dataDims.length) {\n      for (var i = 0; i < (sysDimItemDimsDef && sysDimItemDimsDef.length || 1); i++) {\n        while (availDimIdx < result.length && result[availDimIdx].coordDim != null) {\n          availDimIdx++;\n        }\n\n        availDimIdx < result.length && dataDims.push(availDimIdx++);\n      }\n    } // Apply templates.\n\n\n    each(dataDims, function (resultDimIdx, coordDimIndex) {\n      var resultItem = result[resultDimIdx];\n      applyDim(defaults(resultItem, sysDimItem), coordDim, coordDimIndex);\n\n      if (resultItem.name == null && sysDimItemDimsDef) {\n        var sysDimItemDimsDefItem = sysDimItemDimsDef[coordDimIndex];\n        !isObject(sysDimItemDimsDefItem) && (sysDimItemDimsDefItem = {\n          name: sysDimItemDimsDefItem\n        });\n        resultItem.name = resultItem.displayName = sysDimItemDimsDefItem.name;\n        resultItem.defaultTooltip = sysDimItemDimsDefItem.defaultTooltip;\n      } // FIXME refactor, currently only used in case: {otherDims: {tooltip: false}}\n\n\n      sysDimItemOtherDims && defaults(resultItem.otherDims, sysDimItemOtherDims);\n    });\n  });\n\n  function applyDim(resultItem, coordDim, coordDimIndex) {\n    if (OTHER_DIMENSIONS.get(coordDim) != null) {\n      resultItem.otherDims[coordDim] = coordDimIndex;\n    } else {\n      resultItem.coordDim = coordDim;\n      resultItem.coordDimIndex = coordDimIndex;\n      coordDimNameMap.set(coordDim, true);\n    }\n  } // Make sure the first extra dim is 'value'.\n\n\n  var generateCoord = opt.generateCoord;\n  var generateCoordCount = opt.generateCoordCount;\n  var fromZero = generateCoordCount != null;\n  generateCoordCount = generateCoord ? generateCoordCount || 1 : 0;\n  var extra = generateCoord || 'value'; // Set dim `name` and other `coordDim` and other props.\n\n  for (var resultDimIdx = 0; resultDimIdx < dimCount; resultDimIdx++) {\n    var resultItem = result[resultDimIdx] = result[resultDimIdx] || new DataDimensionInfo();\n    var coordDim = resultItem.coordDim;\n\n    if (coordDim == null) {\n      resultItem.coordDim = genName(extra, coordDimNameMap, fromZero);\n      resultItem.coordDimIndex = 0;\n\n      if (!generateCoord || generateCoordCount <= 0) {\n        resultItem.isExtraCoord = true;\n      }\n\n      generateCoordCount--;\n    }\n\n    resultItem.name == null && (resultItem.name = genName(resultItem.coordDim, dataDimNameMap));\n\n    if (resultItem.type == null && (guessOrdinal(source, resultDimIdx, resultItem.name) === BE_ORDINAL.Must // Consider the case:\n    // {\n    //    dataset: {source: [\n    //        ['2001', 123],\n    //        ['2002', 456],\n    //        ...\n    //        ['The others', 987],\n    //    ]},\n    //    series: {type: 'pie'}\n    // }\n    // The first colum should better be treated as a \"ordinal\" although it\n    // might not able to be detected as an \"ordinal\" by `guessOrdinal`.\n    || resultItem.isExtraCoord && (resultItem.otherDims.itemName != null || resultItem.otherDims.seriesName != null))) {\n      resultItem.type = 'ordinal';\n    }\n  }\n\n  return result;\n} // ??? TODO\n// Originally detect dimCount by data[0]. Should we\n// optimize it to only by sysDims and dimensions and encode.\n// So only necessary dims will be initialized.\n// But\n// (1) custom series should be considered. where other dims\n// may be visited.\n// (2) sometimes user need to calcualte bubble size or use visualMap\n// on other dimensions besides coordSys needed.\n// So, dims that is not used by system, should be shared in storage?\n\n\nfunction getDimCount(source, sysDims, dimsDef, optDimCount) {\n  // Note that the result dimCount should not small than columns count\n  // of data, otherwise `dataDimNameMap` checking will be incorrect.\n  var dimCount = Math.max(source.dimensionsDetectCount || 1, sysDims.length, dimsDef.length, optDimCount || 0);\n  each(sysDims, function (sysDimItem) {\n    var sysDimItemDimsDef = sysDimItem.dimsDef;\n    sysDimItemDimsDef && (dimCount = Math.max(dimCount, sysDimItemDimsDef.length));\n  });\n  return dimCount;\n}\n\nfunction genName(name, map, fromZero) {\n  if (fromZero || map.get(name) != null) {\n    var i = 0;\n\n    while (map.get(name + i) != null) {\n      i++;\n    }\n\n    name += i;\n  }\n\n  map.set(name, true);\n  return name;\n}\n\nvar _default = completeDimensions;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isObject = _util.isObject;\nvar map = _util.map;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @constructor\n * @param {Object} [opt]\n * @param {Object} [opt.categories=[]]\n * @param {Object} [opt.needCollect=false]\n * @param {Object} [opt.deduplication=false]\n */\nfunction OrdinalMeta(opt) {\n  /**\n   * @readOnly\n   * @type {Array.<string>}\n   */\n  this.categories = opt.categories || [];\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._needCollect = opt.needCollect;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._deduplication = opt.deduplication;\n  /**\n   * @private\n   * @type {boolean}\n   */\n\n  this._map;\n}\n/**\n * @param {module:echarts/model/Model} axisModel\n * @return {module:echarts/data/OrdinalMeta}\n */\n\n\nOrdinalMeta.createByAxisModel = function (axisModel) {\n  var option = axisModel.option;\n  var data = option.data;\n  var categories = data && map(data, getName);\n  return new OrdinalMeta({\n    categories: categories,\n    needCollect: !categories,\n    // deduplication is default in axis.\n    deduplication: option.dedplication !== false\n  });\n};\n\nvar proto = OrdinalMeta.prototype;\n/**\n * @param {string} category\n * @return {number} ordinal\n */\n\nproto.getOrdinal = function (category) {\n  return getOrCreateMap(this).get(category);\n};\n/**\n * @param {*} category\n * @return {number} The ordinal. If not found, return NaN.\n */\n\n\nproto.parseAndCollect = function (category) {\n  var index;\n  var needCollect = this._needCollect; // The value of category dim can be the index of the given category set.\n  // This feature is only supported when !needCollect, because we should\n  // consider a common case: a value is 2017, which is a number but is\n  // expected to be tread as a category. This case usually happen in dataset,\n  // where it happent to be no need of the index feature.\n\n  if (typeof category !== 'string' && !needCollect) {\n    return category;\n  } // Optimize for the scenario:\n  // category is ['2012-01-01', '2012-01-02', ...], where the input\n  // data has been ensured not duplicate and is large data.\n  // Notice, if a dataset dimension provide categroies, usually echarts\n  // should remove duplication except user tell echarts dont do that\n  // (set axis.deduplication = false), because echarts do not know whether\n  // the values in the category dimension has duplication (consider the\n  // parallel-aqi example)\n\n\n  if (needCollect && !this._deduplication) {\n    index = this.categories.length;\n    this.categories[index] = category;\n    return index;\n  }\n\n  var map = getOrCreateMap(this);\n  index = map.get(category);\n\n  if (index == null) {\n    if (needCollect) {\n      index = this.categories.length;\n      this.categories[index] = category;\n      map.set(category, index);\n    } else {\n      index = NaN;\n    }\n  }\n\n  return index;\n}; // Consider big data, do not create map until needed.\n\n\nfunction getOrCreateMap(ordinalMeta) {\n  return ordinalMeta._map || (ordinalMeta._map = createHashMap(ordinalMeta.categories));\n}\n\nfunction getName(obj) {\n  if (isObject(obj) && obj.value != null) {\n    return obj.value;\n  } else {\n    return obj + '';\n  }\n}\n\nvar _default = OrdinalMeta;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nrequire(\"./AxisModel\");\n\nvar ComponentModel = require(\"../../model/Component\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\nvar _default = ComponentModel.extend({\n  type: 'grid',\n  dependencies: ['xAxis', 'yAxis'],\n  layoutMode: 'box',\n\n  /**\n   * @type {module:echarts/coord/cartesian/Grid}\n   */\n  coordinateSystem: null,\n  defaultOption: {\n    show: false,\n    zlevel: 0,\n    z: 0,\n    left: '10%',\n    top: 60,\n    right: '10%',\n    bottom: 60,\n    // If grid size contain label\n    containLabel: false,\n    // width: {totalWidth} - left - right,\n    // height: {totalHeight} - top - bottom,\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderWidth: 1,\n    borderColor: '#ccc'\n  }\n});\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// Avoid typo.\nvar SOURCE_FORMAT_ORIGINAL = 'original';\nvar SOURCE_FORMAT_ARRAY_ROWS = 'arrayRows';\nvar SOURCE_FORMAT_OBJECT_ROWS = 'objectRows';\nvar SOURCE_FORMAT_KEYED_COLUMNS = 'keyedColumns';\nvar SOURCE_FORMAT_UNKNOWN = 'unknown'; // ??? CHANGE A NAME\n\nvar SOURCE_FORMAT_TYPED_ARRAY = 'typedArray';\nvar SERIES_LAYOUT_BY_COLUMN = 'column';\nvar SERIES_LAYOUT_BY_ROW = 'row';\nexports.SOURCE_FORMAT_ORIGINAL = SOURCE_FORMAT_ORIGINAL;\nexports.SOURCE_FORMAT_ARRAY_ROWS = SOURCE_FORMAT_ARRAY_ROWS;\nexports.SOURCE_FORMAT_OBJECT_ROWS = SOURCE_FORMAT_OBJECT_ROWS;\nexports.SOURCE_FORMAT_KEYED_COLUMNS = SOURCE_FORMAT_KEYED_COLUMNS;\nexports.SOURCE_FORMAT_UNKNOWN = SOURCE_FORMAT_UNKNOWN;\nexports.SOURCE_FORMAT_TYPED_ARRAY = SOURCE_FORMAT_TYPED_ARRAY;\nexports.SERIES_LAYOUT_BY_COLUMN = SERIES_LAYOUT_BY_COLUMN;\nexports.SERIES_LAYOUT_BY_ROW = SERIES_LAYOUT_BY_ROW;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar axisDefault = require(\"./axisDefault\");\n\nvar ComponentModel = require(\"../model/Component\");\n\nvar _layout = require(\"../util/layout\");\n\nvar getLayoutParams = _layout.getLayoutParams;\nvar mergeLayoutParam = _layout.mergeLayoutParam;\n\nvar OrdinalMeta = require(\"../data/OrdinalMeta\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// FIXME axisType is fixed ?\nvar AXIS_TYPES = ['value', 'category', 'time', 'log'];\n/**\n * Generate sub axis model class\n * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n * @param {module:echarts/model/Component} BaseAxisModelClass\n * @param {Function} axisTypeDefaulter\n * @param {Object} [extraDefaultOption]\n */\n\nfunction _default(axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n  zrUtil.each(AXIS_TYPES, function (axisType) {\n    BaseAxisModelClass.extend({\n      /**\n       * @readOnly\n       */\n      type: axisName + 'Axis.' + axisType,\n      mergeDefaultAndTheme: function (option, ecModel) {\n        var layoutMode = this.layoutMode;\n        var inputPositionParams = layoutMode ? getLayoutParams(option) : {};\n        var themeModel = ecModel.getTheme();\n        zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n        zrUtil.merge(option, this.getDefaultOption());\n        option.type = axisTypeDefaulter(axisName, option);\n\n        if (layoutMode) {\n          mergeLayoutParam(option, inputPositionParams, layoutMode);\n        }\n      },\n\n      /**\n       * @override\n       */\n      optionUpdated: function () {\n        var thisOption = this.option;\n\n        if (thisOption.type === 'category') {\n          this.__ordinalMeta = OrdinalMeta.createByAxisModel(this);\n        }\n      },\n\n      /**\n       * Should not be called before all of 'getInitailData' finished.\n       * Because categories are collected during initializing data.\n       */\n      getCategories: function (rawData) {\n        var option = this.option; // FIXME\n        // warning if called before all of 'getInitailData' finished.\n\n        if (option.type === 'category') {\n          if (rawData) {\n            return option.data;\n          }\n\n          return this.__ordinalMeta.categories;\n        }\n      },\n      getOrdinalMeta: function () {\n        return this.__ordinalMeta;\n      },\n      defaultOption: zrUtil.mergeAll([{}, axisDefault[axisType + 'Axis'], extraDefaultOption], true)\n    });\n  });\n  ComponentModel.registerSubTypeDefaulter(axisName + 'Axis', zrUtil.curry(axisTypeDefaulter, axisName));\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar completeDimensions = require(\"./completeDimensions\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Substitute `completeDimensions`.\n * `completeDimensions` is to be deprecated.\n */\n\n/**\n * @param {module:echarts/data/Source|module:echarts/data/List} source or data.\n * @param {Object|Array} [opt]\n * @param {Array.<string|Object>} [opt.coordDimensions=[]]\n * @param {number} [opt.dimensionsCount]\n * @param {string} [opt.generateCoord]\n * @param {string} [opt.generateCoordCount]\n * @param {Array.<string|Object>} [opt.dimensionsDefine=source.dimensionsDefine] Overwrite source define.\n * @param {Object|HashMap} [opt.encodeDefine=source.encodeDefine] Overwrite source define.\n * @param {Function} [opt.encodeDefaulter] Make default encode if user not specified.\n * @return {Array.<Object>} dimensionsInfo\n */\nfunction _default(source, opt) {\n  opt = opt || {};\n  return completeDimensions(opt.coordDimensions || [], source, {\n    dimsDef: opt.dimensionsDefine || source.dimensionsDefine,\n    encodeDef: opt.encodeDefine || source.encodeDefine,\n    dimCount: opt.dimensionsCount,\n    encodeDefaulter: opt.encodeDefaulter,\n    generateCoord: opt.generateCoord,\n    generateCoordCount: opt.generateCoordCount\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Region = require(\"./Region\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Parse and decode geo json\n * @module echarts/coord/geo/parseGeoJson\n */\nfunction decode(json) {\n  if (!json.UTF8Encoding) {\n    return json;\n  }\n\n  var encodeScale = json.UTF8Scale;\n\n  if (encodeScale == null) {\n    encodeScale = 1024;\n  }\n\n  var features = json.features;\n\n  for (var f = 0; f < features.length; f++) {\n    var feature = features[f];\n    var geometry = feature.geometry;\n    var coordinates = geometry.coordinates;\n    var encodeOffsets = geometry.encodeOffsets;\n\n    for (var c = 0; c < coordinates.length; c++) {\n      var coordinate = coordinates[c];\n\n      if (geometry.type === 'Polygon') {\n        coordinates[c] = decodePolygon(coordinate, encodeOffsets[c], encodeScale);\n      } else if (geometry.type === 'MultiPolygon') {\n        for (var c2 = 0; c2 < coordinate.length; c2++) {\n          var polygon = coordinate[c2];\n          coordinate[c2] = decodePolygon(polygon, encodeOffsets[c][c2], encodeScale);\n        }\n      }\n    }\n  } // Has been decoded\n\n\n  json.UTF8Encoding = false;\n  return json;\n}\n\nfunction decodePolygon(coordinate, encodeOffsets, encodeScale) {\n  var result = [];\n  var prevX = encodeOffsets[0];\n  var prevY = encodeOffsets[1];\n\n  for (var i = 0; i < coordinate.length; i += 2) {\n    var x = coordinate.charCodeAt(i) - 64;\n    var y = coordinate.charCodeAt(i + 1) - 64; // ZigZag decoding\n\n    x = x >> 1 ^ -(x & 1);\n    y = y >> 1 ^ -(y & 1); // Delta deocding\n\n    x += prevX;\n    y += prevY;\n    prevX = x;\n    prevY = y; // Dequantize\n\n    result.push([x / encodeScale, y / encodeScale]);\n  }\n\n  return result;\n}\n/**\n * @alias module:echarts/coord/geo/parseGeoJson\n * @param {Object} geoJson\n * @param {string} nameProperty\n * @return {module:zrender/container/Group}\n */\n\n\nfunction _default(geoJson, nameProperty) {\n  decode(geoJson);\n  return zrUtil.map(zrUtil.filter(geoJson.features, function (featureObj) {\n    // Output of mapshaper may have geometry null\n    return featureObj.geometry && featureObj.properties && featureObj.geometry.coordinates.length > 0;\n  }), function (featureObj) {\n    var properties = featureObj.properties;\n    var geo = featureObj.geometry;\n    var coordinates = geo.coordinates;\n    var geometries = [];\n\n    if (geo.type === 'Polygon') {\n      geometries.push({\n        type: 'polygon',\n        // According to the GeoJSON specification.\n        // First must be exterior, and the rest are all interior(holes).\n        exterior: coordinates[0],\n        interiors: coordinates.slice(1)\n      });\n    }\n\n    if (geo.type === 'MultiPolygon') {\n      zrUtil.each(coordinates, function (item) {\n        if (item[0]) {\n          geometries.push({\n            type: 'polygon',\n            exterior: item[0],\n            interiors: item.slice(1)\n          });\n        }\n      });\n    }\n\n    var region = new Region(properties[nameProperty || 'name'], geometries, properties.cp);\n    region.properties = properties;\n    return region;\n  });\n}\n\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar Cartesian = require(\"./Cartesian\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nfunction Cartesian2D(name) {\n  Cartesian.call(this, name);\n}\n\nCartesian2D.prototype = {\n  constructor: Cartesian2D,\n  type: 'cartesian2d',\n\n  /**\n   * @type {Array.<string>}\n   * @readOnly\n   */\n  dimensions: ['x', 'y'],\n\n  /**\n   * Base axis will be used on stacking.\n   *\n   * @return {module:echarts/coord/cartesian/Axis2D}\n   */\n  getBaseAxis: function () {\n    return this.getAxesByScale('ordinal')[0] || this.getAxesByScale('time')[0] || this.getAxis('x');\n  },\n\n  /**\n   * If contain point\n   * @param {Array.<number>} point\n   * @return {boolean}\n   */\n  containPoint: function (point) {\n    var axisX = this.getAxis('x');\n    var axisY = this.getAxis('y');\n    return axisX.contain(axisX.toLocalCoord(point[0])) && axisY.contain(axisY.toLocalCoord(point[1]));\n  },\n\n  /**\n   * If contain data\n   * @param {Array.<number>} data\n   * @return {boolean}\n   */\n  containData: function (data) {\n    return this.getAxis('x').containData(data[0]) && this.getAxis('y').containData(data[1]);\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  dataToPoint: function (data, reserved, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.toGlobalCoord(xAxis.dataToCoord(data[0]));\n    out[1] = yAxis.toGlobalCoord(yAxis.dataToCoord(data[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} data\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  clampData: function (data, out) {\n    var xScale = this.getAxis('x').scale;\n    var yScale = this.getAxis('y').scale;\n    var xAxisExtent = xScale.getExtent();\n    var yAxisExtent = yScale.getExtent();\n    var x = xScale.parse(data[0]);\n    var y = yScale.parse(data[1]);\n    out = out || [];\n    out[0] = Math.min(Math.max(Math.min(xAxisExtent[0], xAxisExtent[1]), x), Math.max(xAxisExtent[0], xAxisExtent[1]));\n    out[1] = Math.min(Math.max(Math.min(yAxisExtent[0], yAxisExtent[1]), y), Math.max(yAxisExtent[0], yAxisExtent[1]));\n    return out;\n  },\n\n  /**\n   * @param {Array.<number>} point\n   * @param {Array.<number>} out\n   * @return {Array.<number>}\n   */\n  pointToData: function (point, out) {\n    var xAxis = this.getAxis('x');\n    var yAxis = this.getAxis('y');\n    out = out || [];\n    out[0] = xAxis.coordToData(xAxis.toLocalCoord(point[0]));\n    out[1] = yAxis.coordToData(yAxis.toLocalCoord(point[1]));\n    return out;\n  },\n\n  /**\n   * Get other axis\n   * @param {module:echarts/coord/cartesian/Axis2D} axis\n   */\n  getOtherAxis: function (axis) {\n    return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n  },\n\n  /**\n   * Get rect area of cartesian.\n   * Area will have a contain function to determine if a point is in the coordinate system.\n   * @return {BoundingRect}\n   */\n  getArea: function () {\n    var xExtent = this.getAxis('x').getGlobalExtent();\n    var yExtent = this.getAxis('y').getGlobalExtent();\n    var x = Math.min(xExtent[0], xExtent[1]);\n    var y = Math.min(yExtent[0], yExtent[1]);\n    var width = Math.max(xExtent[0], xExtent[1]) - x;\n    var height = Math.max(yExtent[0], yExtent[1]) - y;\n    var rect = new BoundingRect(x, y, width, height);\n    return rect;\n  }\n};\nzrUtil.inherits(Cartesian2D, Cartesian);\nvar _default = Cartesian2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\nfunction dimAxisMapper(dim) {\n  return this._axes[dim];\n}\n/**\n * @alias module:echarts/coord/Cartesian\n * @constructor\n */\n\n\nvar Cartesian = function (name) {\n  this._axes = {};\n  this._dimList = [];\n  /**\n   * @type {string}\n   */\n\n  this.name = name || '';\n};\n\nCartesian.prototype = {\n  constructor: Cartesian,\n  type: 'cartesian',\n\n  /**\n   * Get axis\n   * @param  {number|string} dim\n   * @return {module:echarts/coord/Cartesian~Axis}\n   */\n  getAxis: function (dim) {\n    return this._axes[dim];\n  },\n\n  /**\n   * Get axes list\n   * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n   */\n  getAxes: function () {\n    return zrUtil.map(this._dimList, dimAxisMapper, this);\n  },\n\n  /**\n   * Get axes list by given scale type\n   */\n  getAxesByScale: function (scaleType) {\n    scaleType = scaleType.toLowerCase();\n    return zrUtil.filter(this.getAxes(), function (axis) {\n      return axis.scale.type === scaleType;\n    });\n  },\n\n  /**\n   * Add axis\n   * @param {module:echarts/coord/Cartesian.Axis}\n   */\n  addAxis: function (axis) {\n    var dim = axis.dim;\n    this._axes[dim] = axis;\n\n    this._dimList.push(dim);\n  },\n\n  /**\n   * Convert data to coord in nd space\n   * @param {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  dataToCoord: function (val) {\n    return this._dataCoordConvert(val, 'dataToCoord');\n  },\n\n  /**\n   * Convert coord in nd space to data\n   * @param  {Array.<number>|Object.<string, number>} val\n   * @return {Array.<number>|Object.<string, number>}\n   */\n  coordToData: function (val) {\n    return this._dataCoordConvert(val, 'coordToData');\n  },\n  _dataCoordConvert: function (input, method) {\n    var dimList = this._dimList;\n    var output = input instanceof Array ? [] : {};\n\n    for (var i = 0; i < dimList.length; i++) {\n      var dim = dimList[i];\n      var axis = this._axes[dim];\n      output[dim] = axis[method](input[dim]);\n    }\n\n    return output;\n  }\n};\nvar _default = Cartesian;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar textContain = require(\"zrender/lib/contain/text\");\n\nvar _model = require(\"../util/model\");\n\nvar makeInner = _model.makeInner;\n\nvar _axisHelper = require(\"./axisHelper\");\n\nvar makeLabelFormatter = _axisHelper.makeLabelFormatter;\nvar getOptionCategoryInterval = _axisHelper.getOptionCategoryInterval;\nvar shouldShowAllLabels = _axisHelper.shouldShowAllLabels;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar inner = makeInner();\n/**\n * @param {module:echats/coord/Axis} axis\n * @return {Object} {\n *     labels: [{\n *         formattedLabel: string,\n *         rawLabel: string,\n *         tickValue: number\n *     }, ...],\n *     labelCategoryInterval: number\n * }\n */\n\nfunction createAxisLabels(axis) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryLabels(axis) : makeRealNumberLabels(axis);\n}\n/**\n * @param {module:echats/coord/Axis} axis\n * @param {module:echarts/model/Model} tickModel For example, can be axisTick, splitLine, splitArea.\n * @return {Object} {\n *     ticks: Array.<number>\n *     tickCategoryInterval: number\n * }\n */\n\n\nfunction createAxisTicks(axis, tickModel) {\n  // Only ordinal scale support tick interval\n  return axis.type === 'category' ? makeCategoryTicks(axis, tickModel) : {\n    ticks: axis.scale.getTicks()\n  };\n}\n\nfunction makeCategoryLabels(axis) {\n  var labelModel = axis.getLabelModel();\n  var result = makeCategoryLabelsActually(axis, labelModel);\n  return !labelModel.get('show') || axis.scale.isBlank() ? {\n    labels: [],\n    labelCategoryInterval: result.labelCategoryInterval\n  } : result;\n}\n\nfunction makeCategoryLabelsActually(axis, labelModel) {\n  var labelsCache = getListCache(axis, 'labels');\n  var optionLabelInterval = getOptionCategoryInterval(labelModel);\n  var result = listCacheGet(labelsCache, optionLabelInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var labels;\n  var numericLabelInterval;\n\n  if (zrUtil.isFunction(optionLabelInterval)) {\n    labels = makeLabelsByCustomizedCategoryInterval(axis, optionLabelInterval);\n  } else {\n    numericLabelInterval = optionLabelInterval === 'auto' ? makeAutoCategoryInterval(axis) : optionLabelInterval;\n    labels = makeLabelsByNumericCategoryInterval(axis, numericLabelInterval);\n  } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(labelsCache, optionLabelInterval, {\n    labels: labels,\n    labelCategoryInterval: numericLabelInterval\n  });\n}\n\nfunction makeCategoryTicks(axis, tickModel) {\n  var ticksCache = getListCache(axis, 'ticks');\n  var optionTickInterval = getOptionCategoryInterval(tickModel);\n  var result = listCacheGet(ticksCache, optionTickInterval);\n\n  if (result) {\n    return result;\n  }\n\n  var ticks;\n  var tickCategoryInterval; // Optimize for the case that large category data and no label displayed,\n  // we should not return all ticks.\n\n  if (!tickModel.get('show') || axis.scale.isBlank()) {\n    ticks = [];\n  }\n\n  if (zrUtil.isFunction(optionTickInterval)) {\n    ticks = makeLabelsByCustomizedCategoryInterval(axis, optionTickInterval, true);\n  } // Always use label interval by default despite label show. Consider this\n  // scenario, Use multiple grid with the xAxis sync, and only one xAxis shows\n  // labels. `splitLine` and `axisTick` should be consistent in this case.\n  else if (optionTickInterval === 'auto') {\n      var labelsResult = makeCategoryLabelsActually(axis, axis.getLabelModel());\n      tickCategoryInterval = labelsResult.labelCategoryInterval;\n      ticks = zrUtil.map(labelsResult.labels, function (labelItem) {\n        return labelItem.tickValue;\n      });\n    } else {\n      tickCategoryInterval = optionTickInterval;\n      ticks = makeLabelsByNumericCategoryInterval(axis, tickCategoryInterval, true);\n    } // Cache to avoid calling interval function repeatly.\n\n\n  return listCacheSet(ticksCache, optionTickInterval, {\n    ticks: ticks,\n    tickCategoryInterval: tickCategoryInterval\n  });\n}\n\nfunction makeRealNumberLabels(axis) {\n  var ticks = axis.scale.getTicks();\n  var labelFormatter = makeLabelFormatter(axis);\n  return {\n    labels: zrUtil.map(ticks, function (tickValue, idx) {\n      return {\n        formattedLabel: labelFormatter(tickValue, idx),\n        rawLabel: axis.scale.getLabel(tickValue),\n        tickValue: tickValue\n      };\n    })\n  };\n} // Large category data calculation is performence sensitive, and ticks and label\n// probably be fetched by multiple times. So we cache the result.\n// axis is created each time during a ec process, so we do not need to clear cache.\n\n\nfunction getListCache(axis, prop) {\n  // Because key can be funciton, and cache size always be small, we use array cache.\n  return inner(axis)[prop] || (inner(axis)[prop] = []);\n}\n\nfunction listCacheGet(cache, key) {\n  for (var i = 0; i < cache.length; i++) {\n    if (cache[i].key === key) {\n      return cache[i].value;\n    }\n  }\n}\n\nfunction listCacheSet(cache, key, value) {\n  cache.push({\n    key: key,\n    value: value\n  });\n  return value;\n}\n\nfunction makeAutoCategoryInterval(axis) {\n  var result = inner(axis).autoInterval;\n  return result != null ? result : inner(axis).autoInterval = axis.calculateCategoryInterval();\n}\n/**\n * Calculate interval for category axis ticks and labels.\n * To get precise result, at least one of `getRotate` and `isHorizontal`\n * should be implemented in axis.\n */\n\n\nfunction calculateCategoryInterval(axis) {\n  var params = fetchAutoCategoryIntervalCalculationParams(axis);\n  var labelFormatter = makeLabelFormatter(axis);\n  var rotation = (params.axisRotate - params.labelRotate) / 180 * Math.PI;\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent(); // Providing this method is for optimization:\n  // avoid generating a long array by `getTicks`\n  // in large category data case.\n\n  var tickCount = ordinalScale.count();\n\n  if (ordinalExtent[1] - ordinalExtent[0] < 1) {\n    return 0;\n  }\n\n  var step = 1; // Simple optimization. Empirical value: tick count should less than 40.\n\n  if (tickCount > 40) {\n    step = Math.max(1, Math.floor(tickCount / 40));\n  }\n\n  var tickValue = ordinalExtent[0];\n  var unitSpan = axis.dataToCoord(tickValue + 1) - axis.dataToCoord(tickValue);\n  var unitW = Math.abs(unitSpan * Math.cos(rotation));\n  var unitH = Math.abs(unitSpan * Math.sin(rotation));\n  var maxW = 0;\n  var maxH = 0; // Caution: Performance sensitive for large category data.\n  // Consider dataZoom, we should make appropriate step to avoid O(n) loop.\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    var width = 0;\n    var height = 0; // Not precise, do not consider align and vertical align\n    // and each distance from axis line yet.\n\n    var rect = textContain.getBoundingRect(labelFormatter(tickValue), params.font, 'center', 'top'); // Magic number\n\n    width = rect.width * 1.3;\n    height = rect.height * 1.3; // Min size, void long loop.\n\n    maxW = Math.max(maxW, width, 7);\n    maxH = Math.max(maxH, height, 7);\n  }\n\n  var dw = maxW / unitW;\n  var dh = maxH / unitH; // 0/0 is NaN, 1/0 is Infinity.\n\n  isNaN(dw) && (dw = Infinity);\n  isNaN(dh) && (dh = Infinity);\n  var interval = Math.max(0, Math.floor(Math.min(dw, dh)));\n  var cache = inner(axis.model);\n  var axisExtent = axis.getExtent();\n  var lastAutoInterval = cache.lastAutoInterval;\n  var lastTickCount = cache.lastTickCount; // Use cache to keep interval stable while moving zoom window,\n  // otherwise the calculated interval might jitter when the zoom\n  // window size is close to the interval-changing size.\n  // For example, if all of the axis labels are `a, b, c, d, e, f, g`.\n  // The jitter will cause that sometimes the displayed labels are\n  // `a, d, g` (interval: 2) sometimes `a, c, e`(interval: 1).\n\n  if (lastAutoInterval != null && lastTickCount != null && Math.abs(lastAutoInterval - interval) <= 1 && Math.abs(lastTickCount - tickCount) <= 1 // Always choose the bigger one, otherwise the critical\n  // point is not the same when zooming in or zooming out.\n  && lastAutoInterval > interval // If the axis change is caused by chart resize, the cache should not\n  // be used. Otherwise some hiden labels might not be shown again.\n  && cache.axisExtend0 === axisExtent[0] && cache.axisExtend1 === axisExtent[1]) {\n    interval = lastAutoInterval;\n  } // Only update cache if cache not used, otherwise the\n  // changing of interval is too insensitive.\n  else {\n      cache.lastTickCount = tickCount;\n      cache.lastAutoInterval = interval;\n      cache.axisExtend0 = axisExtent[0];\n      cache.axisExtend1 = axisExtent[1];\n    }\n\n  return interval;\n}\n\nfunction fetchAutoCategoryIntervalCalculationParams(axis) {\n  var labelModel = axis.getLabelModel();\n  return {\n    axisRotate: axis.getRotate ? axis.getRotate() : axis.isHorizontal && !axis.isHorizontal() ? 90 : 0,\n    labelRotate: labelModel.get('rotate') || 0,\n    font: labelModel.getFont()\n  };\n}\n\nfunction makeLabelsByNumericCategoryInterval(axis, categoryInterval, onlyTick) {\n  var labelFormatter = makeLabelFormatter(axis);\n  var ordinalScale = axis.scale;\n  var ordinalExtent = ordinalScale.getExtent();\n  var labelModel = axis.getLabelModel();\n  var result = []; // TODO: axisType: ordinalTime, pick the tick from each month/day/year/...\n\n  var step = Math.max((categoryInterval || 0) + 1, 1);\n  var startTick = ordinalExtent[0];\n  var tickCount = ordinalScale.count(); // Calculate start tick based on zero if possible to keep label consistent\n  // while zooming and moving while interval > 0. Otherwise the selection\n  // of displayable ticks and symbols probably keep changing.\n  // 3 is empirical value.\n\n  if (startTick !== 0 && step > 1 && tickCount / step > 2) {\n    startTick = Math.round(Math.ceil(startTick / step) * step);\n  } // (1) Only add min max label here but leave overlap checking\n  // to render stage, which also ensure the returned list\n  // suitable for splitLine and splitArea rendering.\n  // (2) Scales except category always contain min max label so\n  // do not need to perform this process.\n\n\n  var showAllLabel = shouldShowAllLabels(axis);\n  var includeMinLabel = labelModel.get('showMinLabel') || showAllLabel;\n  var includeMaxLabel = labelModel.get('showMaxLabel') || showAllLabel;\n\n  if (includeMinLabel && startTick !== ordinalExtent[0]) {\n    addItem(ordinalExtent[0]);\n  } // Optimize: avoid generating large array by `ordinalScale.getTicks()`.\n\n\n  var tickValue = startTick;\n\n  for (; tickValue <= ordinalExtent[1]; tickValue += step) {\n    addItem(tickValue);\n  }\n\n  if (includeMaxLabel && tickValue - step !== ordinalExtent[1]) {\n    addItem(ordinalExtent[1]);\n  }\n\n  function addItem(tVal) {\n    result.push(onlyTick ? tVal : {\n      formattedLabel: labelFormatter(tVal),\n      rawLabel: ordinalScale.getLabel(tVal),\n      tickValue: tVal\n    });\n  }\n\n  return result;\n} // When interval is function, the result `false` means ignore the tick.\n// It is time consuming for large category data.\n\n\nfunction makeLabelsByCustomizedCategoryInterval(axis, categoryInterval, onlyTick) {\n  var ordinalScale = axis.scale;\n  var labelFormatter = makeLabelFormatter(axis);\n  var result = [];\n  zrUtil.each(ordinalScale.getTicks(), function (tickValue) {\n    var rawLabel = ordinalScale.getLabel(tickValue);\n\n    if (categoryInterval(tickValue, rawLabel)) {\n      result.push(onlyTick ? tickValue : {\n        formattedLabel: labelFormatter(tickValue),\n        rawLabel: rawLabel,\n        tickValue: tickValue\n      });\n    }\n  });\n  return result;\n}\n\nexports.createAxisLabels = createAxisLabels;\nexports.createAxisTicks = createAxisTicks;\nexports.calculateCategoryInterval = calculateCategoryInterval;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar zrUtil = require(\"zrender/lib/core/util\");\n\nvar Axis = require(\"../Axis\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Extend axis 2d\n * @constructor module:echarts/coord/cartesian/Axis2D\n * @extends {module:echarts/coord/cartesian/Axis}\n * @param {string} dim\n * @param {*} scale\n * @param {Array.<number>} coordExtent\n * @param {string} axisType\n * @param {string} position\n */\nvar Axis2D = function (dim, scale, coordExtent, axisType, position) {\n  Axis.call(this, dim, scale, coordExtent);\n  /**\n   * Axis type\n   *  - 'category'\n   *  - 'value'\n   *  - 'time'\n   *  - 'log'\n   * @type {string}\n   */\n\n  this.type = axisType || 'value';\n  /**\n   * Axis position\n   *  - 'top'\n   *  - 'bottom'\n   *  - 'left'\n   *  - 'right'\n   */\n\n  this.position = position || 'bottom';\n};\n\nAxis2D.prototype = {\n  constructor: Axis2D,\n\n  /**\n   * Index of axis, can be used as key\n   */\n  index: 0,\n\n  /**\n   * Implemented in <module:echarts/coord/cartesian/Grid>.\n   * @return {Array.<module:echarts/coord/cartesian/Axis2D>}\n   *         If not on zero of other axis, return null/undefined.\n   *         If no axes, return an empty array.\n   */\n  getAxesOnZeroOf: null,\n\n  /**\n   * Axis model\n   * @param {module:echarts/coord/cartesian/AxisModel}\n   */\n  model: null,\n  isHorizontal: function () {\n    var position = this.position;\n    return position === 'top' || position === 'bottom';\n  },\n\n  /**\n   * Each item cooresponds to this.getExtent(), which\n   * means globalExtent[0] may greater than globalExtent[1],\n   * unless `asc` is input.\n   *\n   * @param {boolean} [asc]\n   * @return {Array.<number>}\n   */\n  getGlobalExtent: function (asc) {\n    var ret = this.getExtent();\n    ret[0] = this.toGlobalCoord(ret[0]);\n    ret[1] = this.toGlobalCoord(ret[1]);\n    asc && ret[0] > ret[1] && ret.reverse();\n    return ret;\n  },\n  getOtherAxis: function () {\n    this.grid.getOtherAxis();\n  },\n\n  /**\n   * @override\n   */\n  pointToData: function (point, clamp) {\n    return this.coordToData(this.toLocalCoord(point[this.dim === 'x' ? 0 : 1]), clamp);\n  },\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var localCoord = axis.toLocalCoord(80);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toLocalCoord: null,\n\n  /**\n   * Transform global coord to local coord,\n   * i.e. var globalCoord = axis.toLocalCoord(40);\n   * designate by module:echarts/coord/cartesian/Grid.\n   * @type {Function}\n   */\n  toGlobalCoord: null\n};\nzrUtil.inherits(Axis2D, Axis);\nvar _default = Axis2D;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _config = require(\"../../config\");\n\nvar __DEV__ = _config.__DEV__;\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isString = _util.isString;\nvar isArray = _util.isArray;\nvar each = _util.each;\nvar assert = _util.assert;\n\nvar _parseSVG = require(\"zrender/lib/tool/parseSVG\");\n\nvar parseXML = _parseSVG.parseXML;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar storage = createHashMap(); // For minimize the code size of common echarts package,\n// do not put too much logic in this module.\n\nvar _default = {\n  // The format of record: see `echarts.registerMap`.\n  // Compatible with previous `echarts.registerMap`.\n  registerMap: function (mapName, rawGeoJson, rawSpecialAreas) {\n    var records;\n\n    if (isArray(rawGeoJson)) {\n      records = rawGeoJson;\n    } else if (rawGeoJson.svg) {\n      records = [{\n        type: 'svg',\n        source: rawGeoJson.svg,\n        specialAreas: rawGeoJson.specialAreas\n      }];\n    } else {\n      // Backward compatibility.\n      if (rawGeoJson.geoJson && !rawGeoJson.features) {\n        rawSpecialAreas = rawGeoJson.specialAreas;\n        rawGeoJson = rawGeoJson.geoJson;\n      }\n\n      records = [{\n        type: 'geoJSON',\n        source: rawGeoJson,\n        specialAreas: rawSpecialAreas\n      }];\n    }\n\n    each(records, function (record) {\n      var type = record.type;\n      type === 'geoJson' && (type = record.type = 'geoJSON');\n      var parse = parsers[type];\n      parse(record);\n    });\n    return storage.set(mapName, records);\n  },\n  retrieveMap: function (mapName) {\n    return storage.get(mapName);\n  }\n};\nvar parsers = {\n  geoJSON: function (record) {\n    var source = record.source;\n    record.geoJSON = !isString(source) ? source : typeof JSON !== 'undefined' && JSON.parse ? JSON.parse(source) : new Function('return (' + source + ');')();\n  },\n  // Only perform parse to XML object here, which might be time\n  // consiming for large SVG.\n  // Although convert XML to zrender element is also time consiming,\n  // if we do it here, the clone of zrender elements has to be\n  // required. So we do it once for each geo instance, util real\n  // performance issues call for optimizing it.\n  svg: function (record) {\n    record.svgXML = parseXML(record.source);\n  }\n};\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar createHashMap = _util.createHashMap;\nvar isTypedArray = _util.isTypedArray;\n\nvar _clazz = require(\"../util/clazz\");\n\nvar enableClassCheck = _clazz.enableClassCheck;\n\nvar _sourceType = require(\"./helper/sourceType\");\n\nvar SOURCE_FORMAT_ORIGINAL = _sourceType.SOURCE_FORMAT_ORIGINAL;\nvar SERIES_LAYOUT_BY_COLUMN = _sourceType.SERIES_LAYOUT_BY_COLUMN;\nvar SOURCE_FORMAT_UNKNOWN = _sourceType.SOURCE_FORMAT_UNKNOWN;\nvar SOURCE_FORMAT_TYPED_ARRAY = _sourceType.SOURCE_FORMAT_TYPED_ARRAY;\nvar SOURCE_FORMAT_KEYED_COLUMNS = _sourceType.SOURCE_FORMAT_KEYED_COLUMNS;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * [sourceFormat]\n *\n * + \"original\":\n * This format is only used in series.data, where\n * itemStyle can be specified in data item.\n *\n * + \"arrayRows\":\n * [\n *     ['product', 'score', 'amount'],\n *     ['Matcha Latte', 89.3, 95.8],\n *     ['Milk Tea', 92.1, 89.4],\n *     ['Cheese Cocoa', 94.4, 91.2],\n *     ['Walnut Brownie', 85.4, 76.9]\n * ]\n *\n * + \"objectRows\":\n * [\n *     {product: 'Matcha Latte', score: 89.3, amount: 95.8},\n *     {product: 'Milk Tea', score: 92.1, amount: 89.4},\n *     {product: 'Cheese Cocoa', score: 94.4, amount: 91.2},\n *     {product: 'Walnut Brownie', score: 85.4, amount: 76.9}\n * ]\n *\n * + \"keyedColumns\":\n * {\n *     'product': ['Matcha Latte', 'Milk Tea', 'Cheese Cocoa', 'Walnut Brownie'],\n *     'count': [823, 235, 1042, 988],\n *     'score': [95.8, 81.4, 91.2, 76.9]\n * }\n *\n * + \"typedArray\"\n *\n * + \"unknown\"\n */\n\n/**\n * @constructor\n * @param {Object} fields\n * @param {string} fields.sourceFormat\n * @param {Array|Object} fields.fromDataset\n * @param {Array|Object} [fields.data]\n * @param {string} [seriesLayoutBy='column']\n * @param {Array.<Object|string>} [dimensionsDefine]\n * @param {Objet|HashMap} [encodeDefine]\n * @param {number} [startIndex=0]\n * @param {number} [dimensionsDetectCount]\n */\nfunction Source(fields) {\n  /**\n   * @type {boolean}\n   */\n  this.fromDataset = fields.fromDataset;\n  /**\n   * Not null/undefined.\n   * @type {Array|Object}\n   */\n\n  this.data = fields.data || (fields.sourceFormat === SOURCE_FORMAT_KEYED_COLUMNS ? {} : []);\n  /**\n   * See also \"detectSourceFormat\".\n   * Not null/undefined.\n   * @type {string}\n   */\n\n  this.sourceFormat = fields.sourceFormat || SOURCE_FORMAT_UNKNOWN;\n  /**\n   * 'row' or 'column'\n   * Not null/undefined.\n   * @type {string} seriesLayoutBy\n   */\n\n  this.seriesLayoutBy = fields.seriesLayoutBy || SERIES_LAYOUT_BY_COLUMN;\n  /**\n   * dimensions definition in option.\n   * can be null/undefined.\n   * @type {Array.<Object|string>}\n   */\n\n  this.dimensionsDefine = fields.dimensionsDefine;\n  /**\n   * encode definition in option.\n   * can be null/undefined.\n   * @type {Objet|HashMap}\n   */\n\n  this.encodeDefine = fields.encodeDefine && createHashMap(fields.encodeDefine);\n  /**\n   * Not null/undefined, uint.\n   * @type {number}\n   */\n\n  this.startIndex = fields.startIndex || 0;\n  /**\n   * Can be null/undefined (when unknown), uint.\n   * @type {number}\n   */\n\n  this.dimensionsDetectCount = fields.dimensionsDetectCount;\n}\n/**\n * Wrap original series data for some compatibility cases.\n */\n\n\nSource.seriesDataToSource = function (data) {\n  return new Source({\n    data: data,\n    sourceFormat: isTypedArray(data) ? SOURCE_FORMAT_TYPED_ARRAY : SOURCE_FORMAT_ORIGINAL,\n    fromDataset: false\n  });\n};\n\nenableClassCheck(Source);\nvar _default = Source;\nmodule.exports = _default;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar _util = require(\"zrender/lib/core/util\");\n\nvar each = _util.each;\nvar isString = _util.isString;\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Note that it is too complicated to support 3d stack by value\n * (have to create two-dimension inverted index), so in 3d case\n * we just support that stacked by index.\n *\n * @param {module:echarts/model/Series} seriesModel\n * @param {Array.<string|Object>} dimensionInfoList The same as the input of <module:echarts/data/List>.\n *        The input dimensionInfoList will be modified.\n * @param {Object} [opt]\n * @param {boolean} [opt.stackedCoordDimension=''] Specify a coord dimension if needed.\n * @param {boolean} [opt.byIndex=false]\n * @return {Object} calculationInfo\n * {\n *     stackedDimension: string\n *     stackedByDimension: string\n *     isStackedByIndex: boolean\n *     stackedOverDimension: string\n *     stackResultDimension: string\n * }\n */\nfunction enableDataStack(seriesModel, dimensionInfoList, opt) {\n  opt = opt || {};\n  var byIndex = opt.byIndex;\n  var stackedCoordDimension = opt.stackedCoordDimension; // Compatibal: when `stack` is set as '', do not stack.\n\n  var mayStack = !!(seriesModel && seriesModel.get('stack'));\n  var stackedByDimInfo;\n  var stackedDimInfo;\n  var stackResultDimension;\n  var stackedOverDimension;\n  each(dimensionInfoList, function (dimensionInfo, index) {\n    if (isString(dimensionInfo)) {\n      dimensionInfoList[index] = dimensionInfo = {\n        name: dimensionInfo\n      };\n    }\n\n    if (mayStack && !dimensionInfo.isExtraCoord) {\n      // Find the first ordinal dimension as the stackedByDimInfo.\n      if (!byIndex && !stackedByDimInfo && dimensionInfo.ordinalMeta) {\n        stackedByDimInfo = dimensionInfo;\n      } // Find the first stackable dimension as the stackedDimInfo.\n\n\n      if (!stackedDimInfo && dimensionInfo.type !== 'ordinal' && dimensionInfo.type !== 'time' && (!stackedCoordDimension || stackedCoordDimension === dimensionInfo.coordDim)) {\n        stackedDimInfo = dimensionInfo;\n      }\n    }\n  });\n\n  if (stackedDimInfo && !byIndex && !stackedByDimInfo) {\n    // Compatible with previous design, value axis (time axis) only stack by index.\n    // It may make sense if the user provides elaborately constructed data.\n    byIndex = true;\n  } // Add stack dimension, they can be both calculated by coordinate system in `unionExtent`.\n  // That put stack logic in List is for using conveniently in echarts extensions, but it\n  // might not be a good way.\n\n\n  if (stackedDimInfo) {\n    // Use a weird name that not duplicated with other names.\n    stackResultDimension = '__\\0ecstackresult';\n    stackedOverDimension = '__\\0ecstackedover'; // Create inverted index to fast query index by value.\n\n    if (stackedByDimInfo) {\n      stackedByDimInfo.createInvertedIndices = true;\n    }\n\n    var stackedDimCoordDim = stackedDimInfo.coordDim;\n    var stackedDimType = stackedDimInfo.type;\n    var stackedDimCoordIndex = 0;\n    each(dimensionInfoList, function (dimensionInfo) {\n      if (dimensionInfo.coordDim === stackedDimCoordDim) {\n        stackedDimCoordIndex++;\n      }\n    });\n    dimensionInfoList.push({\n      name: stackResultDimension,\n      coordDim: stackedDimCoordDim,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n    stackedDimCoordIndex++;\n    dimensionInfoList.push({\n      name: stackedOverDimension,\n      // This dimension contains stack base (generally, 0), so do not set it as\n      // `stackedDimCoordDim` to avoid extent calculation, consider log scale.\n      coordDim: stackedOverDimension,\n      coordDimIndex: stackedDimCoordIndex,\n      type: stackedDimType,\n      isExtraCoord: true,\n      isCalculationCoord: true\n    });\n  }\n\n  return {\n    stackedDimension: stackedDimInfo && stackedDimInfo.name,\n    stackedByDimension: stackedByDimInfo && stackedByDimInfo.name,\n    isStackedByIndex: byIndex,\n    stackedOverDimension: stackedOverDimension,\n    stackResultDimension: stackResultDimension\n  };\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} stackedDim\n */\n\n\nfunction isDimensionStacked(data, stackedDim\n/*, stackedByDim*/\n) {\n  // Each single series only maps to one pair of axis. So we do not need to\n  // check stackByDim, whatever stacked by a dimension or stacked by index.\n  return !!stackedDim && stackedDim === data.getCalculationInfo('stackedDimension'); // && (\n  //     stackedByDim != null\n  //         ? stackedByDim === data.getCalculationInfo('stackedByDimension')\n  //         : data.getCalculationInfo('isStackedByIndex')\n  // );\n}\n/**\n * @param {module:echarts/data/List} data\n * @param {string} targetDim\n * @param {string} [stackedByDim] If not input this parameter, check whether\n *                                stacked by index.\n * @return {string} dimension\n */\n\n\nfunction getStackedDimension(data, targetDim) {\n  return isDimensionStacked(data, targetDim) ? data.getCalculationInfo('stackResultDimension') : targetDim;\n}\n\nexports.enableDataStack = enableDataStack;\nexports.isDimensionStacked = isDimensionStacked;\nexports.getStackedDimension = getStackedDimension;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nvar BoundingRect = require(\"zrender/lib/core/BoundingRect\");\n\nvar bbox = require(\"zrender/lib/core/bbox\");\n\nvar vec2 = require(\"zrender/lib/core/vector\");\n\nvar polygonContain = require(\"zrender/lib/contain/polygon\");\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * @module echarts/coord/geo/Region\n */\n\n/**\n * @param {string|Region} name\n * @param {Array} geometries\n * @param {Array.<number>} cp\n */\nfunction Region(name, geometries, cp) {\n  /**\n   * @type {string}\n   * @readOnly\n   */\n  this.name = name;\n  /**\n   * @type {Array.<Array>}\n   * @readOnly\n   */\n\n  this.geometries = geometries;\n\n  if (!cp) {\n    var rect = this.getBoundingRect();\n    cp = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  } else {\n    cp = [cp[0], cp[1]];\n  }\n  /**\n   * @type {Array.<number>}\n   */\n\n\n  this.center = cp;\n}\n\nRegion.prototype = {\n  constructor: Region,\n  properties: null,\n\n  /**\n   * @return {module:zrender/core/BoundingRect}\n   */\n  getBoundingRect: function () {\n    var rect = this._rect;\n\n    if (rect) {\n      return rect;\n    }\n\n    var MAX_NUMBER = Number.MAX_VALUE;\n    var min = [MAX_NUMBER, MAX_NUMBER];\n    var max = [-MAX_NUMBER, -MAX_NUMBER];\n    var min2 = [];\n    var max2 = [];\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      } // Doesn't consider hole\n\n\n      var exterior = geometries[i].exterior;\n      bbox.fromPoints(exterior, min2, max2);\n      vec2.min(min, min, min2);\n      vec2.max(max, max, max2);\n    } // No data\n\n\n    if (i === 0) {\n      min[0] = min[1] = max[0] = max[1] = 0;\n    }\n\n    return this._rect = new BoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n  },\n\n  /**\n   * @param {<Array.<number>} coord\n   * @return {boolean}\n   */\n  contain: function (coord) {\n    var rect = this.getBoundingRect();\n    var geometries = this.geometries;\n\n    if (!rect.contain(coord[0], coord[1])) {\n      return false;\n    }\n\n    loopGeo: for (var i = 0, len = geometries.length; i < len; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      if (polygonContain.contain(exterior, coord[0], coord[1])) {\n        // Not in the region if point is in the hole.\n        for (var k = 0; k < (interiors ? interiors.length : 0); k++) {\n          if (polygonContain.contain(interiors[k])) {\n            continue loopGeo;\n          }\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  },\n  transformTo: function (x, y, width, height) {\n    var rect = this.getBoundingRect();\n    var aspect = rect.width / rect.height;\n\n    if (!width) {\n      width = aspect * height;\n    } else if (!height) {\n      height = width / aspect;\n    }\n\n    var target = new BoundingRect(x, y, width, height);\n    var transform = rect.calculateTransform(target);\n    var geometries = this.geometries;\n\n    for (var i = 0; i < geometries.length; i++) {\n      // Only support polygon.\n      if (geometries[i].type !== 'polygon') {\n        continue;\n      }\n\n      var exterior = geometries[i].exterior;\n      var interiors = geometries[i].interiors;\n\n      for (var p = 0; p < exterior.length; p++) {\n        vec2.applyTransform(exterior[p], exterior[p], transform);\n      }\n\n      for (var h = 0; h < (interiors ? interiors.length : 0); h++) {\n        for (var p = 0; p < interiors[h].length; p++) {\n          vec2.applyTransform(interiors[h][p], interiors[h][p], transform);\n        }\n      }\n    }\n\n    rect = this._rect;\n    rect.copy(target); // Update center\n\n    this.center = [rect.x + rect.width / 2, rect.y + rect.height / 2];\n  },\n  cloneShallow: function (name) {\n    name == null && (name = this.name);\n    var newRegion = new Region(name, this.geometries, this.center);\n    newRegion._rect = this._rect;\n    newRegion.transformTo = null; // Simply avoid to be called.\n\n    return newRegion;\n  }\n};\nvar _default = Region;\nmodule.exports = _default;"],"sourceRoot":""}