{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/base/common/search.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/platform.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/path.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/strings.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/map.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/scrollable.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/marshalling.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/numbers.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/marked/marked.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/severity.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/resources.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/range.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/objects.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/network.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/mime.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/process.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/stopwatch.js","webpack:///./node_modules/monaco-editor/esm/vs/base/common/types.js"],"names":["buildReplaceStringWithCasePreserved","matches","pattern","containsHyphens","validateSpecificSpecialCharacter","containsUnderscores","buildReplaceStringForSpecificSpecialCharacter","toUpperCase","toLowerCase","substr","specialCharacter","doesContainSpecialCharacter","indexOf","split","length","splitPatternAtSpecialCharacter","splitMatchAtSpecialCharacter","replaceString","forEach","splitValue","index","slice","LANGUAGE_DEFAULT","_isWindows","_isMacintosh","_isLinux","_isNative","_isWeb","_isIOS","_locale","undefined","_userAgent","isElectronRenderer","process","versions","electron","type","navigator","platform","rawNlsConfig","nlsConfig","JSON","parse","resolved","availableLanguages","locale","_translationsConfigFile","e","userAgent","maxTouchPoints","language","isWindows","isMacintosh","isLinux","isNative","isWeb","isIOS","_globals","self","global","globals","setImmediate","bind","postMessage","importScripts","pending_1","addEventListener","data","vscodeSetImmediateId","i","len","candidate","id","splice","callback","lastId_1","myId","push","nextTick","_promise","Promise","resolve","then","OS","__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","CHAR_UPPERCASE_A","CHAR_LOWERCASE_A","CHAR_UPPERCASE_Z","CHAR_LOWERCASE_Z","CHAR_DOT","CHAR_FORWARD_SLASH","CHAR_BACKWARD_SLASH","CHAR_COLON","CHAR_QUESTION_MARK","ErrorInvalidArgType","_super","name","expected","actual","determiner","_this","replace","msg","call","code","Error","validateString","value","isPathSeparator","isPosixPathSeparator","isWindowsDeviceRoot","normalizeString","path","allowAboveRoot","separator","res","lastSegmentLength","lastSlash","dots","charCodeAt","lastSlashIndex","lastIndexOf","_format","sep","pathObject","dir","root","base","ext","win32","pathSegments","_i","arguments","resolvedDevice","resolvedTail","resolvedAbsolute","rootEnd","device","isAbsolute","j","last","firstPart","normalize","tail","join","joined","paths","arg","needsReplace","slashCount","firstLen","relative","from","to","fromOrig","toOrig","fromStart","fromEnd","fromLen","toStart","toEnd","toLen","lastCommonSep","fromCode","toCode","out","toNamespacedPath","resolvedPath","dirname","end","matchedSlash","offset","basename","start","drive","extIdx","firstNonSlashEnd","extname","startDot","startPart","preDotState","format","ret","delimiter","posix","trailingSeparator","hasRoot","isFalsyOrWhitespace","str","trim","pad","n","l","char","r","reverse","_formatRegexp","args","match","group","idx","parseInt","isNaN","escape","html","escapeRegExpCharacters","haystack","needle","trimmed","ltrim","rtrim","needleLen","substring","haystackLen","convertSimple2RegExpPattern","startsWith","endsWith","diff","createRegExp","searchString","isRegex","options","wholeWord","test","charAt","modifiers","matchCase","multiline","unicode","RegExp","regExpLeadsToEndlessLoop","regexp","source","exec","lastIndex","regExpFlags","ignoreCase","firstNonWhitespaceIndex","chCode","getLeadingWhitespace","lastNonWhitespaceIndex","startIndex","compare","a","compareIgnoreCase","Math","min","codeA","codeB","isUpperAsciiLetter","isLowerAsciiLetter","isAsciiLetter","equalsIgnoreCase","doEqualsIgnoreCase","stopAt","abs","String","fromCharCode","startsWithIgnoreCase","candidateLength","commonPrefixLength","commonSuffixLength","aLastIndex","bLastIndex","isHighSurrogate","charCode","isLowSurrogate","getNextCodePoint","nextCharCode","getPrevCodePoint","prevCharCode","nextCharLength","graphemeBreakTree","GraphemeBreakTree","getInstance","initialOffset","initialCodePoint","graphemeBreakType","getGraphemeBreakType","nextCodePoint","nextGraphemeBreakType","breakBetweenGraphemeBreakType","prevCharLength","prevCodePoint","prevGraphemeBreakType","CONTAINS_RTL","containsRTL","CONTAINS_EMOJI","containsEmoji","IS_BASIC_ASCII","isBasicASCII","containsFullWidthCharacter","isFullWidthCharacter","isEmojiImprecise","x","UTF8_BOM_CHARACTER","startsWithUTF8BOM","safeBtoa","btoa","encodeURIComponent","repeat","s","count","result","containsUppercaseCharacter","target","ignoreEscapedChars","singleLetterHash","LETTERS_CNT","codePoint","breakTypeA","breakTypeB","_data","getGraphemeBreakRawData","_INSTANCE","nodeCount","nodeIndex","values","forEachable","keys","map","_value","key","StringIterator","_pos","reset","next","hasNext","cmp","aCode","thisCode","PathIterator","_splitOnBackslash","_from","_to","justSeps","ch","aPos","aLen","thisPos","TernarySearchTreeNode","TernarySearchTree","segments","_iter","forPaths","forStrings","clear","_root","set","element","node","iter","segment","val","left","right","mid","oldElement","get","findSubstr","_forEach","ResourceMap","Map","resource","toKey","toString","LinkedMap","_map","_head","_tail","_size","defineProperty","enumerable","configurable","touch","item","previous","addItemLast","addItemFirst","delete","remove","removeItem","callbackfn","thisArg","current","trimOld","newSize","size","currentSize","toJSON","LRUCache","limit","ratio","_limit","_ratio","max","peek","checkTrim","round","ScrollState","width","scrollWidth","scrollLeft","height","scrollHeight","scrollTop","equals","other","withScrollDimensions","update","withScrollPosition","createScrollEvent","widthChanged","scrollWidthChanged","scrollLeftChanged","heightChanged","scrollHeightChanged","scrollTopChanged","Scrollable","smoothScrollDuration","scheduleAtNextAnimationFrame","_onScroll","_register","onScroll","event","_smoothScrollDuration","_scheduleAtNextAnimationFrame","_state","_smoothScrolling","dispose","setSmoothScrollDuration","validateScrollPosition","scrollPosition","getScrollDimensions","setScrollDimensions","dimensions","newState","_setState","acceptScrollDimensions","getFutureScrollPosition","getCurrentScrollPosition","setScrollPositionNow","setScrollPositionSmooth","validTarget","newSmoothScrolling","combine","SmoothScrollingOperation","animationFrameDisposable","_performSmoothScrolling","tick","isDone","oldState","fire","SmoothScrollingUpdate","createEaseOutCubic","delta","completion","easeOutCubic","createComposed","cut","startTime","duration","_startTime","_initAnimations","_initAnimation","viewportSize","stop1","stop2","state","_tick","Date","now","newScrollLeft","newScrollTop","easeInCubic","t","pow","text","revive","obj","depth","$mid","flags","clamp","__marked_exports","block","newline","fences","noop","hr","heading","nptable","blockquote","list","def","table","lheading","paragraph","Lexer","tokens","links","marked","defaults","rules","normal","pedantic","gfm","tables","_label","_title","edit","getRegex","bullet","_tag","_comment","merge","lex","src","lexer","token","top","loose","cap","bull","listStart","listItems","space","tag","isordered","istask","ischecked","lang","header","splitCells","align","cells","ordered","smartLists","task","checked","sanitize","pre","sanitizer","href","title","inline","autolink","url","link","reflink","nolink","strong","em","br","del","InlineLexer","renderer","Renderer","breaks","TextRenderer","Parser","slugger","Slugger","seen","encode","escapeTest","escapeReplace","replacements","escapeTestNoEncode","escapeReplaceNoEncode","unescape","_","regex","opt","cleanUrl","prot","decodeURIComponent","originIndependentUrl","resolveUrl","encodeURI","baseUrls","_punctuation","_escapes","_scheme","_email","_attribute","_href","_extended_email","_backpedal","output","prevCapZero","inLink","inRawBlock","lastParenIndex","findClosingBracket","linkLen","outputLink","escapes","codespan","mangle","smartypants","image","random","infostring","escaped","highlight","langPrefix","quote","level","raw","headerIds","headerPrefix","slug","xhtml","body","startatt","listitem","checkbox","tablerow","content","tablecell","baseUrl","parser","inlineText","tok","pop","parseText","row","cell","errMsg","silent","console","log","originalSlug","tableRow","curr","c","invert","suffLen","currChar","pending","done","err","message","setOptions","getDefaults","inlineLexer","Severity","_error","_warning","_warn","_info","_displayStrings","fromValue","Warning","Info","Ignore","DataUri","__spreadArrays","il","k","jl","hasToIgnoreCase","scheme","file","basenameOrAuthority","authority","isEqualAuthority","a1","a2","isEqual","first","second","p1","p2","originalFSPath","error","with","joinPath","_a","joinedPath","pathFragment","apply","normalizePath","normalizedPath","uri","uriPath","relativePath","relativePath_1","fromPath","toPath","parseMetaData","dataUri","metadata","meta","property","mime","META_DATA_MIME","META_DATA_LABEL","META_DATA_DESCRIPTION","META_DATA_SIZE","Range","intersect","one","isEmpty","range","intersects","relativeComplement","deepClone","isArray","deepFreeze","stack","obj_1","shift","freeze","_hasOwnProperty","prop","isFrozen","cloneAndChange","changer","_cloneAndChange","Set","changed","r1","obj_2","has","add","r2","i2","mixin","destination","overwrite","assign","sources","oneKeys","sort","otherKeys","getOrDefault","fn","defaultValue","Schemas","inMemory","vscode","internal","walkThrough","walkThroughSnippet","http","https","mailto","untitled","command","vscodeRemote","vscodeRemoteResource","userData","RemoteAuthoritiesImpl","_hosts","_ports","_connectionTokens","_preferredWebSchema","_delegate","setPreferredWebSchema","schema","rewrite","host","port","connectionToken","query","RemoteAuthorities","MIME_TEXT","MIME_UNKNOWN","registeredAssociations","nonUserRegisteredAssociations","userRegisteredAssociations","registerTextMime","association","warnOnOverwrite","associationItem","toTextMimeAssociationItem","userConfigured","extension","warn","filename","filepattern","firstline","filenameLowercase","extensionLowercase","filepatternLowercase","filepatternOnPath","guessMimeTypes","firstLine","fsPath","configuredMime","guessMimeTypeByPath","registeredMime","firstlineMime","guessMimeTypeByFirstline","associations","filenameMatch","patternMatch","extensionMatch","safeProcess","cwd","env","hasPerformanceNow","performance","StopWatch","highResolution","_highResolution","_now","_stopTime","stop","elapsed","getTime","_typeof","number","string","object","function","array","isString","isObject","isNumber","Number","isBoolean","isUndefined","isUndefinedOrNull","assertType","condition","isEmptyObject","isFunction","validateConstraints","constraints","validateConstraint","constraint","getAllPropertyNames","proto","getPrototypeOf","concat","getOwnPropertyNames","getAllMethodNames","methods","createProxyObject","methodNames","invoke","createProxyMethod","method","methodNames_1","methodName","withNullAsUndefined","withUndefinedAsNull"],"mappings":"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","file":"js/chunk-vendors~c01cf258.63b29080.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from './strings.js';\r\nexport function buildReplaceStringWithCasePreserved(matches, pattern) {\r\n    if (matches && (matches[0] !== '')) {\r\n        var containsHyphens = validateSpecificSpecialCharacter(matches, pattern, '-');\r\n        var containsUnderscores = validateSpecificSpecialCharacter(matches, pattern, '_');\r\n        if (containsHyphens && !containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '-');\r\n        }\r\n        else if (!containsHyphens && containsUnderscores) {\r\n            return buildReplaceStringForSpecificSpecialCharacter(matches, pattern, '_');\r\n        }\r\n        if (matches[0].toUpperCase() === matches[0]) {\r\n            return pattern.toUpperCase();\r\n        }\r\n        else if (matches[0].toLowerCase() === matches[0]) {\r\n            return pattern.toLowerCase();\r\n        }\r\n        else if (strings.containsUppercaseCharacter(matches[0][0])) {\r\n            return pattern[0].toUpperCase() + pattern.substr(1);\r\n        }\r\n        else {\r\n            // we don't understand its pattern yet.\r\n            return pattern;\r\n        }\r\n    }\r\n    else {\r\n        return pattern;\r\n    }\r\n}\r\nfunction validateSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    var doesContainSpecialCharacter = matches[0].indexOf(specialCharacter) !== -1 && pattern.indexOf(specialCharacter) !== -1;\r\n    return doesContainSpecialCharacter && matches[0].split(specialCharacter).length === pattern.split(specialCharacter).length;\r\n}\r\nfunction buildReplaceStringForSpecificSpecialCharacter(matches, pattern, specialCharacter) {\r\n    var splitPatternAtSpecialCharacter = pattern.split(specialCharacter);\r\n    var splitMatchAtSpecialCharacter = matches[0].split(specialCharacter);\r\n    var replaceString = '';\r\n    splitPatternAtSpecialCharacter.forEach(function (splitValue, index) {\r\n        replaceString += buildReplaceStringWithCasePreserved([splitMatchAtSpecialCharacter[index]], splitValue) + specialCharacter;\r\n    });\r\n    return replaceString.slice(0, -1);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar LANGUAGE_DEFAULT = 'en';\r\nvar _isWindows = false;\r\nvar _isMacintosh = false;\r\nvar _isLinux = false;\r\nvar _isNative = false;\r\nvar _isWeb = false;\r\nvar _isIOS = false;\r\nvar _locale = undefined;\r\nvar _language = LANGUAGE_DEFAULT;\r\nvar _translationsConfigFile = undefined;\r\nvar _userAgent = undefined;\r\nvar isElectronRenderer = (typeof process !== 'undefined' && typeof process.versions !== 'undefined' && typeof process.versions.electron !== 'undefined' && process.type === 'renderer');\r\n// OS detection\r\nif (typeof navigator === 'object' && !isElectronRenderer) {\r\n    _userAgent = navigator.userAgent;\r\n    _isWindows = _userAgent.indexOf('Windows') >= 0;\r\n    _isMacintosh = _userAgent.indexOf('Macintosh') >= 0;\r\n    _isIOS = _userAgent.indexOf('Macintosh') >= 0 && !!navigator.maxTouchPoints && navigator.maxTouchPoints > 0;\r\n    _isLinux = _userAgent.indexOf('Linux') >= 0;\r\n    _isWeb = true;\r\n    _locale = navigator.language;\r\n    _language = _locale;\r\n}\r\nelse if (typeof process === 'object') {\r\n    _isWindows = (process.platform === 'win32');\r\n    _isMacintosh = (process.platform === 'darwin');\r\n    _isLinux = (process.platform === 'linux');\r\n    _locale = LANGUAGE_DEFAULT;\r\n    _language = LANGUAGE_DEFAULT;\r\n    var rawNlsConfig = process.env['VSCODE_NLS_CONFIG'];\r\n    if (rawNlsConfig) {\r\n        try {\r\n            var nlsConfig = JSON.parse(rawNlsConfig);\r\n            var resolved = nlsConfig.availableLanguages['*'];\r\n            _locale = nlsConfig.locale;\r\n            // VSCode's default language is 'en'\r\n            _language = resolved ? resolved : LANGUAGE_DEFAULT;\r\n            _translationsConfigFile = nlsConfig._translationsConfigFile;\r\n        }\r\n        catch (e) {\r\n        }\r\n    }\r\n    _isNative = true;\r\n}\r\nvar _platform = 0 /* Web */;\r\nif (_isMacintosh) {\r\n    _platform = 1 /* Mac */;\r\n}\r\nelse if (_isWindows) {\r\n    _platform = 3 /* Windows */;\r\n}\r\nelse if (_isLinux) {\r\n    _platform = 2 /* Linux */;\r\n}\r\nexport var isWindows = _isWindows;\r\nexport var isMacintosh = _isMacintosh;\r\nexport var isLinux = _isLinux;\r\nexport var isNative = _isNative;\r\nexport var isWeb = _isWeb;\r\nexport var isIOS = _isIOS;\r\nvar _globals = (typeof self === 'object' ? self : typeof global === 'object' ? global : {});\r\nexport var globals = _globals;\r\nexport var setImmediate = (function defineSetImmediate() {\r\n    if (globals.setImmediate) {\r\n        return globals.setImmediate.bind(globals);\r\n    }\r\n    if (typeof globals.postMessage === 'function' && !globals.importScripts) {\r\n        var pending_1 = [];\r\n        globals.addEventListener('message', function (e) {\r\n            if (e.data && e.data.vscodeSetImmediateId) {\r\n                for (var i = 0, len = pending_1.length; i < len; i++) {\r\n                    var candidate = pending_1[i];\r\n                    if (candidate.id === e.data.vscodeSetImmediateId) {\r\n                        pending_1.splice(i, 1);\r\n                        candidate.callback();\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        var lastId_1 = 0;\r\n        return function (callback) {\r\n            var myId = ++lastId_1;\r\n            pending_1.push({\r\n                id: myId,\r\n                callback: callback\r\n            });\r\n            globals.postMessage({ vscodeSetImmediateId: myId }, '*');\r\n        };\r\n    }\r\n    if (typeof process !== 'undefined' && typeof process.nextTick === 'function') {\r\n        return process.nextTick.bind(process);\r\n    }\r\n    var _promise = Promise.resolve();\r\n    return function (callback) { return _promise.then(callback); };\r\n})();\r\nexport var OS = (_isMacintosh ? 2 /* Macintosh */ : (_isWindows ? 1 /* Windows */ : 3 /* Linux */));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\n// NOTE: VSCode's copy of nodejs path library to be usable in common (non-node) namespace\r\n// Copied from: https://github.com/nodejs/node/tree/43dd49c9782848c25e5b03448c8a0f923f13c158\r\n/**\r\n * Copyright Joyent, Inc. and other Node contributors.\r\n *\r\n * Permission is hereby granted, free of charge, to any person obtaining a\r\n * copy of this software and associated documentation files (the\r\n * \"Software\"), to deal in the Software without restriction, including\r\n * without limitation the rights to use, copy, modify, merge, publish,\r\n * distribute, sublicense, and/or sell copies of the Software, and to permit\r\n * persons to whom the Software is furnished to do so, subject to the\r\n * following conditions:\r\n *\r\n * The above copyright notice and this permission notice shall be included\r\n * in all copies or substantial portions of the Software.\r\n *\r\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\r\n * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\r\n * NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\r\n * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\r\n * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\r\n * USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n */\r\nimport * as process from './process.js';\r\nvar CHAR_UPPERCASE_A = 65; /* A */\r\nvar CHAR_LOWERCASE_A = 97; /* a */\r\nvar CHAR_UPPERCASE_Z = 90; /* Z */\r\nvar CHAR_LOWERCASE_Z = 122; /* z */\r\nvar CHAR_DOT = 46; /* . */\r\nvar CHAR_FORWARD_SLASH = 47; /* / */\r\nvar CHAR_BACKWARD_SLASH = 92; /* \\ */\r\nvar CHAR_COLON = 58; /* : */\r\nvar CHAR_QUESTION_MARK = 63; /* ? */\r\nvar ErrorInvalidArgType = /** @class */ (function (_super) {\r\n    __extends(ErrorInvalidArgType, _super);\r\n    function ErrorInvalidArgType(name, expected, actual) {\r\n        var _this = this;\r\n        // determiner: 'must be' or 'must not be'\r\n        var determiner;\r\n        if (typeof expected === 'string' && expected.indexOf('not ') === 0) {\r\n            determiner = 'must not be';\r\n            expected = expected.replace(/^not /, '');\r\n        }\r\n        else {\r\n            determiner = 'must be';\r\n        }\r\n        var type = name.indexOf('.') !== -1 ? 'property' : 'argument';\r\n        var msg = \"The \\\"\" + name + \"\\\" \" + type + \" \" + determiner + \" of type \" + expected;\r\n        msg += \". Received type \" + typeof actual;\r\n        _this = _super.call(this, msg) || this;\r\n        _this.code = 'ERR_INVALID_ARG_TYPE';\r\n        return _this;\r\n    }\r\n    return ErrorInvalidArgType;\r\n}(Error));\r\nfunction validateString(value, name) {\r\n    if (typeof value !== 'string') {\r\n        throw new ErrorInvalidArgType(name, 'string', value);\r\n    }\r\n}\r\nfunction isPathSeparator(code) {\r\n    return code === CHAR_FORWARD_SLASH || code === CHAR_BACKWARD_SLASH;\r\n}\r\nfunction isPosixPathSeparator(code) {\r\n    return code === CHAR_FORWARD_SLASH;\r\n}\r\nfunction isWindowsDeviceRoot(code) {\r\n    return code >= CHAR_UPPERCASE_A && code <= CHAR_UPPERCASE_Z ||\r\n        code >= CHAR_LOWERCASE_A && code <= CHAR_LOWERCASE_Z;\r\n}\r\n// Resolves . and .. elements in a path with directory names\r\nfunction normalizeString(path, allowAboveRoot, separator, isPathSeparator) {\r\n    var res = '';\r\n    var lastSegmentLength = 0;\r\n    var lastSlash = -1;\r\n    var dots = 0;\r\n    var code;\r\n    for (var i = 0; i <= path.length; ++i) {\r\n        if (i < path.length) {\r\n            code = path.charCodeAt(i);\r\n        }\r\n        else if (isPathSeparator(code)) {\r\n            break;\r\n        }\r\n        else {\r\n            code = CHAR_FORWARD_SLASH;\r\n        }\r\n        if (isPathSeparator(code)) {\r\n            if (lastSlash === i - 1 || dots === 1) {\r\n                // NOOP\r\n            }\r\n            else if (lastSlash !== i - 1 && dots === 2) {\r\n                if (res.length < 2 || lastSegmentLength !== 2 ||\r\n                    res.charCodeAt(res.length - 1) !== CHAR_DOT ||\r\n                    res.charCodeAt(res.length - 2) !== CHAR_DOT) {\r\n                    if (res.length > 2) {\r\n                        var lastSlashIndex = res.lastIndexOf(separator);\r\n                        if (lastSlashIndex === -1) {\r\n                            res = '';\r\n                            lastSegmentLength = 0;\r\n                        }\r\n                        else {\r\n                            res = res.slice(0, lastSlashIndex);\r\n                            lastSegmentLength = res.length - 1 - res.lastIndexOf(separator);\r\n                        }\r\n                        lastSlash = i;\r\n                        dots = 0;\r\n                        continue;\r\n                    }\r\n                    else if (res.length === 2 || res.length === 1) {\r\n                        res = '';\r\n                        lastSegmentLength = 0;\r\n                        lastSlash = i;\r\n                        dots = 0;\r\n                        continue;\r\n                    }\r\n                }\r\n                if (allowAboveRoot) {\r\n                    if (res.length > 0) {\r\n                        res += separator + \"..\";\r\n                    }\r\n                    else {\r\n                        res = '..';\r\n                    }\r\n                    lastSegmentLength = 2;\r\n                }\r\n            }\r\n            else {\r\n                if (res.length > 0) {\r\n                    res += separator + path.slice(lastSlash + 1, i);\r\n                }\r\n                else {\r\n                    res = path.slice(lastSlash + 1, i);\r\n                }\r\n                lastSegmentLength = i - lastSlash - 1;\r\n            }\r\n            lastSlash = i;\r\n            dots = 0;\r\n        }\r\n        else if (code === CHAR_DOT && dots !== -1) {\r\n            ++dots;\r\n        }\r\n        else {\r\n            dots = -1;\r\n        }\r\n    }\r\n    return res;\r\n}\r\nfunction _format(sep, pathObject) {\r\n    var dir = pathObject.dir || pathObject.root;\r\n    var base = pathObject.base ||\r\n        ((pathObject.name || '') + (pathObject.ext || ''));\r\n    if (!dir) {\r\n        return base;\r\n    }\r\n    if (dir === pathObject.root) {\r\n        return dir + base;\r\n    }\r\n    return dir + sep + base;\r\n}\r\nexport var win32 = {\r\n    // path.resolve([from ...], to)\r\n    resolve: function () {\r\n        var pathSegments = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            pathSegments[_i] = arguments[_i];\r\n        }\r\n        var resolvedDevice = '';\r\n        var resolvedTail = '';\r\n        var resolvedAbsolute = false;\r\n        for (var i = pathSegments.length - 1; i >= -1; i--) {\r\n            var path = void 0;\r\n            if (i >= 0) {\r\n                path = pathSegments[i];\r\n            }\r\n            else if (!resolvedDevice) {\r\n                path = process.cwd();\r\n            }\r\n            else {\r\n                // Windows has the concept of drive-specific current working\r\n                // directories. If we've resolved a drive letter but not yet an\r\n                // absolute path, get cwd for that drive, or the process cwd if\r\n                // the drive cwd is not available. We're sure the device is not\r\n                // a UNC path at this points, because UNC paths are always absolute.\r\n                path = process.env['=' + resolvedDevice] || process.cwd();\r\n                // Verify that a cwd was found and that it actually points\r\n                // to our drive. If not, default to the drive's root.\r\n                if (path === undefined ||\r\n                    path.slice(0, 3).toLowerCase() !==\r\n                        resolvedDevice.toLowerCase() + '\\\\') {\r\n                    path = resolvedDevice + '\\\\';\r\n                }\r\n            }\r\n            validateString(path, 'path');\r\n            // Skip empty entries\r\n            if (path.length === 0) {\r\n                continue;\r\n            }\r\n            var len = path.length;\r\n            var rootEnd = 0;\r\n            var device = '';\r\n            var isAbsolute = false;\r\n            var code = path.charCodeAt(0);\r\n            // Try to match a root\r\n            if (len > 1) {\r\n                if (isPathSeparator(code)) {\r\n                    // Possible UNC root\r\n                    // If we started with a separator, we know we at least have an\r\n                    // absolute path of some kind (UNC or otherwise)\r\n                    isAbsolute = true;\r\n                    if (isPathSeparator(path.charCodeAt(1))) {\r\n                        // Matched double path separator at beginning\r\n                        var j = 2;\r\n                        var last = j;\r\n                        // Match 1 or more non-path separators\r\n                        for (; j < len; ++j) {\r\n                            if (isPathSeparator(path.charCodeAt(j))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (j < len && j !== last) {\r\n                            var firstPart = path.slice(last, j);\r\n                            // Matched!\r\n                            last = j;\r\n                            // Match 1 or more path separators\r\n                            for (; j < len; ++j) {\r\n                                if (!isPathSeparator(path.charCodeAt(j))) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (j < len && j !== last) {\r\n                                // Matched!\r\n                                last = j;\r\n                                // Match 1 or more non-path separators\r\n                                for (; j < len; ++j) {\r\n                                    if (isPathSeparator(path.charCodeAt(j))) {\r\n                                        break;\r\n                                    }\r\n                                }\r\n                                if (j === len) {\r\n                                    // We matched a UNC root only\r\n                                    device = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last);\r\n                                    rootEnd = j;\r\n                                }\r\n                                else if (j !== last) {\r\n                                    // We matched a UNC root with leftovers\r\n                                    device = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\r\n                                    rootEnd = j;\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    else {\r\n                        rootEnd = 1;\r\n                    }\r\n                }\r\n                else if (isWindowsDeviceRoot(code)) {\r\n                    // Possible device root\r\n                    if (path.charCodeAt(1) === CHAR_COLON) {\r\n                        device = path.slice(0, 2);\r\n                        rootEnd = 2;\r\n                        if (len > 2) {\r\n                            if (isPathSeparator(path.charCodeAt(2))) {\r\n                                // Treat separator following drive name as an absolute path\r\n                                // indicator\r\n                                isAbsolute = true;\r\n                                rootEnd = 3;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (isPathSeparator(code)) {\r\n                // `path` contains just a path separator\r\n                rootEnd = 1;\r\n                isAbsolute = true;\r\n            }\r\n            if (device.length > 0 &&\r\n                resolvedDevice.length > 0 &&\r\n                device.toLowerCase() !== resolvedDevice.toLowerCase()) {\r\n                // This path points to another device so it is not applicable\r\n                continue;\r\n            }\r\n            if (resolvedDevice.length === 0 && device.length > 0) {\r\n                resolvedDevice = device;\r\n            }\r\n            if (!resolvedAbsolute) {\r\n                resolvedTail = path.slice(rootEnd) + '\\\\' + resolvedTail;\r\n                resolvedAbsolute = isAbsolute;\r\n            }\r\n            if (resolvedDevice.length > 0 && resolvedAbsolute) {\r\n                break;\r\n            }\r\n        }\r\n        // At this point the path should be resolved to a full absolute path,\r\n        // but handle relative paths to be safe (might happen when process.cwd()\r\n        // fails)\r\n        // Normalize the tail path\r\n        resolvedTail = normalizeString(resolvedTail, !resolvedAbsolute, '\\\\', isPathSeparator);\r\n        return (resolvedDevice + (resolvedAbsolute ? '\\\\' : '') + resolvedTail) ||\r\n            '.';\r\n    },\r\n    normalize: function (path) {\r\n        validateString(path, 'path');\r\n        var len = path.length;\r\n        if (len === 0) {\r\n            return '.';\r\n        }\r\n        var rootEnd = 0;\r\n        var device;\r\n        var isAbsolute = false;\r\n        var code = path.charCodeAt(0);\r\n        // Try to match a root\r\n        if (len > 1) {\r\n            if (isPathSeparator(code)) {\r\n                // Possible UNC root\r\n                // If we started with a separator, we know we at least have an absolute\r\n                // path of some kind (UNC or otherwise)\r\n                isAbsolute = true;\r\n                if (isPathSeparator(path.charCodeAt(1))) {\r\n                    // Matched double path separator at beginning\r\n                    var j = 2;\r\n                    var last = j;\r\n                    // Match 1 or more non-path separators\r\n                    for (; j < len; ++j) {\r\n                        if (isPathSeparator(path.charCodeAt(j))) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (j < len && j !== last) {\r\n                        var firstPart = path.slice(last, j);\r\n                        // Matched!\r\n                        last = j;\r\n                        // Match 1 or more path separators\r\n                        for (; j < len; ++j) {\r\n                            if (!isPathSeparator(path.charCodeAt(j))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (j < len && j !== last) {\r\n                            // Matched!\r\n                            last = j;\r\n                            // Match 1 or more non-path separators\r\n                            for (; j < len; ++j) {\r\n                                if (isPathSeparator(path.charCodeAt(j))) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (j === len) {\r\n                                // We matched a UNC root only\r\n                                // Return the normalized version of the UNC root since there\r\n                                // is nothing left to process\r\n                                return '\\\\\\\\' + firstPart + '\\\\' + path.slice(last) + '\\\\';\r\n                            }\r\n                            else if (j !== last) {\r\n                                // We matched a UNC root with leftovers\r\n                                device = '\\\\\\\\' + firstPart + '\\\\' + path.slice(last, j);\r\n                                rootEnd = j;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    rootEnd = 1;\r\n                }\r\n            }\r\n            else if (isWindowsDeviceRoot(code)) {\r\n                // Possible device root\r\n                if (path.charCodeAt(1) === CHAR_COLON) {\r\n                    device = path.slice(0, 2);\r\n                    rootEnd = 2;\r\n                    if (len > 2) {\r\n                        if (isPathSeparator(path.charCodeAt(2))) {\r\n                            // Treat separator following drive name as an absolute path\r\n                            // indicator\r\n                            isAbsolute = true;\r\n                            rootEnd = 3;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (isPathSeparator(code)) {\r\n            // `path` contains just a path separator, exit early to avoid unnecessary\r\n            // work\r\n            return '\\\\';\r\n        }\r\n        var tail;\r\n        if (rootEnd < len) {\r\n            tail = normalizeString(path.slice(rootEnd), !isAbsolute, '\\\\', isPathSeparator);\r\n        }\r\n        else {\r\n            tail = '';\r\n        }\r\n        if (tail.length === 0 && !isAbsolute) {\r\n            tail = '.';\r\n        }\r\n        if (tail.length > 0 && isPathSeparator(path.charCodeAt(len - 1))) {\r\n            tail += '\\\\';\r\n        }\r\n        if (device === undefined) {\r\n            if (isAbsolute) {\r\n                if (tail.length > 0) {\r\n                    return '\\\\' + tail;\r\n                }\r\n                else {\r\n                    return '\\\\';\r\n                }\r\n            }\r\n            else if (tail.length > 0) {\r\n                return tail;\r\n            }\r\n            else {\r\n                return '';\r\n            }\r\n        }\r\n        else if (isAbsolute) {\r\n            if (tail.length > 0) {\r\n                return device + '\\\\' + tail;\r\n            }\r\n            else {\r\n                return device + '\\\\';\r\n            }\r\n        }\r\n        else if (tail.length > 0) {\r\n            return device + tail;\r\n        }\r\n        else {\r\n            return device;\r\n        }\r\n    },\r\n    isAbsolute: function (path) {\r\n        validateString(path, 'path');\r\n        var len = path.length;\r\n        if (len === 0) {\r\n            return false;\r\n        }\r\n        var code = path.charCodeAt(0);\r\n        if (isPathSeparator(code)) {\r\n            return true;\r\n        }\r\n        else if (isWindowsDeviceRoot(code)) {\r\n            // Possible device root\r\n            if (len > 2 && path.charCodeAt(1) === CHAR_COLON) {\r\n                if (isPathSeparator(path.charCodeAt(2))) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    },\r\n    join: function () {\r\n        var paths = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            paths[_i] = arguments[_i];\r\n        }\r\n        if (paths.length === 0) {\r\n            return '.';\r\n        }\r\n        var joined;\r\n        var firstPart;\r\n        for (var i = 0; i < paths.length; ++i) {\r\n            var arg = paths[i];\r\n            validateString(arg, 'path');\r\n            if (arg.length > 0) {\r\n                if (joined === undefined) {\r\n                    joined = firstPart = arg;\r\n                }\r\n                else {\r\n                    joined += '\\\\' + arg;\r\n                }\r\n            }\r\n        }\r\n        if (joined === undefined) {\r\n            return '.';\r\n        }\r\n        // Make sure that the joined path doesn't start with two slashes, because\r\n        // normalize() will mistake it for an UNC path then.\r\n        //\r\n        // This step is skipped when it is very clear that the user actually\r\n        // intended to point at an UNC path. This is assumed when the first\r\n        // non-empty string arguments starts with exactly two slashes followed by\r\n        // at least one more non-slash character.\r\n        //\r\n        // Note that for normalize() to treat a path as an UNC path it needs to\r\n        // have at least 2 components, so we don't filter for that here.\r\n        // This means that the user can use join to construct UNC paths from\r\n        // a server name and a share name; for example:\r\n        //   path.join('//server', 'share') -> '\\\\\\\\server\\\\share\\\\')\r\n        var needsReplace = true;\r\n        var slashCount = 0;\r\n        if (typeof firstPart === 'string' && isPathSeparator(firstPart.charCodeAt(0))) {\r\n            ++slashCount;\r\n            var firstLen = firstPart.length;\r\n            if (firstLen > 1) {\r\n                if (isPathSeparator(firstPart.charCodeAt(1))) {\r\n                    ++slashCount;\r\n                    if (firstLen > 2) {\r\n                        if (isPathSeparator(firstPart.charCodeAt(2))) {\r\n                            ++slashCount;\r\n                        }\r\n                        else {\r\n                            // We matched a UNC path in the first part\r\n                            needsReplace = false;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (needsReplace) {\r\n            // Find any more consecutive slashes we need to replace\r\n            for (; slashCount < joined.length; ++slashCount) {\r\n                if (!isPathSeparator(joined.charCodeAt(slashCount))) {\r\n                    break;\r\n                }\r\n            }\r\n            // Replace the slashes if needed\r\n            if (slashCount >= 2) {\r\n                joined = '\\\\' + joined.slice(slashCount);\r\n            }\r\n        }\r\n        return win32.normalize(joined);\r\n    },\r\n    // It will solve the relative path from `from` to `to`, for instance:\r\n    //  from = 'C:\\\\orandea\\\\test\\\\aaa'\r\n    //  to = 'C:\\\\orandea\\\\impl\\\\bbb'\r\n    // The output of the function should be: '..\\\\..\\\\impl\\\\bbb'\r\n    relative: function (from, to) {\r\n        validateString(from, 'from');\r\n        validateString(to, 'to');\r\n        if (from === to) {\r\n            return '';\r\n        }\r\n        var fromOrig = win32.resolve(from);\r\n        var toOrig = win32.resolve(to);\r\n        if (fromOrig === toOrig) {\r\n            return '';\r\n        }\r\n        from = fromOrig.toLowerCase();\r\n        to = toOrig.toLowerCase();\r\n        if (from === to) {\r\n            return '';\r\n        }\r\n        // Trim any leading backslashes\r\n        var fromStart = 0;\r\n        for (; fromStart < from.length; ++fromStart) {\r\n            if (from.charCodeAt(fromStart) !== CHAR_BACKWARD_SLASH) {\r\n                break;\r\n            }\r\n        }\r\n        // Trim trailing backslashes (applicable to UNC paths only)\r\n        var fromEnd = from.length;\r\n        for (; fromEnd - 1 > fromStart; --fromEnd) {\r\n            if (from.charCodeAt(fromEnd - 1) !== CHAR_BACKWARD_SLASH) {\r\n                break;\r\n            }\r\n        }\r\n        var fromLen = (fromEnd - fromStart);\r\n        // Trim any leading backslashes\r\n        var toStart = 0;\r\n        for (; toStart < to.length; ++toStart) {\r\n            if (to.charCodeAt(toStart) !== CHAR_BACKWARD_SLASH) {\r\n                break;\r\n            }\r\n        }\r\n        // Trim trailing backslashes (applicable to UNC paths only)\r\n        var toEnd = to.length;\r\n        for (; toEnd - 1 > toStart; --toEnd) {\r\n            if (to.charCodeAt(toEnd - 1) !== CHAR_BACKWARD_SLASH) {\r\n                break;\r\n            }\r\n        }\r\n        var toLen = (toEnd - toStart);\r\n        // Compare paths to find the longest common path from root\r\n        var length = (fromLen < toLen ? fromLen : toLen);\r\n        var lastCommonSep = -1;\r\n        var i = 0;\r\n        for (; i <= length; ++i) {\r\n            if (i === length) {\r\n                if (toLen > length) {\r\n                    if (to.charCodeAt(toStart + i) === CHAR_BACKWARD_SLASH) {\r\n                        // We get here if `from` is the exact base path for `to`.\r\n                        // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo\\\\bar\\\\baz'\r\n                        return toOrig.slice(toStart + i + 1);\r\n                    }\r\n                    else if (i === 2) {\r\n                        // We get here if `from` is the device root.\r\n                        // For example: from='C:\\\\'; to='C:\\\\foo'\r\n                        return toOrig.slice(toStart + i);\r\n                    }\r\n                }\r\n                if (fromLen > length) {\r\n                    if (from.charCodeAt(fromStart + i) === CHAR_BACKWARD_SLASH) {\r\n                        // We get here if `to` is the exact base path for `from`.\r\n                        // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\foo'\r\n                        lastCommonSep = i;\r\n                    }\r\n                    else if (i === 2) {\r\n                        // We get here if `to` is the device root.\r\n                        // For example: from='C:\\\\foo\\\\bar'; to='C:\\\\'\r\n                        lastCommonSep = 3;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            var fromCode = from.charCodeAt(fromStart + i);\r\n            var toCode = to.charCodeAt(toStart + i);\r\n            if (fromCode !== toCode) {\r\n                break;\r\n            }\r\n            else if (fromCode === CHAR_BACKWARD_SLASH) {\r\n                lastCommonSep = i;\r\n            }\r\n        }\r\n        // We found a mismatch before the first common path separator was seen, so\r\n        // return the original `to`.\r\n        if (i !== length && lastCommonSep === -1) {\r\n            return toOrig;\r\n        }\r\n        var out = '';\r\n        if (lastCommonSep === -1) {\r\n            lastCommonSep = 0;\r\n        }\r\n        // Generate the relative path based on the path difference between `to` and\r\n        // `from`\r\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\r\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_BACKWARD_SLASH) {\r\n                if (out.length === 0) {\r\n                    out += '..';\r\n                }\r\n                else {\r\n                    out += '\\\\..';\r\n                }\r\n            }\r\n        }\r\n        // Lastly, append the rest of the destination (`to`) path that comes after\r\n        // the common path parts\r\n        if (out.length > 0) {\r\n            return out + toOrig.slice(toStart + lastCommonSep, toEnd);\r\n        }\r\n        else {\r\n            toStart += lastCommonSep;\r\n            if (toOrig.charCodeAt(toStart) === CHAR_BACKWARD_SLASH) {\r\n                ++toStart;\r\n            }\r\n            return toOrig.slice(toStart, toEnd);\r\n        }\r\n    },\r\n    toNamespacedPath: function (path) {\r\n        // Note: this will *probably* throw somewhere.\r\n        if (typeof path !== 'string') {\r\n            return path;\r\n        }\r\n        if (path.length === 0) {\r\n            return '';\r\n        }\r\n        var resolvedPath = win32.resolve(path);\r\n        if (resolvedPath.length >= 3) {\r\n            if (resolvedPath.charCodeAt(0) === CHAR_BACKWARD_SLASH) {\r\n                // Possible UNC root\r\n                if (resolvedPath.charCodeAt(1) === CHAR_BACKWARD_SLASH) {\r\n                    var code = resolvedPath.charCodeAt(2);\r\n                    if (code !== CHAR_QUESTION_MARK && code !== CHAR_DOT) {\r\n                        // Matched non-long UNC root, convert the path to a long UNC path\r\n                        return '\\\\\\\\?\\\\UNC\\\\' + resolvedPath.slice(2);\r\n                    }\r\n                }\r\n            }\r\n            else if (isWindowsDeviceRoot(resolvedPath.charCodeAt(0))) {\r\n                // Possible device root\r\n                if (resolvedPath.charCodeAt(1) === CHAR_COLON &&\r\n                    resolvedPath.charCodeAt(2) === CHAR_BACKWARD_SLASH) {\r\n                    // Matched device root, convert the path to a long UNC path\r\n                    return '\\\\\\\\?\\\\' + resolvedPath;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    },\r\n    dirname: function (path) {\r\n        validateString(path, 'path');\r\n        var len = path.length;\r\n        if (len === 0) {\r\n            return '.';\r\n        }\r\n        var rootEnd = -1;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var offset = 0;\r\n        var code = path.charCodeAt(0);\r\n        // Try to match a root\r\n        if (len > 1) {\r\n            if (isPathSeparator(code)) {\r\n                // Possible UNC root\r\n                rootEnd = offset = 1;\r\n                if (isPathSeparator(path.charCodeAt(1))) {\r\n                    // Matched double path separator at beginning\r\n                    var j = 2;\r\n                    var last = j;\r\n                    // Match 1 or more non-path separators\r\n                    for (; j < len; ++j) {\r\n                        if (isPathSeparator(path.charCodeAt(j))) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (j < len && j !== last) {\r\n                        // Matched!\r\n                        last = j;\r\n                        // Match 1 or more path separators\r\n                        for (; j < len; ++j) {\r\n                            if (!isPathSeparator(path.charCodeAt(j))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (j < len && j !== last) {\r\n                            // Matched!\r\n                            last = j;\r\n                            // Match 1 or more non-path separators\r\n                            for (; j < len; ++j) {\r\n                                if (isPathSeparator(path.charCodeAt(j))) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (j === len) {\r\n                                // We matched a UNC root only\r\n                                return path;\r\n                            }\r\n                            if (j !== last) {\r\n                                // We matched a UNC root with leftovers\r\n                                // Offset by 1 to include the separator after the UNC root to\r\n                                // treat it as a \"normal root\" on top of a (UNC) root\r\n                                rootEnd = offset = j + 1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (isWindowsDeviceRoot(code)) {\r\n                // Possible device root\r\n                if (path.charCodeAt(1) === CHAR_COLON) {\r\n                    rootEnd = offset = 2;\r\n                    if (len > 2) {\r\n                        if (isPathSeparator(path.charCodeAt(2))) {\r\n                            rootEnd = offset = 3;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (isPathSeparator(code)) {\r\n            // `path` contains just a path separator, exit early to avoid\r\n            // unnecessary work\r\n            return path;\r\n        }\r\n        for (var i = len - 1; i >= offset; --i) {\r\n            if (isPathSeparator(path.charCodeAt(i))) {\r\n                if (!matchedSlash) {\r\n                    end = i;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                // We saw the first non-path separator\r\n                matchedSlash = false;\r\n            }\r\n        }\r\n        if (end === -1) {\r\n            if (rootEnd === -1) {\r\n                return '.';\r\n            }\r\n            else {\r\n                end = rootEnd;\r\n            }\r\n        }\r\n        return path.slice(0, end);\r\n    },\r\n    basename: function (path, ext) {\r\n        if (ext !== undefined) {\r\n            validateString(ext, 'ext');\r\n        }\r\n        validateString(path, 'path');\r\n        var start = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var i;\r\n        // Check for a drive letter prefix so as not to mistake the following\r\n        // path separator as an extra separator at the end of the path that can be\r\n        // disregarded\r\n        if (path.length >= 2) {\r\n            var drive = path.charCodeAt(0);\r\n            if (isWindowsDeviceRoot(drive)) {\r\n                if (path.charCodeAt(1) === CHAR_COLON) {\r\n                    start = 2;\r\n                }\r\n            }\r\n        }\r\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\r\n            if (ext.length === path.length && ext === path) {\r\n                return '';\r\n            }\r\n            var extIdx = ext.length - 1;\r\n            var firstNonSlashEnd = -1;\r\n            for (i = path.length - 1; i >= start; --i) {\r\n                var code = path.charCodeAt(i);\r\n                if (isPathSeparator(code)) {\r\n                    // If we reached a path separator that was not part of a set of path\r\n                    // separators at the end of the string, stop now\r\n                    if (!matchedSlash) {\r\n                        start = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (firstNonSlashEnd === -1) {\r\n                        // We saw the first non-path separator, remember this index in case\r\n                        // we need it if the extension ends up not matching\r\n                        matchedSlash = false;\r\n                        firstNonSlashEnd = i + 1;\r\n                    }\r\n                    if (extIdx >= 0) {\r\n                        // Try to match the explicit extension\r\n                        if (code === ext.charCodeAt(extIdx)) {\r\n                            if (--extIdx === -1) {\r\n                                // We matched the extension, so mark this as the end of our path\r\n                                // component\r\n                                end = i;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Extension does not match, so our result is the entire path\r\n                            // component\r\n                            extIdx = -1;\r\n                            end = firstNonSlashEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (start === end) {\r\n                end = firstNonSlashEnd;\r\n            }\r\n            else if (end === -1) {\r\n                end = path.length;\r\n            }\r\n            return path.slice(start, end);\r\n        }\r\n        else {\r\n            for (i = path.length - 1; i >= start; --i) {\r\n                if (isPathSeparator(path.charCodeAt(i))) {\r\n                    // If we reached a path separator that was not part of a set of path\r\n                    // separators at the end of the string, stop now\r\n                    if (!matchedSlash) {\r\n                        start = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                else if (end === -1) {\r\n                    // We saw the first non-path separator, mark this as the end of our\r\n                    // path component\r\n                    matchedSlash = false;\r\n                    end = i + 1;\r\n                }\r\n            }\r\n            if (end === -1) {\r\n                return '';\r\n            }\r\n            return path.slice(start, end);\r\n        }\r\n    },\r\n    extname: function (path) {\r\n        validateString(path, 'path');\r\n        var start = 0;\r\n        var startDot = -1;\r\n        var startPart = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        // Track the state of characters (if any) we see before our first dot and\r\n        // after any path separator we find\r\n        var preDotState = 0;\r\n        // Check for a drive letter prefix so as not to mistake the following\r\n        // path separator as an extra separator at the end of the path that can be\r\n        // disregarded\r\n        if (path.length >= 2 &&\r\n            path.charCodeAt(1) === CHAR_COLON &&\r\n            isWindowsDeviceRoot(path.charCodeAt(0))) {\r\n            start = startPart = 2;\r\n        }\r\n        for (var i = path.length - 1; i >= start; --i) {\r\n            var code = path.charCodeAt(i);\r\n            if (isPathSeparator(code)) {\r\n                // If we reached a path separator that was not part of a set of path\r\n                // separators at the end of the string, stop now\r\n                if (!matchedSlash) {\r\n                    startPart = i + 1;\r\n                    break;\r\n                }\r\n                continue;\r\n            }\r\n            if (end === -1) {\r\n                // We saw the first non-path separator, mark this as the end of our\r\n                // extension\r\n                matchedSlash = false;\r\n                end = i + 1;\r\n            }\r\n            if (code === CHAR_DOT) {\r\n                // If this is our first dot, mark it as the start of our extension\r\n                if (startDot === -1) {\r\n                    startDot = i;\r\n                }\r\n                else if (preDotState !== 1) {\r\n                    preDotState = 1;\r\n                }\r\n            }\r\n            else if (startDot !== -1) {\r\n                // We saw a non-dot and non-path separator before our dot, so we should\r\n                // have a good chance at having a non-empty extension\r\n                preDotState = -1;\r\n            }\r\n        }\r\n        if (startDot === -1 ||\r\n            end === -1 ||\r\n            // We saw a non-dot character immediately before the dot\r\n            preDotState === 0 ||\r\n            // The (right-most) trimmed path component is exactly '..'\r\n            (preDotState === 1 &&\r\n                startDot === end - 1 &&\r\n                startDot === startPart + 1)) {\r\n            return '';\r\n        }\r\n        return path.slice(startDot, end);\r\n    },\r\n    format: function (pathObject) {\r\n        if (pathObject === null || typeof pathObject !== 'object') {\r\n            throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\r\n        }\r\n        return _format('\\\\', pathObject);\r\n    },\r\n    parse: function (path) {\r\n        validateString(path, 'path');\r\n        var ret = { root: '', dir: '', base: '', ext: '', name: '' };\r\n        if (path.length === 0) {\r\n            return ret;\r\n        }\r\n        var len = path.length;\r\n        var rootEnd = 0;\r\n        var code = path.charCodeAt(0);\r\n        // Try to match a root\r\n        if (len > 1) {\r\n            if (isPathSeparator(code)) {\r\n                // Possible UNC root\r\n                rootEnd = 1;\r\n                if (isPathSeparator(path.charCodeAt(1))) {\r\n                    // Matched double path separator at beginning\r\n                    var j = 2;\r\n                    var last = j;\r\n                    // Match 1 or more non-path separators\r\n                    for (; j < len; ++j) {\r\n                        if (isPathSeparator(path.charCodeAt(j))) {\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (j < len && j !== last) {\r\n                        // Matched!\r\n                        last = j;\r\n                        // Match 1 or more path separators\r\n                        for (; j < len; ++j) {\r\n                            if (!isPathSeparator(path.charCodeAt(j))) {\r\n                                break;\r\n                            }\r\n                        }\r\n                        if (j < len && j !== last) {\r\n                            // Matched!\r\n                            last = j;\r\n                            // Match 1 or more non-path separators\r\n                            for (; j < len; ++j) {\r\n                                if (isPathSeparator(path.charCodeAt(j))) {\r\n                                    break;\r\n                                }\r\n                            }\r\n                            if (j === len) {\r\n                                // We matched a UNC root only\r\n                                rootEnd = j;\r\n                            }\r\n                            else if (j !== last) {\r\n                                // We matched a UNC root with leftovers\r\n                                rootEnd = j + 1;\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            else if (isWindowsDeviceRoot(code)) {\r\n                // Possible device root\r\n                if (path.charCodeAt(1) === CHAR_COLON) {\r\n                    rootEnd = 2;\r\n                    if (len > 2) {\r\n                        if (isPathSeparator(path.charCodeAt(2))) {\r\n                            if (len === 3) {\r\n                                // `path` contains just a drive root, exit early to avoid\r\n                                // unnecessary work\r\n                                ret.root = ret.dir = path;\r\n                                return ret;\r\n                            }\r\n                            rootEnd = 3;\r\n                        }\r\n                    }\r\n                    else {\r\n                        // `path` contains just a drive root, exit early to avoid\r\n                        // unnecessary work\r\n                        ret.root = ret.dir = path;\r\n                        return ret;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        else if (isPathSeparator(code)) {\r\n            // `path` contains just a path separator, exit early to avoid\r\n            // unnecessary work\r\n            ret.root = ret.dir = path;\r\n            return ret;\r\n        }\r\n        if (rootEnd > 0) {\r\n            ret.root = path.slice(0, rootEnd);\r\n        }\r\n        var startDot = -1;\r\n        var startPart = rootEnd;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var i = path.length - 1;\r\n        // Track the state of characters (if any) we see before our first dot and\r\n        // after any path separator we find\r\n        var preDotState = 0;\r\n        // Get non-dir info\r\n        for (; i >= rootEnd; --i) {\r\n            code = path.charCodeAt(i);\r\n            if (isPathSeparator(code)) {\r\n                // If we reached a path separator that was not part of a set of path\r\n                // separators at the end of the string, stop now\r\n                if (!matchedSlash) {\r\n                    startPart = i + 1;\r\n                    break;\r\n                }\r\n                continue;\r\n            }\r\n            if (end === -1) {\r\n                // We saw the first non-path separator, mark this as the end of our\r\n                // extension\r\n                matchedSlash = false;\r\n                end = i + 1;\r\n            }\r\n            if (code === CHAR_DOT) {\r\n                // If this is our first dot, mark it as the start of our extension\r\n                if (startDot === -1) {\r\n                    startDot = i;\r\n                }\r\n                else if (preDotState !== 1) {\r\n                    preDotState = 1;\r\n                }\r\n            }\r\n            else if (startDot !== -1) {\r\n                // We saw a non-dot and non-path separator before our dot, so we should\r\n                // have a good chance at having a non-empty extension\r\n                preDotState = -1;\r\n            }\r\n        }\r\n        if (startDot === -1 ||\r\n            end === -1 ||\r\n            // We saw a non-dot character immediately before the dot\r\n            preDotState === 0 ||\r\n            // The (right-most) trimmed path component is exactly '..'\r\n            (preDotState === 1 &&\r\n                startDot === end - 1 &&\r\n                startDot === startPart + 1)) {\r\n            if (end !== -1) {\r\n                ret.base = ret.name = path.slice(startPart, end);\r\n            }\r\n        }\r\n        else {\r\n            ret.name = path.slice(startPart, startDot);\r\n            ret.base = path.slice(startPart, end);\r\n            ret.ext = path.slice(startDot, end);\r\n        }\r\n        // If the directory is the root, use the entire root as the `dir` including\r\n        // the trailing slash if any (`C:\\abc` -> `C:\\`). Otherwise, strip out the\r\n        // trailing slash (`C:\\abc\\def` -> `C:\\abc`).\r\n        if (startPart > 0 && startPart !== rootEnd) {\r\n            ret.dir = path.slice(0, startPart - 1);\r\n        }\r\n        else {\r\n            ret.dir = ret.root;\r\n        }\r\n        return ret;\r\n    },\r\n    sep: '\\\\',\r\n    delimiter: ';',\r\n    win32: null,\r\n    posix: null\r\n};\r\nexport var posix = {\r\n    // path.resolve([from ...], to)\r\n    resolve: function () {\r\n        var pathSegments = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            pathSegments[_i] = arguments[_i];\r\n        }\r\n        var resolvedPath = '';\r\n        var resolvedAbsolute = false;\r\n        for (var i = pathSegments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\r\n            var path = void 0;\r\n            if (i >= 0) {\r\n                path = pathSegments[i];\r\n            }\r\n            else {\r\n                path = process.cwd();\r\n            }\r\n            validateString(path, 'path');\r\n            // Skip empty entries\r\n            if (path.length === 0) {\r\n                continue;\r\n            }\r\n            resolvedPath = path + '/' + resolvedPath;\r\n            resolvedAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n        }\r\n        // At this point the path should be resolved to a full absolute path, but\r\n        // handle relative paths to be safe (might happen when process.cwd() fails)\r\n        // Normalize the path\r\n        resolvedPath = normalizeString(resolvedPath, !resolvedAbsolute, '/', isPosixPathSeparator);\r\n        if (resolvedAbsolute) {\r\n            if (resolvedPath.length > 0) {\r\n                return '/' + resolvedPath;\r\n            }\r\n            else {\r\n                return '/';\r\n            }\r\n        }\r\n        else if (resolvedPath.length > 0) {\r\n            return resolvedPath;\r\n        }\r\n        else {\r\n            return '.';\r\n        }\r\n    },\r\n    normalize: function (path) {\r\n        validateString(path, 'path');\r\n        if (path.length === 0) {\r\n            return '.';\r\n        }\r\n        var isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n        var trailingSeparator = path.charCodeAt(path.length - 1) === CHAR_FORWARD_SLASH;\r\n        // Normalize the path\r\n        path = normalizeString(path, !isAbsolute, '/', isPosixPathSeparator);\r\n        if (path.length === 0 && !isAbsolute) {\r\n            path = '.';\r\n        }\r\n        if (path.length > 0 && trailingSeparator) {\r\n            path += '/';\r\n        }\r\n        if (isAbsolute) {\r\n            return '/' + path;\r\n        }\r\n        return path;\r\n    },\r\n    isAbsolute: function (path) {\r\n        validateString(path, 'path');\r\n        return path.length > 0 && path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n    },\r\n    join: function () {\r\n        var paths = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            paths[_i] = arguments[_i];\r\n        }\r\n        if (paths.length === 0) {\r\n            return '.';\r\n        }\r\n        var joined;\r\n        for (var i = 0; i < paths.length; ++i) {\r\n            var arg = arguments[i];\r\n            validateString(arg, 'path');\r\n            if (arg.length > 0) {\r\n                if (joined === undefined) {\r\n                    joined = arg;\r\n                }\r\n                else {\r\n                    joined += '/' + arg;\r\n                }\r\n            }\r\n        }\r\n        if (joined === undefined) {\r\n            return '.';\r\n        }\r\n        return posix.normalize(joined);\r\n    },\r\n    relative: function (from, to) {\r\n        validateString(from, 'from');\r\n        validateString(to, 'to');\r\n        if (from === to) {\r\n            return '';\r\n        }\r\n        from = posix.resolve(from);\r\n        to = posix.resolve(to);\r\n        if (from === to) {\r\n            return '';\r\n        }\r\n        // Trim any leading backslashes\r\n        var fromStart = 1;\r\n        for (; fromStart < from.length; ++fromStart) {\r\n            if (from.charCodeAt(fromStart) !== CHAR_FORWARD_SLASH) {\r\n                break;\r\n            }\r\n        }\r\n        var fromEnd = from.length;\r\n        var fromLen = (fromEnd - fromStart);\r\n        // Trim any leading backslashes\r\n        var toStart = 1;\r\n        for (; toStart < to.length; ++toStart) {\r\n            if (to.charCodeAt(toStart) !== CHAR_FORWARD_SLASH) {\r\n                break;\r\n            }\r\n        }\r\n        var toEnd = to.length;\r\n        var toLen = (toEnd - toStart);\r\n        // Compare paths to find the longest common path from root\r\n        var length = (fromLen < toLen ? fromLen : toLen);\r\n        var lastCommonSep = -1;\r\n        var i = 0;\r\n        for (; i <= length; ++i) {\r\n            if (i === length) {\r\n                if (toLen > length) {\r\n                    if (to.charCodeAt(toStart + i) === CHAR_FORWARD_SLASH) {\r\n                        // We get here if `from` is the exact base path for `to`.\r\n                        // For example: from='/foo/bar'; to='/foo/bar/baz'\r\n                        return to.slice(toStart + i + 1);\r\n                    }\r\n                    else if (i === 0) {\r\n                        // We get here if `from` is the root\r\n                        // For example: from='/'; to='/foo'\r\n                        return to.slice(toStart + i);\r\n                    }\r\n                }\r\n                else if (fromLen > length) {\r\n                    if (from.charCodeAt(fromStart + i) === CHAR_FORWARD_SLASH) {\r\n                        // We get here if `to` is the exact base path for `from`.\r\n                        // For example: from='/foo/bar/baz'; to='/foo/bar'\r\n                        lastCommonSep = i;\r\n                    }\r\n                    else if (i === 0) {\r\n                        // We get here if `to` is the root.\r\n                        // For example: from='/foo'; to='/'\r\n                        lastCommonSep = 0;\r\n                    }\r\n                }\r\n                break;\r\n            }\r\n            var fromCode = from.charCodeAt(fromStart + i);\r\n            var toCode = to.charCodeAt(toStart + i);\r\n            if (fromCode !== toCode) {\r\n                break;\r\n            }\r\n            else if (fromCode === CHAR_FORWARD_SLASH) {\r\n                lastCommonSep = i;\r\n            }\r\n        }\r\n        var out = '';\r\n        // Generate the relative path based on the path difference between `to`\r\n        // and `from`\r\n        for (i = fromStart + lastCommonSep + 1; i <= fromEnd; ++i) {\r\n            if (i === fromEnd || from.charCodeAt(i) === CHAR_FORWARD_SLASH) {\r\n                if (out.length === 0) {\r\n                    out += '..';\r\n                }\r\n                else {\r\n                    out += '/..';\r\n                }\r\n            }\r\n        }\r\n        // Lastly, append the rest of the destination (`to`) path that comes after\r\n        // the common path parts\r\n        if (out.length > 0) {\r\n            return out + to.slice(toStart + lastCommonSep);\r\n        }\r\n        else {\r\n            toStart += lastCommonSep;\r\n            if (to.charCodeAt(toStart) === CHAR_FORWARD_SLASH) {\r\n                ++toStart;\r\n            }\r\n            return to.slice(toStart);\r\n        }\r\n    },\r\n    toNamespacedPath: function (path) {\r\n        // Non-op on posix systems\r\n        return path;\r\n    },\r\n    dirname: function (path) {\r\n        validateString(path, 'path');\r\n        if (path.length === 0) {\r\n            return '.';\r\n        }\r\n        var hasRoot = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        for (var i = path.length - 1; i >= 1; --i) {\r\n            if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\r\n                if (!matchedSlash) {\r\n                    end = i;\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                // We saw the first non-path separator\r\n                matchedSlash = false;\r\n            }\r\n        }\r\n        if (end === -1) {\r\n            return hasRoot ? '/' : '.';\r\n        }\r\n        if (hasRoot && end === 1) {\r\n            return '//';\r\n        }\r\n        return path.slice(0, end);\r\n    },\r\n    basename: function (path, ext) {\r\n        if (ext !== undefined) {\r\n            validateString(ext, 'ext');\r\n        }\r\n        validateString(path, 'path');\r\n        var start = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var i;\r\n        if (ext !== undefined && ext.length > 0 && ext.length <= path.length) {\r\n            if (ext.length === path.length && ext === path) {\r\n                return '';\r\n            }\r\n            var extIdx = ext.length - 1;\r\n            var firstNonSlashEnd = -1;\r\n            for (i = path.length - 1; i >= 0; --i) {\r\n                var code = path.charCodeAt(i);\r\n                if (code === CHAR_FORWARD_SLASH) {\r\n                    // If we reached a path separator that was not part of a set of path\r\n                    // separators at the end of the string, stop now\r\n                    if (!matchedSlash) {\r\n                        start = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                else {\r\n                    if (firstNonSlashEnd === -1) {\r\n                        // We saw the first non-path separator, remember this index in case\r\n                        // we need it if the extension ends up not matching\r\n                        matchedSlash = false;\r\n                        firstNonSlashEnd = i + 1;\r\n                    }\r\n                    if (extIdx >= 0) {\r\n                        // Try to match the explicit extension\r\n                        if (code === ext.charCodeAt(extIdx)) {\r\n                            if (--extIdx === -1) {\r\n                                // We matched the extension, so mark this as the end of our path\r\n                                // component\r\n                                end = i;\r\n                            }\r\n                        }\r\n                        else {\r\n                            // Extension does not match, so our result is the entire path\r\n                            // component\r\n                            extIdx = -1;\r\n                            end = firstNonSlashEnd;\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            if (start === end) {\r\n                end = firstNonSlashEnd;\r\n            }\r\n            else if (end === -1) {\r\n                end = path.length;\r\n            }\r\n            return path.slice(start, end);\r\n        }\r\n        else {\r\n            for (i = path.length - 1; i >= 0; --i) {\r\n                if (path.charCodeAt(i) === CHAR_FORWARD_SLASH) {\r\n                    // If we reached a path separator that was not part of a set of path\r\n                    // separators at the end of the string, stop now\r\n                    if (!matchedSlash) {\r\n                        start = i + 1;\r\n                        break;\r\n                    }\r\n                }\r\n                else if (end === -1) {\r\n                    // We saw the first non-path separator, mark this as the end of our\r\n                    // path component\r\n                    matchedSlash = false;\r\n                    end = i + 1;\r\n                }\r\n            }\r\n            if (end === -1) {\r\n                return '';\r\n            }\r\n            return path.slice(start, end);\r\n        }\r\n    },\r\n    extname: function (path) {\r\n        validateString(path, 'path');\r\n        var startDot = -1;\r\n        var startPart = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        // Track the state of characters (if any) we see before our first dot and\r\n        // after any path separator we find\r\n        var preDotState = 0;\r\n        for (var i = path.length - 1; i >= 0; --i) {\r\n            var code = path.charCodeAt(i);\r\n            if (code === CHAR_FORWARD_SLASH) {\r\n                // If we reached a path separator that was not part of a set of path\r\n                // separators at the end of the string, stop now\r\n                if (!matchedSlash) {\r\n                    startPart = i + 1;\r\n                    break;\r\n                }\r\n                continue;\r\n            }\r\n            if (end === -1) {\r\n                // We saw the first non-path separator, mark this as the end of our\r\n                // extension\r\n                matchedSlash = false;\r\n                end = i + 1;\r\n            }\r\n            if (code === CHAR_DOT) {\r\n                // If this is our first dot, mark it as the start of our extension\r\n                if (startDot === -1) {\r\n                    startDot = i;\r\n                }\r\n                else if (preDotState !== 1) {\r\n                    preDotState = 1;\r\n                }\r\n            }\r\n            else if (startDot !== -1) {\r\n                // We saw a non-dot and non-path separator before our dot, so we should\r\n                // have a good chance at having a non-empty extension\r\n                preDotState = -1;\r\n            }\r\n        }\r\n        if (startDot === -1 ||\r\n            end === -1 ||\r\n            // We saw a non-dot character immediately before the dot\r\n            preDotState === 0 ||\r\n            // The (right-most) trimmed path component is exactly '..'\r\n            (preDotState === 1 &&\r\n                startDot === end - 1 &&\r\n                startDot === startPart + 1)) {\r\n            return '';\r\n        }\r\n        return path.slice(startDot, end);\r\n    },\r\n    format: function (pathObject) {\r\n        if (pathObject === null || typeof pathObject !== 'object') {\r\n            throw new ErrorInvalidArgType('pathObject', 'Object', pathObject);\r\n        }\r\n        return _format('/', pathObject);\r\n    },\r\n    parse: function (path) {\r\n        validateString(path, 'path');\r\n        var ret = { root: '', dir: '', base: '', ext: '', name: '' };\r\n        if (path.length === 0) {\r\n            return ret;\r\n        }\r\n        var isAbsolute = path.charCodeAt(0) === CHAR_FORWARD_SLASH;\r\n        var start;\r\n        if (isAbsolute) {\r\n            ret.root = '/';\r\n            start = 1;\r\n        }\r\n        else {\r\n            start = 0;\r\n        }\r\n        var startDot = -1;\r\n        var startPart = 0;\r\n        var end = -1;\r\n        var matchedSlash = true;\r\n        var i = path.length - 1;\r\n        // Track the state of characters (if any) we see before our first dot and\r\n        // after any path separator we find\r\n        var preDotState = 0;\r\n        // Get non-dir info\r\n        for (; i >= start; --i) {\r\n            var code = path.charCodeAt(i);\r\n            if (code === CHAR_FORWARD_SLASH) {\r\n                // If we reached a path separator that was not part of a set of path\r\n                // separators at the end of the string, stop now\r\n                if (!matchedSlash) {\r\n                    startPart = i + 1;\r\n                    break;\r\n                }\r\n                continue;\r\n            }\r\n            if (end === -1) {\r\n                // We saw the first non-path separator, mark this as the end of our\r\n                // extension\r\n                matchedSlash = false;\r\n                end = i + 1;\r\n            }\r\n            if (code === CHAR_DOT) {\r\n                // If this is our first dot, mark it as the start of our extension\r\n                if (startDot === -1) {\r\n                    startDot = i;\r\n                }\r\n                else if (preDotState !== 1) {\r\n                    preDotState = 1;\r\n                }\r\n            }\r\n            else if (startDot !== -1) {\r\n                // We saw a non-dot and non-path separator before our dot, so we should\r\n                // have a good chance at having a non-empty extension\r\n                preDotState = -1;\r\n            }\r\n        }\r\n        if (startDot === -1 ||\r\n            end === -1 ||\r\n            // We saw a non-dot character immediately before the dot\r\n            preDotState === 0 ||\r\n            // The (right-most) trimmed path component is exactly '..'\r\n            (preDotState === 1 &&\r\n                startDot === end - 1 &&\r\n                startDot === startPart + 1)) {\r\n            if (end !== -1) {\r\n                if (startPart === 0 && isAbsolute) {\r\n                    ret.base = ret.name = path.slice(1, end);\r\n                }\r\n                else {\r\n                    ret.base = ret.name = path.slice(startPart, end);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            if (startPart === 0 && isAbsolute) {\r\n                ret.name = path.slice(1, startDot);\r\n                ret.base = path.slice(1, end);\r\n            }\r\n            else {\r\n                ret.name = path.slice(startPart, startDot);\r\n                ret.base = path.slice(startPart, end);\r\n            }\r\n            ret.ext = path.slice(startDot, end);\r\n        }\r\n        if (startPart > 0) {\r\n            ret.dir = path.slice(0, startPart - 1);\r\n        }\r\n        else if (isAbsolute) {\r\n            ret.dir = '/';\r\n        }\r\n        return ret;\r\n    },\r\n    sep: '/',\r\n    delimiter: ':',\r\n    win32: null,\r\n    posix: null\r\n};\r\nposix.win32 = win32.win32 = win32;\r\nposix.posix = win32.posix = posix;\r\nexport var normalize = (process.platform === 'win32' ? win32.normalize : posix.normalize);\r\nexport var join = (process.platform === 'win32' ? win32.join : posix.join);\r\nexport var relative = (process.platform === 'win32' ? win32.relative : posix.relative);\r\nexport var dirname = (process.platform === 'win32' ? win32.dirname : posix.dirname);\r\nexport var basename = (process.platform === 'win32' ? win32.basename : posix.basename);\r\nexport var extname = (process.platform === 'win32' ? win32.extname : posix.extname);\r\nexport var sep = (process.platform === 'win32' ? win32.sep : posix.sep);\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function isFalsyOrWhitespace(str) {\r\n    if (!str || typeof str !== 'string') {\r\n        return true;\r\n    }\r\n    return str.trim().length === 0;\r\n}\r\n/**\r\n * @returns the provided number with the given number of preceding zeros.\r\n */\r\nexport function pad(n, l, char) {\r\n    if (char === void 0) { char = '0'; }\r\n    var str = '' + n;\r\n    var r = [str];\r\n    for (var i = str.length; i < l; i++) {\r\n        r.push(char);\r\n    }\r\n    return r.reverse().join('');\r\n}\r\nvar _formatRegexp = /{(\\d+)}/g;\r\n/**\r\n * Helper to produce a string with a variable number of arguments. Insert variable segments\r\n * into the string using the {n} notation where N is the index of the argument following the string.\r\n * @param value string to which formatting is applied\r\n * @param args replacements for {n}-entries\r\n */\r\nexport function format(value) {\r\n    var args = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        args[_i - 1] = arguments[_i];\r\n    }\r\n    if (args.length === 0) {\r\n        return value;\r\n    }\r\n    return value.replace(_formatRegexp, function (match, group) {\r\n        var idx = parseInt(group, 10);\r\n        return isNaN(idx) || idx < 0 || idx >= args.length ?\r\n            match :\r\n            args[idx];\r\n    });\r\n}\r\n/**\r\n * Converts HTML characters inside the string to use entities instead. Makes the string safe from\r\n * being used e.g. in HTMLElement.innerHTML.\r\n */\r\nexport function escape(html) {\r\n    return html.replace(/[<>&]/g, function (match) {\r\n        switch (match) {\r\n            case '<': return '&lt;';\r\n            case '>': return '&gt;';\r\n            case '&': return '&amp;';\r\n            default: return match;\r\n        }\r\n    });\r\n}\r\n/**\r\n * Escapes regular expression characters in a given string\r\n */\r\nexport function escapeRegExpCharacters(value) {\r\n    return value.replace(/[\\\\\\{\\}\\*\\+\\?\\|\\^\\$\\.\\[\\]\\(\\)]/g, '\\\\$&');\r\n}\r\n/**\r\n * Removes all occurrences of needle from the beginning and end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim (default is a blank)\r\n */\r\nexport function trim(haystack, needle) {\r\n    if (needle === void 0) { needle = ' '; }\r\n    var trimmed = ltrim(haystack, needle);\r\n    return rtrim(trimmed, needle);\r\n}\r\n/**\r\n * Removes all occurrences of needle from the beginning of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function ltrim(haystack, needle) {\r\n    if (!haystack || !needle) {\r\n        return haystack;\r\n    }\r\n    var needleLen = needle.length;\r\n    if (needleLen === 0 || haystack.length === 0) {\r\n        return haystack;\r\n    }\r\n    var offset = 0;\r\n    while (haystack.indexOf(needle, offset) === offset) {\r\n        offset = offset + needleLen;\r\n    }\r\n    return haystack.substring(offset);\r\n}\r\n/**\r\n * Removes all occurrences of needle from the end of haystack.\r\n * @param haystack string to trim\r\n * @param needle the thing to trim\r\n */\r\nexport function rtrim(haystack, needle) {\r\n    if (!haystack || !needle) {\r\n        return haystack;\r\n    }\r\n    var needleLen = needle.length, haystackLen = haystack.length;\r\n    if (needleLen === 0 || haystackLen === 0) {\r\n        return haystack;\r\n    }\r\n    var offset = haystackLen, idx = -1;\r\n    while (true) {\r\n        idx = haystack.lastIndexOf(needle, offset - 1);\r\n        if (idx === -1 || idx + needleLen !== offset) {\r\n            break;\r\n        }\r\n        if (idx === 0) {\r\n            return '';\r\n        }\r\n        offset = idx;\r\n    }\r\n    return haystack.substring(0, offset);\r\n}\r\nexport function convertSimple2RegExpPattern(pattern) {\r\n    return pattern.replace(/[\\-\\\\\\{\\}\\+\\?\\|\\^\\$\\.\\,\\[\\]\\(\\)\\#\\s]/g, '\\\\$&').replace(/[\\*]/g, '.*');\r\n}\r\n/**\r\n * Determines if haystack starts with needle.\r\n */\r\nexport function startsWith(haystack, needle) {\r\n    if (haystack.length < needle.length) {\r\n        return false;\r\n    }\r\n    if (haystack === needle) {\r\n        return true;\r\n    }\r\n    for (var i = 0; i < needle.length; i++) {\r\n        if (haystack[i] !== needle[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Determines if haystack ends with needle.\r\n */\r\nexport function endsWith(haystack, needle) {\r\n    var diff = haystack.length - needle.length;\r\n    if (diff > 0) {\r\n        return haystack.indexOf(needle, diff) === diff;\r\n    }\r\n    else if (diff === 0) {\r\n        return haystack === needle;\r\n    }\r\n    else {\r\n        return false;\r\n    }\r\n}\r\nexport function createRegExp(searchString, isRegex, options) {\r\n    if (options === void 0) { options = {}; }\r\n    if (!searchString) {\r\n        throw new Error('Cannot create regex from empty string');\r\n    }\r\n    if (!isRegex) {\r\n        searchString = escapeRegExpCharacters(searchString);\r\n    }\r\n    if (options.wholeWord) {\r\n        if (!/\\B/.test(searchString.charAt(0))) {\r\n            searchString = '\\\\b' + searchString;\r\n        }\r\n        if (!/\\B/.test(searchString.charAt(searchString.length - 1))) {\r\n            searchString = searchString + '\\\\b';\r\n        }\r\n    }\r\n    var modifiers = '';\r\n    if (options.global) {\r\n        modifiers += 'g';\r\n    }\r\n    if (!options.matchCase) {\r\n        modifiers += 'i';\r\n    }\r\n    if (options.multiline) {\r\n        modifiers += 'm';\r\n    }\r\n    if (options.unicode) {\r\n        modifiers += 'u';\r\n    }\r\n    return new RegExp(searchString, modifiers);\r\n}\r\nexport function regExpLeadsToEndlessLoop(regexp) {\r\n    // Exit early if it's one of these special cases which are meant to match\r\n    // against an empty string\r\n    if (regexp.source === '^' || regexp.source === '^$' || regexp.source === '$' || regexp.source === '^\\\\s*$') {\r\n        return false;\r\n    }\r\n    // We check against an empty string. If the regular expression doesn't advance\r\n    // (e.g. ends in an endless loop) it will match an empty string.\r\n    var match = regexp.exec('');\r\n    return !!(match && regexp.lastIndex === 0);\r\n}\r\nexport function regExpFlags(regexp) {\r\n    return (regexp.global ? 'g' : '')\r\n        + (regexp.ignoreCase ? 'i' : '')\r\n        + (regexp.multiline ? 'm' : '')\r\n        + (regexp.unicode ? 'u' : '');\r\n}\r\n/**\r\n * Returns first index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function firstNonWhitespaceIndex(str) {\r\n    for (var i = 0, len = str.length; i < len; i++) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * Returns the leading whitespace of the string.\r\n * If the string contains only whitespaces, returns entire string\r\n */\r\nexport function getLeadingWhitespace(str, start, end) {\r\n    if (start === void 0) { start = 0; }\r\n    if (end === void 0) { end = str.length; }\r\n    for (var i = start; i < end; i++) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return str.substring(start, i);\r\n        }\r\n    }\r\n    return str.substring(start, end);\r\n}\r\n/**\r\n * Returns last index of the string that is not whitespace.\r\n * If string is empty or contains only whitespaces, returns -1\r\n */\r\nexport function lastNonWhitespaceIndex(str, startIndex) {\r\n    if (startIndex === void 0) { startIndex = str.length - 1; }\r\n    for (var i = startIndex; i >= 0; i--) {\r\n        var chCode = str.charCodeAt(i);\r\n        if (chCode !== 32 /* Space */ && chCode !== 9 /* Tab */) {\r\n            return i;\r\n        }\r\n    }\r\n    return -1;\r\n}\r\nexport function compare(a, b) {\r\n    if (a < b) {\r\n        return -1;\r\n    }\r\n    else if (a > b) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function compareIgnoreCase(a, b) {\r\n    var len = Math.min(a.length, b.length);\r\n    for (var i = 0; i < len; i++) {\r\n        var codeA = a.charCodeAt(i);\r\n        var codeB = b.charCodeAt(i);\r\n        if (codeA === codeB) {\r\n            // equal\r\n            continue;\r\n        }\r\n        if (isUpperAsciiLetter(codeA)) {\r\n            codeA += 32;\r\n        }\r\n        if (isUpperAsciiLetter(codeB)) {\r\n            codeB += 32;\r\n        }\r\n        var diff = codeA - codeB;\r\n        if (diff === 0) {\r\n            // equal -> ignoreCase\r\n            continue;\r\n        }\r\n        else if (isLowerAsciiLetter(codeA) && isLowerAsciiLetter(codeB)) {\r\n            //\r\n            return diff;\r\n        }\r\n        else {\r\n            return compare(a.toLowerCase(), b.toLowerCase());\r\n        }\r\n    }\r\n    if (a.length < b.length) {\r\n        return -1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return 1;\r\n    }\r\n    else {\r\n        return 0;\r\n    }\r\n}\r\nexport function isLowerAsciiLetter(code) {\r\n    return code >= 97 /* a */ && code <= 122 /* z */;\r\n}\r\nexport function isUpperAsciiLetter(code) {\r\n    return code >= 65 /* A */ && code <= 90 /* Z */;\r\n}\r\nfunction isAsciiLetter(code) {\r\n    return isLowerAsciiLetter(code) || isUpperAsciiLetter(code);\r\n}\r\nexport function equalsIgnoreCase(a, b) {\r\n    return a.length === b.length && doEqualsIgnoreCase(a, b);\r\n}\r\nfunction doEqualsIgnoreCase(a, b, stopAt) {\r\n    if (stopAt === void 0) { stopAt = a.length; }\r\n    for (var i = 0; i < stopAt; i++) {\r\n        var codeA = a.charCodeAt(i);\r\n        var codeB = b.charCodeAt(i);\r\n        if (codeA === codeB) {\r\n            continue;\r\n        }\r\n        // a-z A-Z\r\n        if (isAsciiLetter(codeA) && isAsciiLetter(codeB)) {\r\n            var diff = Math.abs(codeA - codeB);\r\n            if (diff !== 0 && diff !== 32) {\r\n                return false;\r\n            }\r\n        }\r\n        // Any other charcode\r\n        else {\r\n            if (String.fromCharCode(codeA).toLowerCase() !== String.fromCharCode(codeB).toLowerCase()) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function startsWithIgnoreCase(str, candidate) {\r\n    var candidateLength = candidate.length;\r\n    if (candidate.length > str.length) {\r\n        return false;\r\n    }\r\n    return doEqualsIgnoreCase(str, candidate, candidateLength);\r\n}\r\n/**\r\n * @returns the length of the common prefix of the two strings.\r\n */\r\nexport function commonPrefixLength(a, b) {\r\n    var i, len = Math.min(a.length, b.length);\r\n    for (i = 0; i < len; i++) {\r\n        if (a.charCodeAt(i) !== b.charCodeAt(i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n/**\r\n * @returns the length of the common suffix of the two strings.\r\n */\r\nexport function commonSuffixLength(a, b) {\r\n    var i, len = Math.min(a.length, b.length);\r\n    var aLastIndex = a.length - 1;\r\n    var bLastIndex = b.length - 1;\r\n    for (i = 0; i < len; i++) {\r\n        if (a.charCodeAt(aLastIndex - i) !== b.charCodeAt(bLastIndex - i)) {\r\n            return i;\r\n        }\r\n    }\r\n    return len;\r\n}\r\n// --- unicode\r\n// http://en.wikipedia.org/wiki/Surrogate_pair\r\n// Returns the code point starting at a specified index in a string\r\n// Code points U+0000 to U+D7FF and U+E000 to U+FFFF are represented on a single character\r\n// Code points U+10000 to U+10FFFF are represented on two consecutive characters\r\n//export function getUnicodePoint(str:string, index:number, len:number):number {\r\n//\tconst chrCode = str.charCodeAt(index);\r\n//\tif (0xD800 <= chrCode && chrCode <= 0xDBFF && index + 1 < len) {\r\n//\t\tconst nextChrCode = str.charCodeAt(index + 1);\r\n//\t\tif (0xDC00 <= nextChrCode && nextChrCode <= 0xDFFF) {\r\n//\t\t\treturn (chrCode - 0xD800) << 10 + (nextChrCode - 0xDC00) + 0x10000;\r\n//\t\t}\r\n//\t}\r\n//\treturn chrCode;\r\n//}\r\nexport function isHighSurrogate(charCode) {\r\n    return (0xD800 <= charCode && charCode <= 0xDBFF);\r\n}\r\nexport function isLowSurrogate(charCode) {\r\n    return (0xDC00 <= charCode && charCode <= 0xDFFF);\r\n}\r\n/**\r\n * get the code point that begins at offset `offset`\r\n */\r\nexport function getNextCodePoint(str, len, offset) {\r\n    var charCode = str.charCodeAt(offset);\r\n    if (isHighSurrogate(charCode) && offset + 1 < len) {\r\n        var nextCharCode = str.charCodeAt(offset + 1);\r\n        if (isLowSurrogate(nextCharCode)) {\r\n            return ((charCode - 0xD800) << 10) + (nextCharCode - 0xDC00) + 0x10000;\r\n        }\r\n    }\r\n    return charCode;\r\n}\r\n/**\r\n * get the code point that ends right before offset `offset`\r\n */\r\nfunction getPrevCodePoint(str, offset) {\r\n    var charCode = str.charCodeAt(offset - 1);\r\n    if (isLowSurrogate(charCode) && offset > 1) {\r\n        var prevCharCode = str.charCodeAt(offset - 2);\r\n        if (isHighSurrogate(prevCharCode)) {\r\n            return ((prevCharCode - 0xD800) << 10) + (charCode - 0xDC00) + 0x10000;\r\n        }\r\n    }\r\n    return charCode;\r\n}\r\nexport function nextCharLength(str, offset) {\r\n    var graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n    var initialOffset = offset;\r\n    var len = str.length;\r\n    var initialCodePoint = getNextCodePoint(str, len, offset);\r\n    offset += (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n    var graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\r\n    while (offset < len) {\r\n        var nextCodePoint = getNextCodePoint(str, len, offset);\r\n        var nextGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(nextCodePoint);\r\n        if (breakBetweenGraphemeBreakType(graphemeBreakType, nextGraphemeBreakType)) {\r\n            break;\r\n        }\r\n        offset += (nextCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n        graphemeBreakType = nextGraphemeBreakType;\r\n    }\r\n    return (offset - initialOffset);\r\n}\r\nexport function prevCharLength(str, offset) {\r\n    var graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n    var initialOffset = offset;\r\n    var initialCodePoint = getPrevCodePoint(str, offset);\r\n    offset -= (initialCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n    var graphemeBreakType = graphemeBreakTree.getGraphemeBreakType(initialCodePoint);\r\n    while (offset > 0) {\r\n        var prevCodePoint = getPrevCodePoint(str, offset);\r\n        var prevGraphemeBreakType = graphemeBreakTree.getGraphemeBreakType(prevCodePoint);\r\n        if (breakBetweenGraphemeBreakType(prevGraphemeBreakType, graphemeBreakType)) {\r\n            break;\r\n        }\r\n        offset -= (prevCodePoint >= 65536 /* UNICODE_SUPPLEMENTARY_PLANE_BEGIN */ ? 2 : 1);\r\n        graphemeBreakType = prevGraphemeBreakType;\r\n    }\r\n    return (initialOffset - offset);\r\n}\r\n/**\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-rtl-test.js\r\n */\r\nvar CONTAINS_RTL = /(?:[\\u05BE\\u05C0\\u05C3\\u05C6\\u05D0-\\u05F4\\u0608\\u060B\\u060D\\u061B-\\u064A\\u066D-\\u066F\\u0671-\\u06D5\\u06E5\\u06E6\\u06EE\\u06EF\\u06FA-\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1-\\u07EA\\u07F4\\u07F5\\u07FA-\\u0815\\u081A\\u0824\\u0828\\u0830-\\u0858\\u085E-\\u08BD\\u200F\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFD3D\\uFD50-\\uFDFC\\uFE70-\\uFEFC]|\\uD802[\\uDC00-\\uDD1B\\uDD20-\\uDE00\\uDE10-\\uDE33\\uDE40-\\uDEE4\\uDEEB-\\uDF35\\uDF40-\\uDFFF]|\\uD803[\\uDC00-\\uDCFF]|\\uD83A[\\uDC00-\\uDCCF\\uDD00-\\uDD43\\uDD50-\\uDFFF]|\\uD83B[\\uDC00-\\uDEBB])/;\r\n/**\r\n * Returns true if `str` contains any Unicode character that is classified as \"R\" or \"AL\".\r\n */\r\nexport function containsRTL(str) {\r\n    return CONTAINS_RTL.test(str);\r\n}\r\n/**\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\r\nvar CONTAINS_EMOJI = /(?:[\\u231A\\u231B\\u23F0\\u23F3\\u2600-\\u27BF\\u2B50\\u2B55]|\\uD83C[\\uDDE6-\\uDDFF\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDE4F\\uDE80-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD00-\\uDDFF\\uDE70-\\uDE73\\uDE78-\\uDE82\\uDE90-\\uDE95])/;\r\nexport function containsEmoji(str) {\r\n    return CONTAINS_EMOJI.test(str);\r\n}\r\nvar IS_BASIC_ASCII = /^[\\t\\n\\r\\x20-\\x7E]*$/;\r\n/**\r\n * Returns true if `str` contains only basic ASCII characters in the range 32 - 126 (including 32 and 126) or \\n, \\r, \\t\r\n */\r\nexport function isBasicASCII(str) {\r\n    return IS_BASIC_ASCII.test(str);\r\n}\r\nexport function containsFullWidthCharacter(str) {\r\n    for (var i = 0, len = str.length; i < len; i++) {\r\n        if (isFullWidthCharacter(str.charCodeAt(i))) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nexport function isFullWidthCharacter(charCode) {\r\n    // Do a cheap trick to better support wrapping of wide characters, treat them as 2 columns\r\n    // http://jrgraphix.net/research/unicode_blocks.php\r\n    //          2E80 — 2EFF   CJK Radicals Supplement\r\n    //          2F00 — 2FDF   Kangxi Radicals\r\n    //          2FF0 — 2FFF   Ideographic Description Characters\r\n    //          3000 — 303F   CJK Symbols and Punctuation\r\n    //          3040 — 309F   Hiragana\r\n    //          30A0 — 30FF   Katakana\r\n    //          3100 — 312F   Bopomofo\r\n    //          3130 — 318F   Hangul Compatibility Jamo\r\n    //          3190 — 319F   Kanbun\r\n    //          31A0 — 31BF   Bopomofo Extended\r\n    //          31F0 — 31FF   Katakana Phonetic Extensions\r\n    //          3200 — 32FF   Enclosed CJK Letters and Months\r\n    //          3300 — 33FF   CJK Compatibility\r\n    //          3400 — 4DBF   CJK Unified Ideographs Extension A\r\n    //          4DC0 — 4DFF   Yijing Hexagram Symbols\r\n    //          4E00 — 9FFF   CJK Unified Ideographs\r\n    //          A000 — A48F   Yi Syllables\r\n    //          A490 — A4CF   Yi Radicals\r\n    //          AC00 — D7AF   Hangul Syllables\r\n    // [IGNORE] D800 — DB7F   High Surrogates\r\n    // [IGNORE] DB80 — DBFF   High Private Use Surrogates\r\n    // [IGNORE] DC00 — DFFF   Low Surrogates\r\n    // [IGNORE] E000 — F8FF   Private Use Area\r\n    //          F900 — FAFF   CJK Compatibility Ideographs\r\n    // [IGNORE] FB00 — FB4F   Alphabetic Presentation Forms\r\n    // [IGNORE] FB50 — FDFF   Arabic Presentation Forms-A\r\n    // [IGNORE] FE00 — FE0F   Variation Selectors\r\n    // [IGNORE] FE20 — FE2F   Combining Half Marks\r\n    // [IGNORE] FE30 — FE4F   CJK Compatibility Forms\r\n    // [IGNORE] FE50 — FE6F   Small Form Variants\r\n    // [IGNORE] FE70 — FEFF   Arabic Presentation Forms-B\r\n    //          FF00 — FFEF   Halfwidth and Fullwidth Forms\r\n    //               [https://en.wikipedia.org/wiki/Halfwidth_and_fullwidth_forms]\r\n    //               of which FF01 - FF5E fullwidth ASCII of 21 to 7E\r\n    // [IGNORE]    and FF65 - FFDC halfwidth of Katakana and Hangul\r\n    // [IGNORE] FFF0 — FFFF   Specials\r\n    charCode = +charCode; // @perf\r\n    return ((charCode >= 0x2E80 && charCode <= 0xD7AF)\r\n        || (charCode >= 0xF900 && charCode <= 0xFAFF)\r\n        || (charCode >= 0xFF01 && charCode <= 0xFF5E));\r\n}\r\n/**\r\n * A fast function (therefore imprecise) to check if code points are emojis.\r\n * Generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-emoji-test.js\r\n */\r\nexport function isEmojiImprecise(x) {\r\n    return ((x >= 0x1F1E6 && x <= 0x1F1FF) || (x >= 9728 && x <= 10175) || (x >= 127744 && x <= 128591)\r\n        || (x >= 128640 && x <= 128764) || (x >= 128992 && x <= 129003) || (x >= 129280 && x <= 129535)\r\n        || (x >= 129648 && x <= 129651) || (x >= 129656 && x <= 129666) || (x >= 129680 && x <= 129685));\r\n}\r\n// -- UTF-8 BOM\r\nexport var UTF8_BOM_CHARACTER = String.fromCharCode(65279 /* UTF8_BOM */);\r\nexport function startsWithUTF8BOM(str) {\r\n    return !!(str && str.length > 0 && str.charCodeAt(0) === 65279 /* UTF8_BOM */);\r\n}\r\nexport function safeBtoa(str) {\r\n    return btoa(encodeURIComponent(str)); // we use encodeURIComponent because btoa fails for non Latin 1 values\r\n}\r\nexport function repeat(s, count) {\r\n    var result = '';\r\n    for (var i = 0; i < count; i++) {\r\n        result += s;\r\n    }\r\n    return result;\r\n}\r\nexport function containsUppercaseCharacter(target, ignoreEscapedChars) {\r\n    if (ignoreEscapedChars === void 0) { ignoreEscapedChars = false; }\r\n    if (!target) {\r\n        return false;\r\n    }\r\n    if (ignoreEscapedChars) {\r\n        target = target.replace(/\\\\./g, '');\r\n    }\r\n    return target.toLowerCase() !== target;\r\n}\r\n/**\r\n * Produces 'a'-'z', followed by 'A'-'Z'... followed by 'a'-'z', etc.\r\n */\r\nexport function singleLetterHash(n) {\r\n    var LETTERS_CNT = (90 /* Z */ - 65 /* A */ + 1);\r\n    n = n % (2 * LETTERS_CNT);\r\n    if (n < LETTERS_CNT) {\r\n        return String.fromCharCode(97 /* a */ + n);\r\n    }\r\n    return String.fromCharCode(65 /* A */ + n - LETTERS_CNT);\r\n}\r\n//#region Unicode Grapheme Break\r\nexport function getGraphemeBreakType(codePoint) {\r\n    var graphemeBreakTree = GraphemeBreakTree.getInstance();\r\n    return graphemeBreakTree.getGraphemeBreakType(codePoint);\r\n}\r\nexport function breakBetweenGraphemeBreakType(breakTypeA, breakTypeB) {\r\n    // http://www.unicode.org/reports/tr29/#Grapheme_Cluster_Boundary_Rules\r\n    // !!! Let's make the common case a bit faster\r\n    if (breakTypeA === 0 /* Other */) {\r\n        // see https://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakTest-13.0.0d10.html#table\r\n        return (breakTypeB !== 5 /* Extend */ && breakTypeB !== 7 /* SpacingMark */);\r\n    }\r\n    // Do not break between a CR and LF. Otherwise, break before and after controls.\r\n    // GB3                                        CR × LF\r\n    // GB4                       (Control | CR | LF) ÷\r\n    // GB5                                           ÷ (Control | CR | LF)\r\n    if (breakTypeA === 2 /* CR */) {\r\n        if (breakTypeB === 3 /* LF */) {\r\n            return false; // GB3\r\n        }\r\n    }\r\n    if (breakTypeA === 4 /* Control */ || breakTypeA === 2 /* CR */ || breakTypeA === 3 /* LF */) {\r\n        return true; // GB4\r\n    }\r\n    if (breakTypeB === 4 /* Control */ || breakTypeB === 2 /* CR */ || breakTypeB === 3 /* LF */) {\r\n        return true; // GB5\r\n    }\r\n    // Do not break Hangul syllable sequences.\r\n    // GB6                                         L × (L | V | LV | LVT)\r\n    // GB7                                  (LV | V) × (V | T)\r\n    // GB8                                 (LVT | T) × T\r\n    if (breakTypeA === 8 /* L */) {\r\n        if (breakTypeB === 8 /* L */ || breakTypeB === 9 /* V */ || breakTypeB === 11 /* LV */ || breakTypeB === 12 /* LVT */) {\r\n            return false; // GB6\r\n        }\r\n    }\r\n    if (breakTypeA === 11 /* LV */ || breakTypeA === 9 /* V */) {\r\n        if (breakTypeB === 9 /* V */ || breakTypeB === 10 /* T */) {\r\n            return false; // GB7\r\n        }\r\n    }\r\n    if (breakTypeA === 12 /* LVT */ || breakTypeA === 10 /* T */) {\r\n        if (breakTypeB === 10 /* T */) {\r\n            return false; // GB8\r\n        }\r\n    }\r\n    // Do not break before extending characters or ZWJ.\r\n    // GB9                                           × (Extend | ZWJ)\r\n    if (breakTypeB === 5 /* Extend */ || breakTypeB === 13 /* ZWJ */) {\r\n        return false; // GB9\r\n    }\r\n    // The GB9a and GB9b rules only apply to extended grapheme clusters:\r\n    // Do not break before SpacingMarks, or after Prepend characters.\r\n    // GB9a                                          × SpacingMark\r\n    // GB9b                                  Prepend ×\r\n    if (breakTypeB === 7 /* SpacingMark */) {\r\n        return false; // GB9a\r\n    }\r\n    if (breakTypeA === 1 /* Prepend */) {\r\n        return false; // GB9b\r\n    }\r\n    // Do not break within emoji modifier sequences or emoji zwj sequences.\r\n    // GB11    \\p{Extended_Pictographic} Extend* ZWJ × \\p{Extended_Pictographic}\r\n    if (breakTypeA === 13 /* ZWJ */ && breakTypeB === 14 /* Extended_Pictographic */) {\r\n        // Note: we are not implementing the rule entirely here to avoid introducing states\r\n        return false; // GB11\r\n    }\r\n    // GB12                          sot (RI RI)* RI × RI\r\n    // GB13                        [^RI] (RI RI)* RI × RI\r\n    if (breakTypeA === 6 /* Regional_Indicator */ && breakTypeB === 6 /* Regional_Indicator */) {\r\n        // Note: we are not implementing the rule entirely here to avoid introducing states\r\n        return false; // GB12 & GB13\r\n    }\r\n    // GB999                                     Any ÷ Any\r\n    return true;\r\n}\r\nvar GraphemeBreakTree = /** @class */ (function () {\r\n    function GraphemeBreakTree() {\r\n        this._data = getGraphemeBreakRawData();\r\n    }\r\n    GraphemeBreakTree.getInstance = function () {\r\n        if (!GraphemeBreakTree._INSTANCE) {\r\n            GraphemeBreakTree._INSTANCE = new GraphemeBreakTree();\r\n        }\r\n        return GraphemeBreakTree._INSTANCE;\r\n    };\r\n    GraphemeBreakTree.prototype.getGraphemeBreakType = function (codePoint) {\r\n        // !!! Let's make 7bit ASCII a bit faster: 0..31\r\n        if (codePoint < 32) {\r\n            if (codePoint === 10 /* LineFeed */) {\r\n                return 3 /* LF */;\r\n            }\r\n            if (codePoint === 13 /* CarriageReturn */) {\r\n                return 2 /* CR */;\r\n            }\r\n            return 4 /* Control */;\r\n        }\r\n        // !!! Let's make 7bit ASCII a bit faster: 32..126\r\n        if (codePoint < 127) {\r\n            return 0 /* Other */;\r\n        }\r\n        var data = this._data;\r\n        var nodeCount = data.length / 3;\r\n        var nodeIndex = 1;\r\n        while (nodeIndex <= nodeCount) {\r\n            if (codePoint < data[3 * nodeIndex]) {\r\n                // go left\r\n                nodeIndex = 2 * nodeIndex;\r\n            }\r\n            else if (codePoint > data[3 * nodeIndex + 1]) {\r\n                // go right\r\n                nodeIndex = 2 * nodeIndex + 1;\r\n            }\r\n            else {\r\n                // hit\r\n                return data[3 * nodeIndex + 2];\r\n            }\r\n        }\r\n        return 0 /* Other */;\r\n    };\r\n    GraphemeBreakTree._INSTANCE = null;\r\n    return GraphemeBreakTree;\r\n}());\r\nfunction getGraphemeBreakRawData() {\r\n    // generated using https://github.com/alexandrudima/unicode-utils/blob/master/generate-grapheme-break.js\r\n    return JSON.parse('[0,0,0,51592,51592,11,44424,44424,11,72251,72254,5,7150,7150,7,48008,48008,11,55176,55176,11,128420,128420,14,3276,3277,5,9979,9980,14,46216,46216,11,49800,49800,11,53384,53384,11,70726,70726,5,122915,122916,5,129320,129327,14,2558,2558,5,5906,5908,5,9762,9763,14,43360,43388,8,45320,45320,11,47112,47112,11,48904,48904,11,50696,50696,11,52488,52488,11,54280,54280,11,70082,70083,1,71350,71350,7,73111,73111,5,127892,127893,14,128726,128727,14,129473,129474,14,2027,2035,5,2901,2902,5,3784,3789,5,6754,6754,5,8418,8420,5,9877,9877,14,11088,11088,14,44008,44008,5,44872,44872,11,45768,45768,11,46664,46664,11,47560,47560,11,48456,48456,11,49352,49352,11,50248,50248,11,51144,51144,11,52040,52040,11,52936,52936,11,53832,53832,11,54728,54728,11,69811,69814,5,70459,70460,5,71096,71099,7,71998,71998,5,72874,72880,5,119149,119149,7,127374,127374,14,128335,128335,14,128482,128482,14,128765,128767,14,129399,129400,14,129680,129685,14,1476,1477,5,2377,2380,7,2759,2760,5,3137,3140,7,3458,3459,7,4153,4154,5,6432,6434,5,6978,6978,5,7675,7679,5,9723,9726,14,9823,9823,14,9919,9923,14,10035,10036,14,42736,42737,5,43596,43596,5,44200,44200,11,44648,44648,11,45096,45096,11,45544,45544,11,45992,45992,11,46440,46440,11,46888,46888,11,47336,47336,11,47784,47784,11,48232,48232,11,48680,48680,11,49128,49128,11,49576,49576,11,50024,50024,11,50472,50472,11,50920,50920,11,51368,51368,11,51816,51816,11,52264,52264,11,52712,52712,11,53160,53160,11,53608,53608,11,54056,54056,11,54504,54504,11,54952,54952,11,68108,68111,5,69933,69940,5,70197,70197,7,70498,70499,7,70845,70845,5,71229,71229,5,71727,71735,5,72154,72155,5,72344,72345,5,73023,73029,5,94095,94098,5,121403,121452,5,126981,127182,14,127538,127546,14,127990,127990,14,128391,128391,14,128445,128449,14,128500,128505,14,128752,128752,14,129160,129167,14,129356,129356,14,129432,129442,14,129648,129651,14,129751,131069,14,173,173,4,1757,1757,1,2274,2274,1,2494,2494,5,2641,2641,5,2876,2876,5,3014,3016,7,3262,3262,7,3393,3396,5,3570,3571,7,3968,3972,5,4228,4228,7,6086,6086,5,6679,6680,5,6912,6915,5,7080,7081,5,7380,7392,5,8252,8252,14,9096,9096,14,9748,9749,14,9784,9786,14,9833,9850,14,9890,9894,14,9938,9938,14,9999,9999,14,10085,10087,14,12349,12349,14,43136,43137,7,43454,43456,7,43755,43755,7,44088,44088,11,44312,44312,11,44536,44536,11,44760,44760,11,44984,44984,11,45208,45208,11,45432,45432,11,45656,45656,11,45880,45880,11,46104,46104,11,46328,46328,11,46552,46552,11,46776,46776,11,47000,47000,11,47224,47224,11,47448,47448,11,47672,47672,11,47896,47896,11,48120,48120,11,48344,48344,11,48568,48568,11,48792,48792,11,49016,49016,11,49240,49240,11,49464,49464,11,49688,49688,11,49912,49912,11,50136,50136,11,50360,50360,11,50584,50584,11,50808,50808,11,51032,51032,11,51256,51256,11,51480,51480,11,51704,51704,11,51928,51928,11,52152,52152,11,52376,52376,11,52600,52600,11,52824,52824,11,53048,53048,11,53272,53272,11,53496,53496,11,53720,53720,11,53944,53944,11,54168,54168,11,54392,54392,11,54616,54616,11,54840,54840,11,55064,55064,11,65438,65439,5,69633,69633,5,69837,69837,1,70018,70018,7,70188,70190,7,70368,70370,7,70465,70468,7,70712,70719,5,70835,70840,5,70850,70851,5,71132,71133,5,71340,71340,7,71458,71461,5,71985,71989,7,72002,72002,7,72193,72202,5,72281,72283,5,72766,72766,7,72885,72886,5,73104,73105,5,92912,92916,5,113824,113827,4,119173,119179,5,121505,121519,5,125136,125142,5,127279,127279,14,127489,127490,14,127570,127743,14,127900,127901,14,128254,128254,14,128369,128370,14,128400,128400,14,128425,128432,14,128468,128475,14,128489,128494,14,128715,128720,14,128745,128745,14,128759,128760,14,129004,129023,14,129296,129304,14,129340,129342,14,129388,129392,14,129404,129407,14,129454,129455,14,129485,129487,14,129659,129663,14,129719,129727,14,917536,917631,5,13,13,2,1160,1161,5,1564,1564,4,1807,1807,1,2085,2087,5,2363,2363,7,2402,2403,5,2507,2508,7,2622,2624,7,2691,2691,7,2786,2787,5,2881,2884,5,3006,3006,5,3072,3072,5,3170,3171,5,3267,3268,7,3330,3331,7,3406,3406,1,3538,3540,5,3655,3662,5,3897,3897,5,4038,4038,5,4184,4185,5,4352,4447,8,6068,6069,5,6155,6157,5,6448,6449,7,6742,6742,5,6783,6783,5,6966,6970,5,7042,7042,7,7143,7143,7,7212,7219,5,7412,7412,5,8206,8207,4,8294,8303,4,8596,8601,14,9410,9410,14,9742,9742,14,9757,9757,14,9770,9770,14,9794,9794,14,9828,9828,14,9855,9855,14,9882,9882,14,9900,9903,14,9929,9933,14,9963,9967,14,9987,9988,14,10006,10006,14,10062,10062,14,10175,10175,14,11744,11775,5,42607,42607,5,43043,43044,7,43263,43263,5,43444,43445,7,43569,43570,5,43698,43700,5,43766,43766,5,44032,44032,11,44144,44144,11,44256,44256,11,44368,44368,11,44480,44480,11,44592,44592,11,44704,44704,11,44816,44816,11,44928,44928,11,45040,45040,11,45152,45152,11,45264,45264,11,45376,45376,11,45488,45488,11,45600,45600,11,45712,45712,11,45824,45824,11,45936,45936,11,46048,46048,11,46160,46160,11,46272,46272,11,46384,46384,11,46496,46496,11,46608,46608,11,46720,46720,11,46832,46832,11,46944,46944,11,47056,47056,11,47168,47168,11,47280,47280,11,47392,47392,11,47504,47504,11,47616,47616,11,47728,47728,11,47840,47840,11,47952,47952,11,48064,48064,11,48176,48176,11,48288,48288,11,48400,48400,11,48512,48512,11,48624,48624,11,48736,48736,11,48848,48848,11,48960,48960,11,49072,49072,11,49184,49184,11,49296,49296,11,49408,49408,11,49520,49520,11,49632,49632,11,49744,49744,11,49856,49856,11,49968,49968,11,50080,50080,11,50192,50192,11,50304,50304,11,50416,50416,11,50528,50528,11,50640,50640,11,50752,50752,11,50864,50864,11,50976,50976,11,51088,51088,11,51200,51200,11,51312,51312,11,51424,51424,11,51536,51536,11,51648,51648,11,51760,51760,11,51872,51872,11,51984,51984,11,52096,52096,11,52208,52208,11,52320,52320,11,52432,52432,11,52544,52544,11,52656,52656,11,52768,52768,11,52880,52880,11,52992,52992,11,53104,53104,11,53216,53216,11,53328,53328,11,53440,53440,11,53552,53552,11,53664,53664,11,53776,53776,11,53888,53888,11,54000,54000,11,54112,54112,11,54224,54224,11,54336,54336,11,54448,54448,11,54560,54560,11,54672,54672,11,54784,54784,11,54896,54896,11,55008,55008,11,55120,55120,11,64286,64286,5,66272,66272,5,68900,68903,5,69762,69762,7,69817,69818,5,69927,69931,5,70003,70003,5,70070,70078,5,70094,70094,7,70194,70195,7,70206,70206,5,70400,70401,5,70463,70463,7,70475,70477,7,70512,70516,5,70722,70724,5,70832,70832,5,70842,70842,5,70847,70848,5,71088,71089,7,71102,71102,7,71219,71226,5,71231,71232,5,71342,71343,7,71453,71455,5,71463,71467,5,71737,71738,5,71995,71996,5,72000,72000,7,72145,72147,7,72160,72160,5,72249,72249,7,72273,72278,5,72330,72342,5,72752,72758,5,72850,72871,5,72882,72883,5,73018,73018,5,73031,73031,5,73109,73109,5,73461,73462,7,94031,94031,5,94192,94193,7,119142,119142,7,119155,119162,4,119362,119364,5,121476,121476,5,122888,122904,5,123184,123190,5,126976,126979,14,127184,127231,14,127344,127345,14,127405,127461,14,127514,127514,14,127561,127567,14,127778,127779,14,127896,127896,14,127985,127986,14,127995,127999,5,128326,128328,14,128360,128366,14,128378,128378,14,128394,128397,14,128405,128406,14,128422,128423,14,128435,128443,14,128453,128464,14,128479,128480,14,128484,128487,14,128496,128498,14,128640,128709,14,128723,128724,14,128736,128741,14,128747,128748,14,128755,128755,14,128762,128762,14,128981,128991,14,129096,129103,14,129292,129292,14,129311,129311,14,129329,129330,14,129344,129349,14,129360,129374,14,129394,129394,14,129402,129402,14,129413,129425,14,129445,129450,14,129466,129471,14,129483,129483,14,129511,129535,14,129653,129655,14,129667,129670,14,129705,129711,14,129731,129743,14,917505,917505,4,917760,917999,5,10,10,3,127,159,4,768,879,5,1471,1471,5,1536,1541,1,1648,1648,5,1767,1768,5,1840,1866,5,2070,2073,5,2137,2139,5,2307,2307,7,2366,2368,7,2382,2383,7,2434,2435,7,2497,2500,5,2519,2519,5,2563,2563,7,2631,2632,5,2677,2677,5,2750,2752,7,2763,2764,7,2817,2817,5,2879,2879,5,2891,2892,7,2914,2915,5,3008,3008,5,3021,3021,5,3076,3076,5,3146,3149,5,3202,3203,7,3264,3265,7,3271,3272,7,3298,3299,5,3390,3390,5,3402,3404,7,3426,3427,5,3535,3535,5,3544,3550,7,3635,3635,7,3763,3763,7,3893,3893,5,3953,3966,5,3981,3991,5,4145,4145,7,4157,4158,5,4209,4212,5,4237,4237,5,4520,4607,10,5970,5971,5,6071,6077,5,6089,6099,5,6277,6278,5,6439,6440,5,6451,6456,7,6683,6683,5,6744,6750,5,6765,6770,7,6846,6846,5,6964,6964,5,6972,6972,5,7019,7027,5,7074,7077,5,7083,7085,5,7146,7148,7,7154,7155,7,7222,7223,5,7394,7400,5,7416,7417,5,8204,8204,5,8233,8233,4,8288,8292,4,8413,8416,5,8482,8482,14,8986,8987,14,9193,9203,14,9654,9654,14,9733,9733,14,9745,9745,14,9752,9752,14,9760,9760,14,9766,9766,14,9774,9775,14,9792,9792,14,9800,9811,14,9825,9826,14,9831,9831,14,9852,9853,14,9872,9873,14,9880,9880,14,9885,9887,14,9896,9897,14,9906,9916,14,9926,9927,14,9936,9936,14,9941,9960,14,9974,9974,14,9982,9985,14,9992,9997,14,10002,10002,14,10017,10017,14,10055,10055,14,10071,10071,14,10145,10145,14,11013,11015,14,11503,11505,5,12334,12335,5,12951,12951,14,42612,42621,5,43014,43014,5,43047,43047,7,43204,43205,5,43335,43345,5,43395,43395,7,43450,43451,7,43561,43566,5,43573,43574,5,43644,43644,5,43710,43711,5,43758,43759,7,44005,44005,5,44012,44012,7,44060,44060,11,44116,44116,11,44172,44172,11,44228,44228,11,44284,44284,11,44340,44340,11,44396,44396,11,44452,44452,11,44508,44508,11,44564,44564,11,44620,44620,11,44676,44676,11,44732,44732,11,44788,44788,11,44844,44844,11,44900,44900,11,44956,44956,11,45012,45012,11,45068,45068,11,45124,45124,11,45180,45180,11,45236,45236,11,45292,45292,11,45348,45348,11,45404,45404,11,45460,45460,11,45516,45516,11,45572,45572,11,45628,45628,11,45684,45684,11,45740,45740,11,45796,45796,11,45852,45852,11,45908,45908,11,45964,45964,11,46020,46020,11,46076,46076,11,46132,46132,11,46188,46188,11,46244,46244,11,46300,46300,11,46356,46356,11,46412,46412,11,46468,46468,11,46524,46524,11,46580,46580,11,46636,46636,11,46692,46692,11,46748,46748,11,46804,46804,11,46860,46860,11,46916,46916,11,46972,46972,11,47028,47028,11,47084,47084,11,47140,47140,11,47196,47196,11,47252,47252,11,47308,47308,11,47364,47364,11,47420,47420,11,47476,47476,11,47532,47532,11,47588,47588,11,47644,47644,11,47700,47700,11,47756,47756,11,47812,47812,11,47868,47868,11,47924,47924,11,47980,47980,11,48036,48036,11,48092,48092,11,48148,48148,11,48204,48204,11,48260,48260,11,48316,48316,11,48372,48372,11,48428,48428,11,48484,48484,11,48540,48540,11,48596,48596,11,48652,48652,11,48708,48708,11,48764,48764,11,48820,48820,11,48876,48876,11,48932,48932,11,48988,48988,11,49044,49044,11,49100,49100,11,49156,49156,11,49212,49212,11,49268,49268,11,49324,49324,11,49380,49380,11,49436,49436,11,49492,49492,11,49548,49548,11,49604,49604,11,49660,49660,11,49716,49716,11,49772,49772,11,49828,49828,11,49884,49884,11,49940,49940,11,49996,49996,11,50052,50052,11,50108,50108,11,50164,50164,11,50220,50220,11,50276,50276,11,50332,50332,11,50388,50388,11,50444,50444,11,50500,50500,11,50556,50556,11,50612,50612,11,50668,50668,11,50724,50724,11,50780,50780,11,50836,50836,11,50892,50892,11,50948,50948,11,51004,51004,11,51060,51060,11,51116,51116,11,51172,51172,11,51228,51228,11,51284,51284,11,51340,51340,11,51396,51396,11,51452,51452,11,51508,51508,11,51564,51564,11,51620,51620,11,51676,51676,11,51732,51732,11,51788,51788,11,51844,51844,11,51900,51900,11,51956,51956,11,52012,52012,11,52068,52068,11,52124,52124,11,52180,52180,11,52236,52236,11,52292,52292,11,52348,52348,11,52404,52404,11,52460,52460,11,52516,52516,11,52572,52572,11,52628,52628,11,52684,52684,11,52740,52740,11,52796,52796,11,52852,52852,11,52908,52908,11,52964,52964,11,53020,53020,11,53076,53076,11,53132,53132,11,53188,53188,11,53244,53244,11,53300,53300,11,53356,53356,11,53412,53412,11,53468,53468,11,53524,53524,11,53580,53580,11,53636,53636,11,53692,53692,11,53748,53748,11,53804,53804,11,53860,53860,11,53916,53916,11,53972,53972,11,54028,54028,11,54084,54084,11,54140,54140,11,54196,54196,11,54252,54252,11,54308,54308,11,54364,54364,11,54420,54420,11,54476,54476,11,54532,54532,11,54588,54588,11,54644,54644,11,54700,54700,11,54756,54756,11,54812,54812,11,54868,54868,11,54924,54924,11,54980,54980,11,55036,55036,11,55092,55092,11,55148,55148,11,55216,55238,9,65056,65071,5,65529,65531,4,68097,68099,5,68159,68159,5,69446,69456,5,69688,69702,5,69808,69810,7,69815,69816,7,69821,69821,1,69888,69890,5,69932,69932,7,69957,69958,7,70016,70017,5,70067,70069,7,70079,70080,7,70089,70092,5,70095,70095,5,70191,70193,5,70196,70196,5,70198,70199,5,70367,70367,5,70371,70378,5,70402,70403,7,70462,70462,5,70464,70464,5,70471,70472,7,70487,70487,5,70502,70508,5,70709,70711,7,70720,70721,7,70725,70725,7,70750,70750,5,70833,70834,7,70841,70841,7,70843,70844,7,70846,70846,7,70849,70849,7,71087,71087,5,71090,71093,5,71100,71101,5,71103,71104,5,71216,71218,7,71227,71228,7,71230,71230,7,71339,71339,5,71341,71341,5,71344,71349,5,71351,71351,5,71456,71457,7,71462,71462,7,71724,71726,7,71736,71736,7,71984,71984,5,71991,71992,7,71997,71997,7,71999,71999,1,72001,72001,1,72003,72003,5,72148,72151,5,72156,72159,7,72164,72164,7,72243,72248,5,72250,72250,1,72263,72263,5,72279,72280,7,72324,72329,1,72343,72343,7,72751,72751,7,72760,72765,5,72767,72767,5,72873,72873,7,72881,72881,7,72884,72884,7,73009,73014,5,73020,73021,5,73030,73030,1,73098,73102,7,73107,73108,7,73110,73110,7,73459,73460,5,78896,78904,4,92976,92982,5,94033,94087,7,94180,94180,5,113821,113822,5,119141,119141,5,119143,119145,5,119150,119154,5,119163,119170,5,119210,119213,5,121344,121398,5,121461,121461,5,121499,121503,5,122880,122886,5,122907,122913,5,122918,122922,5,123628,123631,5,125252,125258,5,126980,126980,14,127183,127183,14,127245,127247,14,127340,127343,14,127358,127359,14,127377,127386,14,127462,127487,6,127491,127503,14,127535,127535,14,127548,127551,14,127568,127569,14,127744,127777,14,127780,127891,14,127894,127895,14,127897,127899,14,127902,127984,14,127987,127989,14,127991,127994,14,128000,128253,14,128255,128317,14,128329,128334,14,128336,128359,14,128367,128368,14,128371,128377,14,128379,128390,14,128392,128393,14,128398,128399,14,128401,128404,14,128407,128419,14,128421,128421,14,128424,128424,14,128433,128434,14,128444,128444,14,128450,128452,14,128465,128467,14,128476,128478,14,128481,128481,14,128483,128483,14,128488,128488,14,128495,128495,14,128499,128499,14,128506,128591,14,128710,128714,14,128721,128722,14,128725,128725,14,128728,128735,14,128742,128744,14,128746,128746,14,128749,128751,14,128753,128754,14,128756,128758,14,128761,128761,14,128763,128764,14,128884,128895,14,128992,129003,14,129036,129039,14,129114,129119,14,129198,129279,14,129293,129295,14,129305,129310,14,129312,129319,14,129328,129328,14,129331,129338,14,129343,129343,14,129351,129355,14,129357,129359,14,129375,129387,14,129393,129393,14,129395,129398,14,129401,129401,14,129403,129403,14,129408,129412,14,129426,129431,14,129443,129444,14,129451,129453,14,129456,129465,14,129472,129472,14,129475,129482,14,129484,129484,14,129488,129510,14,129536,129647,14,129652,129652,14,129656,129658,14,129664,129666,14,129671,129679,14,129686,129704,14,129712,129718,14,129728,129730,14,129744,129750,14,917504,917504,4,917506,917535,4,917632,917759,4,918000,921599,4,0,9,4,11,12,4,14,31,4,169,169,14,174,174,14,1155,1159,5,1425,1469,5,1473,1474,5,1479,1479,5,1552,1562,5,1611,1631,5,1750,1756,5,1759,1764,5,1770,1773,5,1809,1809,5,1958,1968,5,2045,2045,5,2075,2083,5,2089,2093,5,2259,2273,5,2275,2306,5,2362,2362,5,2364,2364,5,2369,2376,5,2381,2381,5,2385,2391,5,2433,2433,5,2492,2492,5,2495,2496,7,2503,2504,7,2509,2509,5,2530,2531,5,2561,2562,5,2620,2620,5,2625,2626,5,2635,2637,5,2672,2673,5,2689,2690,5,2748,2748,5,2753,2757,5,2761,2761,7,2765,2765,5,2810,2815,5,2818,2819,7,2878,2878,5,2880,2880,7,2887,2888,7,2893,2893,5,2903,2903,5,2946,2946,5,3007,3007,7,3009,3010,7,3018,3020,7,3031,3031,5,3073,3075,7,3134,3136,5,3142,3144,5,3157,3158,5,3201,3201,5,3260,3260,5,3263,3263,5,3266,3266,5,3270,3270,5,3274,3275,7,3285,3286,5,3328,3329,5,3387,3388,5,3391,3392,7,3398,3400,7,3405,3405,5,3415,3415,5,3457,3457,5,3530,3530,5,3536,3537,7,3542,3542,5,3551,3551,5,3633,3633,5,3636,3642,5,3761,3761,5,3764,3772,5,3864,3865,5,3895,3895,5,3902,3903,7,3967,3967,7,3974,3975,5,3993,4028,5,4141,4144,5,4146,4151,5,4155,4156,7,4182,4183,7,4190,4192,5,4226,4226,5,4229,4230,5,4253,4253,5,4448,4519,9,4957,4959,5,5938,5940,5,6002,6003,5,6070,6070,7,6078,6085,7,6087,6088,7,6109,6109,5,6158,6158,4,6313,6313,5,6435,6438,7,6441,6443,7,6450,6450,5,6457,6459,5,6681,6682,7,6741,6741,7,6743,6743,7,6752,6752,5,6757,6764,5,6771,6780,5,6832,6845,5,6847,6848,5,6916,6916,7,6965,6965,5,6971,6971,7,6973,6977,7,6979,6980,7,7040,7041,5,7073,7073,7,7078,7079,7,7082,7082,7,7142,7142,5,7144,7145,5,7149,7149,5,7151,7153,5,7204,7211,7,7220,7221,7,7376,7378,5,7393,7393,7,7405,7405,5,7415,7415,7,7616,7673,5,8203,8203,4,8205,8205,13,8232,8232,4,8234,8238,4,8265,8265,14,8293,8293,4,8400,8412,5,8417,8417,5,8421,8432,5,8505,8505,14,8617,8618,14,9000,9000,14,9167,9167,14,9208,9210,14,9642,9643,14,9664,9664,14,9728,9732,14,9735,9741,14,9743,9744,14,9746,9746,14,9750,9751,14,9753,9756,14,9758,9759,14,9761,9761,14,9764,9765,14,9767,9769,14,9771,9773,14,9776,9783,14,9787,9791,14,9793,9793,14,9795,9799,14,9812,9822,14,9824,9824,14,9827,9827,14,9829,9830,14,9832,9832,14,9851,9851,14,9854,9854,14,9856,9861,14,9874,9876,14,9878,9879,14,9881,9881,14,9883,9884,14,9888,9889,14,9895,9895,14,9898,9899,14,9904,9905,14,9917,9918,14,9924,9925,14,9928,9928,14,9934,9935,14,9937,9937,14,9939,9940,14,9961,9962,14,9968,9973,14,9975,9978,14,9981,9981,14,9986,9986,14,9989,9989,14,9998,9998,14,10000,10001,14,10004,10004,14,10013,10013,14,10024,10024,14,10052,10052,14,10060,10060,14,10067,10069,14,10083,10084,14,10133,10135,14,10160,10160,14,10548,10549,14,11035,11036,14,11093,11093,14,11647,11647,5,12330,12333,5,12336,12336,14,12441,12442,5,12953,12953,14,42608,42610,5,42654,42655,5,43010,43010,5,43019,43019,5,43045,43046,5,43052,43052,5,43188,43203,7,43232,43249,5,43302,43309,5,43346,43347,7,43392,43394,5,43443,43443,5,43446,43449,5,43452,43453,5,43493,43493,5,43567,43568,7,43571,43572,7,43587,43587,5,43597,43597,7,43696,43696,5,43703,43704,5,43713,43713,5,43756,43757,5,43765,43765,7,44003,44004,7,44006,44007,7,44009,44010,7,44013,44013,5,44033,44059,12,44061,44087,12,44089,44115,12,44117,44143,12,44145,44171,12,44173,44199,12,44201,44227,12,44229,44255,12,44257,44283,12,44285,44311,12,44313,44339,12,44341,44367,12,44369,44395,12,44397,44423,12,44425,44451,12,44453,44479,12,44481,44507,12,44509,44535,12,44537,44563,12,44565,44591,12,44593,44619,12,44621,44647,12,44649,44675,12,44677,44703,12,44705,44731,12,44733,44759,12,44761,44787,12,44789,44815,12,44817,44843,12,44845,44871,12,44873,44899,12,44901,44927,12,44929,44955,12,44957,44983,12,44985,45011,12,45013,45039,12,45041,45067,12,45069,45095,12,45097,45123,12,45125,45151,12,45153,45179,12,45181,45207,12,45209,45235,12,45237,45263,12,45265,45291,12,45293,45319,12,45321,45347,12,45349,45375,12,45377,45403,12,45405,45431,12,45433,45459,12,45461,45487,12,45489,45515,12,45517,45543,12,45545,45571,12,45573,45599,12,45601,45627,12,45629,45655,12,45657,45683,12,45685,45711,12,45713,45739,12,45741,45767,12,45769,45795,12,45797,45823,12,45825,45851,12,45853,45879,12,45881,45907,12,45909,45935,12,45937,45963,12,45965,45991,12,45993,46019,12,46021,46047,12,46049,46075,12,46077,46103,12,46105,46131,12,46133,46159,12,46161,46187,12,46189,46215,12,46217,46243,12,46245,46271,12,46273,46299,12,46301,46327,12,46329,46355,12,46357,46383,12,46385,46411,12,46413,46439,12,46441,46467,12,46469,46495,12,46497,46523,12,46525,46551,12,46553,46579,12,46581,46607,12,46609,46635,12,46637,46663,12,46665,46691,12,46693,46719,12,46721,46747,12,46749,46775,12,46777,46803,12,46805,46831,12,46833,46859,12,46861,46887,12,46889,46915,12,46917,46943,12,46945,46971,12,46973,46999,12,47001,47027,12,47029,47055,12,47057,47083,12,47085,47111,12,47113,47139,12,47141,47167,12,47169,47195,12,47197,47223,12,47225,47251,12,47253,47279,12,47281,47307,12,47309,47335,12,47337,47363,12,47365,47391,12,47393,47419,12,47421,47447,12,47449,47475,12,47477,47503,12,47505,47531,12,47533,47559,12,47561,47587,12,47589,47615,12,47617,47643,12,47645,47671,12,47673,47699,12,47701,47727,12,47729,47755,12,47757,47783,12,47785,47811,12,47813,47839,12,47841,47867,12,47869,47895,12,47897,47923,12,47925,47951,12,47953,47979,12,47981,48007,12,48009,48035,12,48037,48063,12,48065,48091,12,48093,48119,12,48121,48147,12,48149,48175,12,48177,48203,12,48205,48231,12,48233,48259,12,48261,48287,12,48289,48315,12,48317,48343,12,48345,48371,12,48373,48399,12,48401,48427,12,48429,48455,12,48457,48483,12,48485,48511,12,48513,48539,12,48541,48567,12,48569,48595,12,48597,48623,12,48625,48651,12,48653,48679,12,48681,48707,12,48709,48735,12,48737,48763,12,48765,48791,12,48793,48819,12,48821,48847,12,48849,48875,12,48877,48903,12,48905,48931,12,48933,48959,12,48961,48987,12,48989,49015,12,49017,49043,12,49045,49071,12,49073,49099,12,49101,49127,12,49129,49155,12,49157,49183,12,49185,49211,12,49213,49239,12,49241,49267,12,49269,49295,12,49297,49323,12,49325,49351,12,49353,49379,12,49381,49407,12,49409,49435,12,49437,49463,12,49465,49491,12,49493,49519,12,49521,49547,12,49549,49575,12,49577,49603,12,49605,49631,12,49633,49659,12,49661,49687,12,49689,49715,12,49717,49743,12,49745,49771,12,49773,49799,12,49801,49827,12,49829,49855,12,49857,49883,12,49885,49911,12,49913,49939,12,49941,49967,12,49969,49995,12,49997,50023,12,50025,50051,12,50053,50079,12,50081,50107,12,50109,50135,12,50137,50163,12,50165,50191,12,50193,50219,12,50221,50247,12,50249,50275,12,50277,50303,12,50305,50331,12,50333,50359,12,50361,50387,12,50389,50415,12,50417,50443,12,50445,50471,12,50473,50499,12,50501,50527,12,50529,50555,12,50557,50583,12,50585,50611,12,50613,50639,12,50641,50667,12,50669,50695,12,50697,50723,12,50725,50751,12,50753,50779,12,50781,50807,12,50809,50835,12,50837,50863,12,50865,50891,12,50893,50919,12,50921,50947,12,50949,50975,12,50977,51003,12,51005,51031,12,51033,51059,12,51061,51087,12,51089,51115,12,51117,51143,12,51145,51171,12,51173,51199,12,51201,51227,12,51229,51255,12,51257,51283,12,51285,51311,12,51313,51339,12,51341,51367,12,51369,51395,12,51397,51423,12,51425,51451,12,51453,51479,12,51481,51507,12,51509,51535,12,51537,51563,12,51565,51591,12,51593,51619,12,51621,51647,12,51649,51675,12,51677,51703,12,51705,51731,12,51733,51759,12,51761,51787,12,51789,51815,12,51817,51843,12,51845,51871,12,51873,51899,12,51901,51927,12,51929,51955,12,51957,51983,12,51985,52011,12,52013,52039,12,52041,52067,12,52069,52095,12,52097,52123,12,52125,52151,12,52153,52179,12,52181,52207,12,52209,52235,12,52237,52263,12,52265,52291,12,52293,52319,12,52321,52347,12,52349,52375,12,52377,52403,12,52405,52431,12,52433,52459,12,52461,52487,12,52489,52515,12,52517,52543,12,52545,52571,12,52573,52599,12,52601,52627,12,52629,52655,12,52657,52683,12,52685,52711,12,52713,52739,12,52741,52767,12,52769,52795,12,52797,52823,12,52825,52851,12,52853,52879,12,52881,52907,12,52909,52935,12,52937,52963,12,52965,52991,12,52993,53019,12,53021,53047,12,53049,53075,12,53077,53103,12,53105,53131,12,53133,53159,12,53161,53187,12,53189,53215,12,53217,53243,12,53245,53271,12,53273,53299,12,53301,53327,12,53329,53355,12,53357,53383,12,53385,53411,12,53413,53439,12,53441,53467,12,53469,53495,12,53497,53523,12,53525,53551,12,53553,53579,12,53581,53607,12,53609,53635,12,53637,53663,12,53665,53691,12,53693,53719,12,53721,53747,12,53749,53775,12,53777,53803,12,53805,53831,12,53833,53859,12,53861,53887,12,53889,53915,12,53917,53943,12,53945,53971,12,53973,53999,12,54001,54027,12,54029,54055,12,54057,54083,12,54085,54111,12,54113,54139,12,54141,54167,12,54169,54195,12,54197,54223,12,54225,54251,12,54253,54279,12,54281,54307,12,54309,54335,12,54337,54363,12,54365,54391,12,54393,54419,12,54421,54447,12,54449,54475,12,54477,54503,12,54505,54531,12,54533,54559,12,54561,54587,12,54589,54615,12,54617,54643,12,54645,54671,12,54673,54699,12,54701,54727,12,54729,54755,12,54757,54783,12,54785,54811,12,54813,54839,12,54841,54867,12,54869,54895,12,54897,54923,12,54925,54951,12,54953,54979,12,54981,55007,12,55009,55035,12,55037,55063,12,55065,55091,12,55093,55119,12,55121,55147,12,55149,55175,12,55177,55203,12,55243,55291,10,65024,65039,5,65279,65279,4,65520,65528,4,66045,66045,5,66422,66426,5,68101,68102,5,68152,68154,5,68325,68326,5,69291,69292,5,69632,69632,7,69634,69634,7,69759,69761,5]');\r\n}\r\n//#endregion\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nexport function values(forEachable) {\r\n    var result = [];\r\n    forEachable.forEach(function (value) { return result.push(value); });\r\n    return result;\r\n}\r\nexport function keys(map) {\r\n    var result = [];\r\n    map.forEach(function (_value, key) { return result.push(key); });\r\n    return result;\r\n}\r\nvar StringIterator = /** @class */ (function () {\r\n    function StringIterator() {\r\n        this._value = '';\r\n        this._pos = 0;\r\n    }\r\n    StringIterator.prototype.reset = function (key) {\r\n        this._value = key;\r\n        this._pos = 0;\r\n        return this;\r\n    };\r\n    StringIterator.prototype.next = function () {\r\n        this._pos += 1;\r\n        return this;\r\n    };\r\n    StringIterator.prototype.hasNext = function () {\r\n        return this._pos < this._value.length - 1;\r\n    };\r\n    StringIterator.prototype.cmp = function (a) {\r\n        var aCode = a.charCodeAt(0);\r\n        var thisCode = this._value.charCodeAt(this._pos);\r\n        return aCode - thisCode;\r\n    };\r\n    StringIterator.prototype.value = function () {\r\n        return this._value[this._pos];\r\n    };\r\n    return StringIterator;\r\n}());\r\nexport { StringIterator };\r\nvar PathIterator = /** @class */ (function () {\r\n    function PathIterator(_splitOnBackslash) {\r\n        if (_splitOnBackslash === void 0) { _splitOnBackslash = true; }\r\n        this._splitOnBackslash = _splitOnBackslash;\r\n    }\r\n    PathIterator.prototype.reset = function (key) {\r\n        this._value = key.replace(/\\\\$|\\/$/, '');\r\n        this._from = 0;\r\n        this._to = 0;\r\n        return this.next();\r\n    };\r\n    PathIterator.prototype.hasNext = function () {\r\n        return this._to < this._value.length;\r\n    };\r\n    PathIterator.prototype.next = function () {\r\n        // this._data = key.split(/[\\\\/]/).filter(s => !!s);\r\n        this._from = this._to;\r\n        var justSeps = true;\r\n        for (; this._to < this._value.length; this._to++) {\r\n            var ch = this._value.charCodeAt(this._to);\r\n            if (ch === 47 /* Slash */ || this._splitOnBackslash && ch === 92 /* Backslash */) {\r\n                if (justSeps) {\r\n                    this._from++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            else {\r\n                justSeps = false;\r\n            }\r\n        }\r\n        return this;\r\n    };\r\n    PathIterator.prototype.cmp = function (a) {\r\n        var aPos = 0;\r\n        var aLen = a.length;\r\n        var thisPos = this._from;\r\n        while (aPos < aLen && thisPos < this._to) {\r\n            var cmp = a.charCodeAt(aPos) - this._value.charCodeAt(thisPos);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n            aPos += 1;\r\n            thisPos += 1;\r\n        }\r\n        if (aLen === this._to - this._from) {\r\n            return 0;\r\n        }\r\n        else if (aPos < aLen) {\r\n            return -1;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    PathIterator.prototype.value = function () {\r\n        return this._value.substring(this._from, this._to);\r\n    };\r\n    return PathIterator;\r\n}());\r\nexport { PathIterator };\r\nvar TernarySearchTreeNode = /** @class */ (function () {\r\n    function TernarySearchTreeNode() {\r\n    }\r\n    return TernarySearchTreeNode;\r\n}());\r\nvar TernarySearchTree = /** @class */ (function () {\r\n    function TernarySearchTree(segments) {\r\n        this._iter = segments;\r\n    }\r\n    TernarySearchTree.forPaths = function () {\r\n        return new TernarySearchTree(new PathIterator());\r\n    };\r\n    TernarySearchTree.forStrings = function () {\r\n        return new TernarySearchTree(new StringIterator());\r\n    };\r\n    TernarySearchTree.prototype.clear = function () {\r\n        this._root = undefined;\r\n    };\r\n    TernarySearchTree.prototype.set = function (key, element) {\r\n        var iter = this._iter.reset(key);\r\n        var node;\r\n        if (!this._root) {\r\n            this._root = new TernarySearchTreeNode();\r\n            this._root.segment = iter.value();\r\n        }\r\n        node = this._root;\r\n        while (true) {\r\n            var val = iter.cmp(node.segment);\r\n            if (val > 0) {\r\n                // left\r\n                if (!node.left) {\r\n                    node.left = new TernarySearchTreeNode();\r\n                    node.left.segment = iter.value();\r\n                }\r\n                node = node.left;\r\n            }\r\n            else if (val < 0) {\r\n                // right\r\n                if (!node.right) {\r\n                    node.right = new TernarySearchTreeNode();\r\n                    node.right.segment = iter.value();\r\n                }\r\n                node = node.right;\r\n            }\r\n            else if (iter.hasNext()) {\r\n                // mid\r\n                iter.next();\r\n                if (!node.mid) {\r\n                    node.mid = new TernarySearchTreeNode();\r\n                    node.mid.segment = iter.value();\r\n                }\r\n                node = node.mid;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        var oldElement = node.value;\r\n        node.value = element;\r\n        node.key = key;\r\n        return oldElement;\r\n    };\r\n    TernarySearchTree.prototype.get = function (key) {\r\n        var iter = this._iter.reset(key);\r\n        var node = this._root;\r\n        while (node) {\r\n            var val = iter.cmp(node.segment);\r\n            if (val > 0) {\r\n                // left\r\n                node = node.left;\r\n            }\r\n            else if (val < 0) {\r\n                // right\r\n                node = node.right;\r\n            }\r\n            else if (iter.hasNext()) {\r\n                // mid\r\n                iter.next();\r\n                node = node.mid;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return node ? node.value : undefined;\r\n    };\r\n    TernarySearchTree.prototype.findSubstr = function (key) {\r\n        var iter = this._iter.reset(key);\r\n        var node = this._root;\r\n        var candidate = undefined;\r\n        while (node) {\r\n            var val = iter.cmp(node.segment);\r\n            if (val > 0) {\r\n                // left\r\n                node = node.left;\r\n            }\r\n            else if (val < 0) {\r\n                // right\r\n                node = node.right;\r\n            }\r\n            else if (iter.hasNext()) {\r\n                // mid\r\n                iter.next();\r\n                candidate = node.value || candidate;\r\n                node = node.mid;\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n        }\r\n        return node && node.value || candidate;\r\n    };\r\n    TernarySearchTree.prototype.forEach = function (callback) {\r\n        this._forEach(this._root, callback);\r\n    };\r\n    TernarySearchTree.prototype._forEach = function (node, callback) {\r\n        if (node) {\r\n            // left\r\n            this._forEach(node.left, callback);\r\n            // node\r\n            if (node.value) {\r\n                // callback(node.value, this._iter.join(parts));\r\n                callback(node.value, node.key);\r\n            }\r\n            // mid\r\n            this._forEach(node.mid, callback);\r\n            // right\r\n            this._forEach(node.right, callback);\r\n        }\r\n    };\r\n    return TernarySearchTree;\r\n}());\r\nexport { TernarySearchTree };\r\nvar ResourceMap = /** @class */ (function () {\r\n    function ResourceMap() {\r\n        this.map = new Map();\r\n        this.ignoreCase = false; // in the future this should be an uri-comparator\r\n    }\r\n    ResourceMap.prototype.set = function (resource, value) {\r\n        this.map.set(this.toKey(resource), value);\r\n    };\r\n    ResourceMap.prototype.get = function (resource) {\r\n        return this.map.get(this.toKey(resource));\r\n    };\r\n    ResourceMap.prototype.toKey = function (resource) {\r\n        var key = resource.toString();\r\n        if (this.ignoreCase) {\r\n            key = key.toLowerCase();\r\n        }\r\n        return key;\r\n    };\r\n    return ResourceMap;\r\n}());\r\nexport { ResourceMap };\r\nvar LinkedMap = /** @class */ (function () {\r\n    function LinkedMap() {\r\n        this._map = new Map();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    }\r\n    LinkedMap.prototype.clear = function () {\r\n        this._map.clear();\r\n        this._head = undefined;\r\n        this._tail = undefined;\r\n        this._size = 0;\r\n    };\r\n    Object.defineProperty(LinkedMap.prototype, \"size\", {\r\n        get: function () {\r\n            return this._size;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    LinkedMap.prototype.get = function (key, touch) {\r\n        if (touch === void 0) { touch = 0 /* None */; }\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        if (touch !== 0 /* None */) {\r\n            this.touch(item, touch);\r\n        }\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.set = function (key, value, touch) {\r\n        if (touch === void 0) { touch = 0 /* None */; }\r\n        var item = this._map.get(key);\r\n        if (item) {\r\n            item.value = value;\r\n            if (touch !== 0 /* None */) {\r\n                this.touch(item, touch);\r\n            }\r\n        }\r\n        else {\r\n            item = { key: key, value: value, next: undefined, previous: undefined };\r\n            switch (touch) {\r\n                case 0 /* None */:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                case 1 /* AsOld */:\r\n                    this.addItemFirst(item);\r\n                    break;\r\n                case 2 /* AsNew */:\r\n                    this.addItemLast(item);\r\n                    break;\r\n                default:\r\n                    this.addItemLast(item);\r\n                    break;\r\n            }\r\n            this._map.set(key, item);\r\n            this._size++;\r\n        }\r\n    };\r\n    LinkedMap.prototype.delete = function (key) {\r\n        return !!this.remove(key);\r\n    };\r\n    LinkedMap.prototype.remove = function (key) {\r\n        var item = this._map.get(key);\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        this._map.delete(key);\r\n        this.removeItem(item);\r\n        this._size--;\r\n        return item.value;\r\n    };\r\n    LinkedMap.prototype.forEach = function (callbackfn, thisArg) {\r\n        var current = this._head;\r\n        while (current) {\r\n            if (thisArg) {\r\n                callbackfn.bind(thisArg)(current.value, current.key, this);\r\n            }\r\n            else {\r\n                callbackfn(current.value, current.key, this);\r\n            }\r\n            current = current.next;\r\n        }\r\n    };\r\n    /* VS Code / Monaco editor runs on es5 which has no Symbol.iterator\r\n    keys(): IterableIterator<K> {\r\n        const current = this._head;\r\n        const iterator: IterableIterator<K> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<K> {\r\n                if (current) {\r\n                    const result = { value: current.key, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n\r\n    values(): IterableIterator<V> {\r\n        const current = this._head;\r\n        const iterator: IterableIterator<V> = {\r\n            [Symbol.iterator]() {\r\n                return iterator;\r\n            },\r\n            next():IteratorResult<V> {\r\n                if (current) {\r\n                    const result = { value: current.value, done: false };\r\n                    current = current.next;\r\n                    return result;\r\n                } else {\r\n                    return { value: undefined, done: true };\r\n                }\r\n            }\r\n        };\r\n        return iterator;\r\n    }\r\n    */\r\n    LinkedMap.prototype.trimOld = function (newSize) {\r\n        if (newSize >= this.size) {\r\n            return;\r\n        }\r\n        if (newSize === 0) {\r\n            this.clear();\r\n            return;\r\n        }\r\n        var current = this._head;\r\n        var currentSize = this.size;\r\n        while (current && currentSize > newSize) {\r\n            this._map.delete(current.key);\r\n            current = current.next;\r\n            currentSize--;\r\n        }\r\n        this._head = current;\r\n        this._size = currentSize;\r\n        if (current) {\r\n            current.previous = undefined;\r\n        }\r\n    };\r\n    LinkedMap.prototype.addItemFirst = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._tail = item;\r\n        }\r\n        else if (!this._head) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n        }\r\n        this._head = item;\r\n    };\r\n    LinkedMap.prototype.addItemLast = function (item) {\r\n        // First time Insert\r\n        if (!this._head && !this._tail) {\r\n            this._head = item;\r\n        }\r\n        else if (!this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        else {\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n        }\r\n        this._tail = item;\r\n    };\r\n    LinkedMap.prototype.removeItem = function (item) {\r\n        if (item === this._head && item === this._tail) {\r\n            this._head = undefined;\r\n            this._tail = undefined;\r\n        }\r\n        else if (item === this._head) {\r\n            // This can only happend if size === 1 which is handle\r\n            // by the case above.\r\n            if (!item.next) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            item.next.previous = undefined;\r\n            this._head = item.next;\r\n        }\r\n        else if (item === this._tail) {\r\n            // This can only happend if size === 1 which is handle\r\n            // by the case above.\r\n            if (!item.previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            item.previous.next = undefined;\r\n            this._tail = item.previous;\r\n        }\r\n        else {\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            if (!next || !previous) {\r\n                throw new Error('Invalid list');\r\n            }\r\n            next.previous = previous;\r\n            previous.next = next;\r\n        }\r\n        item.next = undefined;\r\n        item.previous = undefined;\r\n    };\r\n    LinkedMap.prototype.touch = function (item, touch) {\r\n        if (!this._head || !this._tail) {\r\n            throw new Error('Invalid list');\r\n        }\r\n        if ((touch !== 1 /* AsOld */ && touch !== 2 /* AsNew */)) {\r\n            return;\r\n        }\r\n        if (touch === 1 /* AsOld */) {\r\n            if (item === this._head) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item\r\n            if (item === this._tail) {\r\n                // previous must be defined since item was not head but is tail\r\n                // So there are more than on item in the map\r\n                previous.next = undefined;\r\n                this._tail = previous;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            // Insert the node at head\r\n            item.previous = undefined;\r\n            item.next = this._head;\r\n            this._head.previous = item;\r\n            this._head = item;\r\n        }\r\n        else if (touch === 2 /* AsNew */) {\r\n            if (item === this._tail) {\r\n                return;\r\n            }\r\n            var next = item.next;\r\n            var previous = item.previous;\r\n            // Unlink the item.\r\n            if (item === this._head) {\r\n                // next must be defined since item was not tail but is head\r\n                // So there are more than on item in the map\r\n                next.previous = undefined;\r\n                this._head = next;\r\n            }\r\n            else {\r\n                // Both next and previous are not undefined since item was neither head nor tail.\r\n                next.previous = previous;\r\n                previous.next = next;\r\n            }\r\n            item.next = undefined;\r\n            item.previous = this._tail;\r\n            this._tail.next = item;\r\n            this._tail = item;\r\n        }\r\n    };\r\n    LinkedMap.prototype.toJSON = function () {\r\n        var data = [];\r\n        this.forEach(function (value, key) {\r\n            data.push([key, value]);\r\n        });\r\n        return data;\r\n    };\r\n    return LinkedMap;\r\n}());\r\nexport { LinkedMap };\r\nvar LRUCache = /** @class */ (function (_super) {\r\n    __extends(LRUCache, _super);\r\n    function LRUCache(limit, ratio) {\r\n        if (ratio === void 0) { ratio = 1; }\r\n        var _this = _super.call(this) || this;\r\n        _this._limit = limit;\r\n        _this._ratio = Math.min(Math.max(0, ratio), 1);\r\n        return _this;\r\n    }\r\n    LRUCache.prototype.get = function (key) {\r\n        return _super.prototype.get.call(this, key, 2 /* AsNew */);\r\n    };\r\n    LRUCache.prototype.peek = function (key) {\r\n        return _super.prototype.get.call(this, key, 0 /* None */);\r\n    };\r\n    LRUCache.prototype.set = function (key, value) {\r\n        _super.prototype.set.call(this, key, value, 2 /* AsNew */);\r\n        this.checkTrim();\r\n    };\r\n    LRUCache.prototype.checkTrim = function () {\r\n        if (this.size > this._limit) {\r\n            this.trimOld(Math.round(this._limit * this._ratio));\r\n        }\r\n    };\r\n    return LRUCache;\r\n}(LinkedMap));\r\nexport { LRUCache };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Emitter } from './event.js';\r\nimport { Disposable } from './lifecycle.js';\r\nvar ScrollState = /** @class */ (function () {\r\n    function ScrollState(width, scrollWidth, scrollLeft, height, scrollHeight, scrollTop) {\r\n        width = width | 0;\r\n        scrollWidth = scrollWidth | 0;\r\n        scrollLeft = scrollLeft | 0;\r\n        height = height | 0;\r\n        scrollHeight = scrollHeight | 0;\r\n        scrollTop = scrollTop | 0;\r\n        if (width < 0) {\r\n            width = 0;\r\n        }\r\n        if (scrollLeft + width > scrollWidth) {\r\n            scrollLeft = scrollWidth - width;\r\n        }\r\n        if (scrollLeft < 0) {\r\n            scrollLeft = 0;\r\n        }\r\n        if (height < 0) {\r\n            height = 0;\r\n        }\r\n        if (scrollTop + height > scrollHeight) {\r\n            scrollTop = scrollHeight - height;\r\n        }\r\n        if (scrollTop < 0) {\r\n            scrollTop = 0;\r\n        }\r\n        this.width = width;\r\n        this.scrollWidth = scrollWidth;\r\n        this.scrollLeft = scrollLeft;\r\n        this.height = height;\r\n        this.scrollHeight = scrollHeight;\r\n        this.scrollTop = scrollTop;\r\n    }\r\n    ScrollState.prototype.equals = function (other) {\r\n        return (this.width === other.width\r\n            && this.scrollWidth === other.scrollWidth\r\n            && this.scrollLeft === other.scrollLeft\r\n            && this.height === other.height\r\n            && this.scrollHeight === other.scrollHeight\r\n            && this.scrollTop === other.scrollTop);\r\n    };\r\n    ScrollState.prototype.withScrollDimensions = function (update) {\r\n        return new ScrollState((typeof update.width !== 'undefined' ? update.width : this.width), (typeof update.scrollWidth !== 'undefined' ? update.scrollWidth : this.scrollWidth), this.scrollLeft, (typeof update.height !== 'undefined' ? update.height : this.height), (typeof update.scrollHeight !== 'undefined' ? update.scrollHeight : this.scrollHeight), this.scrollTop);\r\n    };\r\n    ScrollState.prototype.withScrollPosition = function (update) {\r\n        return new ScrollState(this.width, this.scrollWidth, (typeof update.scrollLeft !== 'undefined' ? update.scrollLeft : this.scrollLeft), this.height, this.scrollHeight, (typeof update.scrollTop !== 'undefined' ? update.scrollTop : this.scrollTop));\r\n    };\r\n    ScrollState.prototype.createScrollEvent = function (previous) {\r\n        var widthChanged = (this.width !== previous.width);\r\n        var scrollWidthChanged = (this.scrollWidth !== previous.scrollWidth);\r\n        var scrollLeftChanged = (this.scrollLeft !== previous.scrollLeft);\r\n        var heightChanged = (this.height !== previous.height);\r\n        var scrollHeightChanged = (this.scrollHeight !== previous.scrollHeight);\r\n        var scrollTopChanged = (this.scrollTop !== previous.scrollTop);\r\n        return {\r\n            width: this.width,\r\n            scrollWidth: this.scrollWidth,\r\n            scrollLeft: this.scrollLeft,\r\n            height: this.height,\r\n            scrollHeight: this.scrollHeight,\r\n            scrollTop: this.scrollTop,\r\n            widthChanged: widthChanged,\r\n            scrollWidthChanged: scrollWidthChanged,\r\n            scrollLeftChanged: scrollLeftChanged,\r\n            heightChanged: heightChanged,\r\n            scrollHeightChanged: scrollHeightChanged,\r\n            scrollTopChanged: scrollTopChanged,\r\n        };\r\n    };\r\n    return ScrollState;\r\n}());\r\nexport { ScrollState };\r\nvar Scrollable = /** @class */ (function (_super) {\r\n    __extends(Scrollable, _super);\r\n    function Scrollable(smoothScrollDuration, scheduleAtNextAnimationFrame) {\r\n        var _this = _super.call(this) || this;\r\n        _this._onScroll = _this._register(new Emitter());\r\n        _this.onScroll = _this._onScroll.event;\r\n        _this._smoothScrollDuration = smoothScrollDuration;\r\n        _this._scheduleAtNextAnimationFrame = scheduleAtNextAnimationFrame;\r\n        _this._state = new ScrollState(0, 0, 0, 0, 0, 0);\r\n        _this._smoothScrolling = null;\r\n        return _this;\r\n    }\r\n    Scrollable.prototype.dispose = function () {\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n        }\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    Scrollable.prototype.setSmoothScrollDuration = function (smoothScrollDuration) {\r\n        this._smoothScrollDuration = smoothScrollDuration;\r\n    };\r\n    Scrollable.prototype.validateScrollPosition = function (scrollPosition) {\r\n        return this._state.withScrollPosition(scrollPosition);\r\n    };\r\n    Scrollable.prototype.getScrollDimensions = function () {\r\n        return this._state;\r\n    };\r\n    Scrollable.prototype.setScrollDimensions = function (dimensions) {\r\n        var newState = this._state.withScrollDimensions(dimensions);\r\n        this._setState(newState);\r\n        // Validate outstanding animated scroll position target\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.acceptScrollDimensions(this._state);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the final scroll position that the instance will have once the smooth scroll animation concludes.\r\n     * If no scroll animation is occurring, it will return the current scroll position instead.\r\n     */\r\n    Scrollable.prototype.getFutureScrollPosition = function () {\r\n        if (this._smoothScrolling) {\r\n            return this._smoothScrolling.to;\r\n        }\r\n        return this._state;\r\n    };\r\n    /**\r\n     * Returns the current scroll position.\r\n     * Note: This result might be an intermediate scroll position, as there might be an ongoing smooth scroll animation.\r\n     */\r\n    Scrollable.prototype.getCurrentScrollPosition = function () {\r\n        return this._state;\r\n    };\r\n    Scrollable.prototype.setScrollPositionNow = function (update) {\r\n        // no smooth scrolling requested\r\n        var newState = this._state.withScrollPosition(update);\r\n        // Terminate any outstanding smooth scrolling\r\n        if (this._smoothScrolling) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n        }\r\n        this._setState(newState);\r\n    };\r\n    Scrollable.prototype.setScrollPositionSmooth = function (update) {\r\n        var _this = this;\r\n        if (this._smoothScrollDuration === 0) {\r\n            // Smooth scrolling not supported.\r\n            return this.setScrollPositionNow(update);\r\n        }\r\n        if (this._smoothScrolling) {\r\n            // Combine our pending scrollLeft/scrollTop with incoming scrollLeft/scrollTop\r\n            update = {\r\n                scrollLeft: (typeof update.scrollLeft === 'undefined' ? this._smoothScrolling.to.scrollLeft : update.scrollLeft),\r\n                scrollTop: (typeof update.scrollTop === 'undefined' ? this._smoothScrolling.to.scrollTop : update.scrollTop)\r\n            };\r\n            // Validate `update`\r\n            var validTarget = this._state.withScrollPosition(update);\r\n            if (this._smoothScrolling.to.scrollLeft === validTarget.scrollLeft && this._smoothScrolling.to.scrollTop === validTarget.scrollTop) {\r\n                // No need to interrupt or extend the current animation since we're going to the same place\r\n                return;\r\n            }\r\n            var newSmoothScrolling = this._smoothScrolling.combine(this._state, validTarget, this._smoothScrollDuration);\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = newSmoothScrolling;\r\n        }\r\n        else {\r\n            // Validate `update`\r\n            var validTarget = this._state.withScrollPosition(update);\r\n            this._smoothScrolling = SmoothScrollingOperation.start(this._state, validTarget, this._smoothScrollDuration);\r\n        }\r\n        // Begin smooth scrolling animation\r\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(function () {\r\n            if (!_this._smoothScrolling) {\r\n                return;\r\n            }\r\n            _this._smoothScrolling.animationFrameDisposable = null;\r\n            _this._performSmoothScrolling();\r\n        });\r\n    };\r\n    Scrollable.prototype._performSmoothScrolling = function () {\r\n        var _this = this;\r\n        if (!this._smoothScrolling) {\r\n            return;\r\n        }\r\n        var update = this._smoothScrolling.tick();\r\n        var newState = this._state.withScrollPosition(update);\r\n        this._setState(newState);\r\n        if (update.isDone) {\r\n            this._smoothScrolling.dispose();\r\n            this._smoothScrolling = null;\r\n            return;\r\n        }\r\n        // Continue smooth scrolling animation\r\n        this._smoothScrolling.animationFrameDisposable = this._scheduleAtNextAnimationFrame(function () {\r\n            if (!_this._smoothScrolling) {\r\n                return;\r\n            }\r\n            _this._smoothScrolling.animationFrameDisposable = null;\r\n            _this._performSmoothScrolling();\r\n        });\r\n    };\r\n    Scrollable.prototype._setState = function (newState) {\r\n        var oldState = this._state;\r\n        if (oldState.equals(newState)) {\r\n            // no change\r\n            return;\r\n        }\r\n        this._state = newState;\r\n        this._onScroll.fire(this._state.createScrollEvent(oldState));\r\n    };\r\n    return Scrollable;\r\n}(Disposable));\r\nexport { Scrollable };\r\nvar SmoothScrollingUpdate = /** @class */ (function () {\r\n    function SmoothScrollingUpdate(scrollLeft, scrollTop, isDone) {\r\n        this.scrollLeft = scrollLeft;\r\n        this.scrollTop = scrollTop;\r\n        this.isDone = isDone;\r\n    }\r\n    return SmoothScrollingUpdate;\r\n}());\r\nexport { SmoothScrollingUpdate };\r\nfunction createEaseOutCubic(from, to) {\r\n    var delta = to - from;\r\n    return function (completion) {\r\n        return from + delta * easeOutCubic(completion);\r\n    };\r\n}\r\nfunction createComposed(a, b, cut) {\r\n    return function (completion) {\r\n        if (completion < cut) {\r\n            return a(completion / cut);\r\n        }\r\n        return b((completion - cut) / (1 - cut));\r\n    };\r\n}\r\nvar SmoothScrollingOperation = /** @class */ (function () {\r\n    function SmoothScrollingOperation(from, to, startTime, duration) {\r\n        this.from = from;\r\n        this.to = to;\r\n        this.duration = duration;\r\n        this._startTime = startTime;\r\n        this.animationFrameDisposable = null;\r\n        this._initAnimations();\r\n    }\r\n    SmoothScrollingOperation.prototype._initAnimations = function () {\r\n        this.scrollLeft = this._initAnimation(this.from.scrollLeft, this.to.scrollLeft, this.to.width);\r\n        this.scrollTop = this._initAnimation(this.from.scrollTop, this.to.scrollTop, this.to.height);\r\n    };\r\n    SmoothScrollingOperation.prototype._initAnimation = function (from, to, viewportSize) {\r\n        var delta = Math.abs(from - to);\r\n        if (delta > 2.5 * viewportSize) {\r\n            var stop1 = void 0, stop2 = void 0;\r\n            if (from < to) {\r\n                // scroll to 75% of the viewportSize\r\n                stop1 = from + 0.75 * viewportSize;\r\n                stop2 = to - 0.75 * viewportSize;\r\n            }\r\n            else {\r\n                stop1 = from - 0.75 * viewportSize;\r\n                stop2 = to + 0.75 * viewportSize;\r\n            }\r\n            return createComposed(createEaseOutCubic(from, stop1), createEaseOutCubic(stop2, to), 0.33);\r\n        }\r\n        return createEaseOutCubic(from, to);\r\n    };\r\n    SmoothScrollingOperation.prototype.dispose = function () {\r\n        if (this.animationFrameDisposable !== null) {\r\n            this.animationFrameDisposable.dispose();\r\n            this.animationFrameDisposable = null;\r\n        }\r\n    };\r\n    SmoothScrollingOperation.prototype.acceptScrollDimensions = function (state) {\r\n        this.to = state.withScrollPosition(this.to);\r\n        this._initAnimations();\r\n    };\r\n    SmoothScrollingOperation.prototype.tick = function () {\r\n        return this._tick(Date.now());\r\n    };\r\n    SmoothScrollingOperation.prototype._tick = function (now) {\r\n        var completion = (now - this._startTime) / this.duration;\r\n        if (completion < 1) {\r\n            var newScrollLeft = this.scrollLeft(completion);\r\n            var newScrollTop = this.scrollTop(completion);\r\n            return new SmoothScrollingUpdate(newScrollLeft, newScrollTop, false);\r\n        }\r\n        return new SmoothScrollingUpdate(this.to.scrollLeft, this.to.scrollTop, true);\r\n    };\r\n    SmoothScrollingOperation.prototype.combine = function (from, to, duration) {\r\n        return SmoothScrollingOperation.start(from, to, duration);\r\n    };\r\n    SmoothScrollingOperation.start = function (from, to, duration) {\r\n        // +10 / -10 : pretend the animation already started for a quicker response to a scroll request\r\n        duration = duration + 10;\r\n        var startTime = Date.now() - 10;\r\n        return new SmoothScrollingOperation(from, to, startTime, duration);\r\n    };\r\n    return SmoothScrollingOperation;\r\n}());\r\nexport { SmoothScrollingOperation };\r\nfunction easeInCubic(t) {\r\n    return Math.pow(t, 3);\r\n}\r\nfunction easeOutCubic(t) {\r\n    return 1 - easeInCubic(1 - t);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { URI } from './uri.js';\r\nexport function parse(text) {\r\n    var data = JSON.parse(text);\r\n    data = revive(data);\r\n    return data;\r\n}\r\nexport function revive(obj, depth) {\r\n    if (depth === void 0) { depth = 0; }\r\n    if (!obj || depth > 200) {\r\n        return obj;\r\n    }\r\n    if (typeof obj === 'object') {\r\n        switch (obj.$mid) {\r\n            case 1: return URI.revive(obj);\r\n            case 2: return new RegExp(obj.source, obj.flags);\r\n        }\r\n        // walk object (or array)\r\n        for (var key in obj) {\r\n            if (Object.hasOwnProperty.call(obj, key)) {\r\n                obj[key] = revive(obj[key], depth + 1);\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport function clamp(value, min, max) {\r\n    return Math.min(Math.max(value, min), max);\r\n}\r\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n// BEGIN MONACOCHANGE\nvar __marked_exports;\n// END MONACOCHANGE\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( {0,3})(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d{1,9}\\.)/;\nblock.item = /^( *)(bull) ?[^\\n]*(?:\\n(?!\\1bull ?)[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ {0,3}(`{3,}|~{3,})([^`\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?:\\n+|$)|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = Object.create(null);\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      listStart,\n      listItems,\n      t,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? rtrim(cap, '\\n')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2] ? cap[2].trim() : cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (cap = this.rules.nptable.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      listStart = {\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : '',\n        loose: false\n      };\n\n      this.tokens.push(listStart);\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      listItems = [];\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) */, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull.length > 1 ? b.length === 1\n            : (b.length > 1 || (this.options.smartLists && b !== bull))) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        if (loose) {\n          listStart.loose = true;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        t = {\n          type: 'list_item_start',\n          task: istask,\n          checked: ischecked,\n          loose: loose\n        };\n\n        listItems.push(t);\n        this.tokens.push(t);\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      if (listStart.loose) {\n        l = listItems.length;\n        i = 0;\n        for (; i < l; i++) {\n          listItems[i].loose = true;\n        }\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (cap = this.rules.table.exec(src)) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s_])__(?!_)|^\\*\\*([^\\s*])\\*\\*(?!\\*)|^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s_])_(?!_)|^\\*([^\\s*\"<\\[])\\*(?!\\*)|^_([^\\s][\\s\\S]*?[^\\s_])_(?!_|[^\\spunctuation])|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_|[^\\spunctuation])|^\\*([^\\s\"<\\[][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*\"<\\[][\\s\\S]*?[^\\s])\\*(?!\\*)/,\n  code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n  br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n  del: noop,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*]|\\b_|$)|[^ ](?= {2,}\\n))|(?= {2,}\\n))/\n};\n\n// list of punctuation marks from common mark spec\n// without ` and ] to workaround Rule 17 (inline code blocks/links)\ninline._punctuation = '!\"#$%&\\'()*+,\\\\-./:;<=>?@\\\\[^_{|}~';\ninline.em = edit(inline.em).replace(/punctuation/g, inline._punctuation).getRegex();\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|`(?!`)|[^\\[\\]\\\\`])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|[^\\s\\x00-\\x1f]*)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n  url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~+(?=\\S)([\\s\\S]*?\\S)~+/,\n  text: /^(`+|[^`])(?:[\\s\\S]*?(?:(?=[\\\\<!\\[`*~]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))|(?= {2,}\\n|[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@))/\n});\n\ninline.gfm.url = edit(inline.gfm.url, 'i')\n  .replace('email', inline.gfm._extended_email)\n  .getRegex();\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace(/\\{2,\\}/g, '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap,\n      prevCapZero;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += escape(cap[1]);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = true;\n      } else if (this.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n        this.inRawBlock = false;\n      }\n\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0];\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      var lastParenIndex = findClosingBracket(cap[2], '()');\n      if (lastParenIndex > -1) {\n        var linkLen = cap[0].length - (cap[2].length - lastParenIndex) - (cap[3] || '').length;\n        cap[2] = cap[2].substring(0, lastParenIndex);\n        cap[0] = cap[0].substring(0, linkLen).trim();\n        cap[3] = '';\n      }\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        // do extended autolink path validation\n        do {\n          prevCapZero = cap[0];\n          cap[0] = this.rules._backpedal.exec(cap[0])[0];\n        } while (prevCapZero !== cap[0]);\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      src = src.substring(cap[0].length);\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (this.inRawBlock) {\n        out += this.renderer.text(cap[0]);\n      } else {\n        out += this.renderer.text(escape(this.smartypants(cap[0])));\n      }\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n};\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, infostring, escaped) {\n  var lang = (infostring || '').match(/\\S*/)[0];\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw, slugger) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + slugger.slug(raw)\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n};\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n  if (href === null) {\n    return text;\n  }\n\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n};\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n};\n\nTextRenderer.prototype.br = function() {\n  return '';\n};\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n  this.slugger = new Slugger();\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)),\n        this.slugger);\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n      var loose = this.token.loose;\n      var checked = this.token.checked;\n      var task = this.token.task;\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += !loose && this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n      return this.renderer.listitem(body, task, checked);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n    default: {\n      var errMsg = 'Token with \"' + this.token.type + '\" type was not found.';\n      if (this.options.silent) {\n        console.log(errMsg);\n      } else {\n        throw new Error(errMsg);\n      }\n    }\n  }\n};\n\n/**\n * Slugger generates header id\n */\n\nfunction Slugger () {\n  this.seen = {};\n}\n\n/**\n * Convert string to unique id\n */\n\nSlugger.prototype.slug = function (value) {\n  var slug = value\n    .toLowerCase()\n    .trim()\n    .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '')\n    .replace(/\\s/g, '-');\n\n  if (this.seen.hasOwnProperty(slug)) {\n    var originalSlug = slug;\n    do {\n      this.seen[originalSlug]++;\n      slug = originalSlug + '-' + this.seen[originalSlug];\n    } while (this.seen.hasOwnProperty(slug));\n  }\n  this.seen[slug] = 0;\n\n  return slug;\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  if (encode) {\n    if (escape.escapeTest.test(html)) {\n      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });\n    }\n  } else {\n    if (escape.escapeTestNoEncode.test(html)) {\n      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });\n    }\n  }\n\n  return html;\n}\n\nescape.escapeTest = /[&<>\"']/;\nescape.escapeReplace = /[&<>\"']/g;\nescape.replacements = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\nescape.escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\nescape.escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction cleanUrl(sanitize, base, href) {\n  if (sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return null;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return null;\n    }\n  }\n  if (base && !originIndependentUrl.test(href)) {\n    href = resolveUrl(base, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return null;\n  }\n  return href;\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = rtrim(base, '/', true);\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  // ensure that every cell-delimiting pipe has a space\n  // before it to distinguish it from an escaped pipe\n  var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n        var escaped = false,\n            curr = offset;\n        while (--curr >= 0 && str[curr] === '\\\\') escaped = !escaped;\n        if (escaped) {\n          // odd number of slashes means | is escaped\n          // so we leave it alone\n          return '|';\n        } else {\n          // add space before unescaped |\n          return ' |';\n        }\n      }),\n      cells = row.split(/ \\|/),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    // leading or trailing whitespace is ignored per the gfm spec\n    cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n// /c*$/ is vulnerable to REDOS.\n// invert: Remove suffix of non-c chars instead. Default falsey.\nfunction rtrim(str, c, invert) {\n  if (str.length === 0) {\n    return '';\n  }\n\n  // Length of suffix matching the invert condition.\n  var suffLen = 0;\n\n  // Step left until we fail to match the invert condition.\n  while (suffLen < str.length) {\n    var currChar = str.charAt(str.length - suffLen - 1);\n    if (currChar === c && !invert) {\n      suffLen++;\n    } else if (currChar !== c && invert) {\n      suffLen++;\n    } else {\n      break;\n    }\n  }\n\n  return str.substr(0, str.length - suffLen);\n}\n\nfunction findClosingBracket(str, b) {\n  if (str.indexOf(b[1]) === -1) {\n    return -1;\n  }\n  var level = 0;\n  for (var i = 0; i < str.length; i++) {\n    if (str[i] === '\\\\') {\n      i++;\n    } else if (str[i] === b[0]) {\n      level++;\n    } else if (str[i] === b[1]) {\n      level--;\n      if (level < 0) {\n        return i;\n      }\n    }\n  }\n  return -1;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt);\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n};\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.Slugger = Slugger;\n\nmarked.parse = marked;\n\n// BEGIN MONACOCHANGE\n// if (typeof module !== 'undefined' && typeof exports === 'object') {\n//   module.exports = marked;\n// } else if (typeof define === 'function' && define.amd) {\n//   define(function() { return marked; });\n// } else {\n//   root.marked = marked;\n// }\n// })(this || (typeof window !== 'undefined' ? window : global));\n__marked_exports = marked;\n}).call(this);\n\n// ESM-comment-begin\n// define(function() { return __marked_exports; });\n// ESM-comment-end\n\n// ESM-uncomment-begin\nexport var marked = __marked_exports;\nexport var Parser = __marked_exports.Parser;\nexport var parser = __marked_exports.parser;\nexport var Renderer = __marked_exports.Renderer;\nexport var TextRenderer = __marked_exports.TextRenderer;\nexport var Lexer = __marked_exports.Lexer;\nexport var lexer = __marked_exports.lexer;\nexport var InlineLexer = __marked_exports.InlineLexer;\nexport var inlineLexer = __marked_exports.inlineLexer;\nexport var parse = __marked_exports.parse;\n// ESM-uncomment-end\n// END MONACOCHANGE\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../nls.js';\r\nimport * as strings from './strings.js';\r\nvar Severity;\r\n(function (Severity) {\r\n    Severity[Severity[\"Ignore\"] = 0] = \"Ignore\";\r\n    Severity[Severity[\"Info\"] = 1] = \"Info\";\r\n    Severity[Severity[\"Warning\"] = 2] = \"Warning\";\r\n    Severity[Severity[\"Error\"] = 3] = \"Error\";\r\n})(Severity || (Severity = {}));\r\n(function (Severity) {\r\n    var _error = 'error';\r\n    var _warning = 'warning';\r\n    var _warn = 'warn';\r\n    var _info = 'info';\r\n    var _displayStrings = Object.create(null);\r\n    _displayStrings[Severity.Error] = nls.localize('sev.error', \"Error\");\r\n    _displayStrings[Severity.Warning] = nls.localize('sev.warning', \"Warning\");\r\n    _displayStrings[Severity.Info] = nls.localize('sev.info', \"Info\");\r\n    /**\r\n     * Parses 'error', 'warning', 'warn', 'info' in call casings\r\n     * and falls back to ignore.\r\n     */\r\n    function fromValue(value) {\r\n        if (!value) {\r\n            return Severity.Ignore;\r\n        }\r\n        if (strings.equalsIgnoreCase(_error, value)) {\r\n            return Severity.Error;\r\n        }\r\n        if (strings.equalsIgnoreCase(_warning, value) || strings.equalsIgnoreCase(_warn, value)) {\r\n            return Severity.Warning;\r\n        }\r\n        if (strings.equalsIgnoreCase(_info, value)) {\r\n            return Severity.Info;\r\n        }\r\n        return Severity.Ignore;\r\n    }\r\n    Severity.fromValue = fromValue;\r\n})(Severity || (Severity = {}));\r\nexport default Severity;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nimport * as extpath from './extpath.js';\r\nimport * as paths from './path.js';\r\nimport { URI } from './uri.js';\r\nimport { equalsIgnoreCase } from './strings.js';\r\nimport { Schemas } from './network.js';\r\nimport { isLinux, isWindows } from './platform.js';\r\nexport function hasToIgnoreCase(resource) {\r\n    // A file scheme resource is in the same platform as code, so ignore case for non linux platforms\r\n    // Resource can be from another platform. Lowering the case as an hack. Should come from File system provider\r\n    return resource && resource.scheme === Schemas.file ? !isLinux : true;\r\n}\r\nexport function basenameOrAuthority(resource) {\r\n    return basename(resource) || resource.authority;\r\n}\r\n/**\r\n * Tests wheter the two authorities are the same\r\n */\r\nexport function isEqualAuthority(a1, a2) {\r\n    return a1 === a2 || equalsIgnoreCase(a1, a2);\r\n}\r\nexport function isEqual(first, second, ignoreCase) {\r\n    if (ignoreCase === void 0) { ignoreCase = hasToIgnoreCase(first); }\r\n    if (first === second) {\r\n        return true;\r\n    }\r\n    if (!first || !second) {\r\n        return false;\r\n    }\r\n    if (first.scheme !== second.scheme || !isEqualAuthority(first.authority, second.authority)) {\r\n        return false;\r\n    }\r\n    var p1 = first.path || '/', p2 = second.path || '/';\r\n    return p1 === p2 || ignoreCase && equalsIgnoreCase(p1 || '/', p2 || '/');\r\n}\r\nexport function basename(resource) {\r\n    return paths.posix.basename(resource.path);\r\n}\r\n/**\r\n * Return a URI representing the directory of a URI path.\r\n *\r\n * @param resource The input URI.\r\n * @returns The URI representing the directory of the input URI.\r\n */\r\nexport function dirname(resource) {\r\n    if (resource.path.length === 0) {\r\n        return resource;\r\n    }\r\n    if (resource.scheme === Schemas.file) {\r\n        return URI.file(paths.dirname(originalFSPath(resource)));\r\n    }\r\n    var dirname = paths.posix.dirname(resource.path);\r\n    if (resource.authority && dirname.length && dirname.charCodeAt(0) !== 47 /* Slash */) {\r\n        console.error(\"dirname(\\\"\" + resource.toString + \")) resulted in a relative path\");\r\n        dirname = '/'; // If a URI contains an authority component, then the path component must either be empty or begin with a CharCode.Slash (\"/\") character\r\n    }\r\n    return resource.with({\r\n        path: dirname\r\n    });\r\n}\r\n/**\r\n * Join a URI path with path fragments and normalizes the resulting path.\r\n *\r\n * @param resource The input URI.\r\n * @param pathFragment The path fragment to add to the URI path.\r\n * @returns The resulting URI.\r\n */\r\nexport function joinPath(resource) {\r\n    var _a;\r\n    var pathFragment = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        pathFragment[_i - 1] = arguments[_i];\r\n    }\r\n    var joinedPath;\r\n    if (resource.scheme === Schemas.file) {\r\n        joinedPath = URI.file(paths.join.apply(paths, __spreadArrays([originalFSPath(resource)], pathFragment))).path;\r\n    }\r\n    else {\r\n        joinedPath = (_a = paths.posix).join.apply(_a, __spreadArrays([resource.path || '/'], pathFragment));\r\n    }\r\n    return resource.with({\r\n        path: joinedPath\r\n    });\r\n}\r\n/**\r\n * Normalizes the path part of a URI: Resolves `.` and `..` elements with directory names.\r\n *\r\n * @param resource The URI to normalize the path.\r\n * @returns The URI with the normalized path.\r\n */\r\nexport function normalizePath(resource) {\r\n    if (!resource.path.length) {\r\n        return resource;\r\n    }\r\n    var normalizedPath;\r\n    if (resource.scheme === Schemas.file) {\r\n        normalizedPath = URI.file(paths.normalize(originalFSPath(resource))).path;\r\n    }\r\n    else {\r\n        normalizedPath = paths.posix.normalize(resource.path);\r\n    }\r\n    return resource.with({\r\n        path: normalizedPath\r\n    });\r\n}\r\n/**\r\n * Returns the fsPath of an URI where the drive letter is not normalized.\r\n * See #56403.\r\n */\r\nexport function originalFSPath(uri) {\r\n    var value;\r\n    var uriPath = uri.path;\r\n    if (uri.authority && uriPath.length > 1 && uri.scheme === Schemas.file) {\r\n        // unc path: file://shares/c$/far/boo\r\n        value = \"//\" + uri.authority + uriPath;\r\n    }\r\n    else if (isWindows\r\n        && uriPath.charCodeAt(0) === 47 /* Slash */\r\n        && extpath.isWindowsDriveLetter(uriPath.charCodeAt(1))\r\n        && uriPath.charCodeAt(2) === 58 /* Colon */) {\r\n        value = uriPath.substr(1);\r\n    }\r\n    else {\r\n        // other path\r\n        value = uriPath;\r\n    }\r\n    if (isWindows) {\r\n        value = value.replace(/\\//g, '\\\\');\r\n    }\r\n    return value;\r\n}\r\n/**\r\n * Returns a relative path between two URIs. If the URIs don't have the same schema or authority, `undefined` is returned.\r\n * The returned relative path always uses forward slashes.\r\n */\r\nexport function relativePath(from, to, ignoreCase) {\r\n    if (ignoreCase === void 0) { ignoreCase = hasToIgnoreCase(from); }\r\n    if (from.scheme !== to.scheme || !isEqualAuthority(from.authority, to.authority)) {\r\n        return undefined;\r\n    }\r\n    if (from.scheme === Schemas.file) {\r\n        var relativePath_1 = paths.relative(from.path, to.path);\r\n        return isWindows ? extpath.toSlashes(relativePath_1) : relativePath_1;\r\n    }\r\n    var fromPath = from.path || '/', toPath = to.path || '/';\r\n    if (ignoreCase) {\r\n        // make casing of fromPath match toPath\r\n        var i = 0;\r\n        for (var len = Math.min(fromPath.length, toPath.length); i < len; i++) {\r\n            if (fromPath.charCodeAt(i) !== toPath.charCodeAt(i)) {\r\n                if (fromPath.charAt(i).toLowerCase() !== toPath.charAt(i).toLowerCase()) {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        fromPath = toPath.substr(0, i) + fromPath.substr(i);\r\n    }\r\n    return paths.posix.relative(fromPath, toPath);\r\n}\r\n/**\r\n * Data URI related helpers.\r\n */\r\nexport var DataUri;\r\n(function (DataUri) {\r\n    DataUri.META_DATA_LABEL = 'label';\r\n    DataUri.META_DATA_DESCRIPTION = 'description';\r\n    DataUri.META_DATA_SIZE = 'size';\r\n    DataUri.META_DATA_MIME = 'mime';\r\n    function parseMetaData(dataUri) {\r\n        var metadata = new Map();\r\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\r\n        // the metadata is: size:2313;label:SomeLabel;description:SomeDescription\r\n        var meta = dataUri.path.substring(dataUri.path.indexOf(';') + 1, dataUri.path.lastIndexOf(';'));\r\n        meta.split(';').forEach(function (property) {\r\n            var _a = property.split(':'), key = _a[0], value = _a[1];\r\n            if (key && value) {\r\n                metadata.set(key, value);\r\n            }\r\n        });\r\n        // Given a URI of:  data:image/png;size:2313;label:SomeLabel;description:SomeDescription;base64,77+9UE5...\r\n        // the mime is: image/png\r\n        var mime = dataUri.path.substring(0, dataUri.path.indexOf(';'));\r\n        if (mime) {\r\n            metadata.set(DataUri.META_DATA_MIME, mime);\r\n        }\r\n        return metadata;\r\n    }\r\n    DataUri.parseMetaData = parseMetaData;\r\n})(DataUri || (DataUri = {}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nexport var Range;\r\n(function (Range) {\r\n    /**\r\n     * Returns the intersection between two ranges as a range itself.\r\n     * Returns `{ start: 0, end: 0 }` if the intersection is empty.\r\n     */\r\n    function intersect(one, other) {\r\n        if (one.start >= other.end || other.start >= one.end) {\r\n            return { start: 0, end: 0 };\r\n        }\r\n        var start = Math.max(one.start, other.start);\r\n        var end = Math.min(one.end, other.end);\r\n        if (end - start <= 0) {\r\n            return { start: 0, end: 0 };\r\n        }\r\n        return { start: start, end: end };\r\n    }\r\n    Range.intersect = intersect;\r\n    function isEmpty(range) {\r\n        return range.end - range.start <= 0;\r\n    }\r\n    Range.isEmpty = isEmpty;\r\n    function intersects(one, other) {\r\n        return !isEmpty(intersect(one, other));\r\n    }\r\n    Range.intersects = intersects;\r\n    function relativeComplement(one, other) {\r\n        var result = [];\r\n        var first = { start: one.start, end: Math.min(other.start, one.end) };\r\n        var second = { start: Math.max(other.end, one.start), end: one.end };\r\n        if (!isEmpty(first)) {\r\n            result.push(first);\r\n        }\r\n        if (!isEmpty(second)) {\r\n            result.push(second);\r\n        }\r\n        return result;\r\n    }\r\n    Range.relativeComplement = relativeComplement;\r\n})(Range || (Range = {}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isObject, isUndefinedOrNull, isArray } from './types.js';\r\nexport function deepClone(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return obj;\r\n    }\r\n    if (obj instanceof RegExp) {\r\n        // See https://github.com/Microsoft/TypeScript/issues/10990\r\n        return obj;\r\n    }\r\n    var result = Array.isArray(obj) ? [] : {};\r\n    Object.keys(obj).forEach(function (key) {\r\n        if (obj[key] && typeof obj[key] === 'object') {\r\n            result[key] = deepClone(obj[key]);\r\n        }\r\n        else {\r\n            result[key] = obj[key];\r\n        }\r\n    });\r\n    return result;\r\n}\r\nexport function deepFreeze(obj) {\r\n    if (!obj || typeof obj !== 'object') {\r\n        return obj;\r\n    }\r\n    var stack = [obj];\r\n    while (stack.length > 0) {\r\n        var obj_1 = stack.shift();\r\n        Object.freeze(obj_1);\r\n        for (var key in obj_1) {\r\n            if (_hasOwnProperty.call(obj_1, key)) {\r\n                var prop = obj_1[key];\r\n                if (typeof prop === 'object' && !Object.isFrozen(prop)) {\r\n                    stack.push(prop);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return obj;\r\n}\r\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\r\nexport function cloneAndChange(obj, changer) {\r\n    return _cloneAndChange(obj, changer, new Set());\r\n}\r\nfunction _cloneAndChange(obj, changer, seen) {\r\n    if (isUndefinedOrNull(obj)) {\r\n        return obj;\r\n    }\r\n    var changed = changer(obj);\r\n    if (typeof changed !== 'undefined') {\r\n        return changed;\r\n    }\r\n    if (isArray(obj)) {\r\n        var r1 = [];\r\n        for (var _i = 0, obj_2 = obj; _i < obj_2.length; _i++) {\r\n            var e = obj_2[_i];\r\n            r1.push(_cloneAndChange(e, changer, seen));\r\n        }\r\n        return r1;\r\n    }\r\n    if (isObject(obj)) {\r\n        if (seen.has(obj)) {\r\n            throw new Error('Cannot clone recursive data-structure');\r\n        }\r\n        seen.add(obj);\r\n        var r2 = {};\r\n        for (var i2 in obj) {\r\n            if (_hasOwnProperty.call(obj, i2)) {\r\n                r2[i2] = _cloneAndChange(obj[i2], changer, seen);\r\n            }\r\n        }\r\n        seen.delete(obj);\r\n        return r2;\r\n    }\r\n    return obj;\r\n}\r\n/**\r\n * Copies all properties of source into destination. The optional parameter \"overwrite\" allows to control\r\n * if existing properties on the destination should be overwritten or not. Defaults to true (overwrite).\r\n */\r\nexport function mixin(destination, source, overwrite) {\r\n    if (overwrite === void 0) { overwrite = true; }\r\n    if (!isObject(destination)) {\r\n        return source;\r\n    }\r\n    if (isObject(source)) {\r\n        Object.keys(source).forEach(function (key) {\r\n            if (key in destination) {\r\n                if (overwrite) {\r\n                    if (isObject(destination[key]) && isObject(source[key])) {\r\n                        mixin(destination[key], source[key], overwrite);\r\n                    }\r\n                    else {\r\n                        destination[key] = source[key];\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                destination[key] = source[key];\r\n            }\r\n        });\r\n    }\r\n    return destination;\r\n}\r\nexport function assign(destination) {\r\n    var sources = [];\r\n    for (var _i = 1; _i < arguments.length; _i++) {\r\n        sources[_i - 1] = arguments[_i];\r\n    }\r\n    sources.forEach(function (source) { return Object.keys(source).forEach(function (key) { return destination[key] = source[key]; }); });\r\n    return destination;\r\n}\r\nexport function equals(one, other) {\r\n    if (one === other) {\r\n        return true;\r\n    }\r\n    if (one === null || one === undefined || other === null || other === undefined) {\r\n        return false;\r\n    }\r\n    if (typeof one !== typeof other) {\r\n        return false;\r\n    }\r\n    if (typeof one !== 'object') {\r\n        return false;\r\n    }\r\n    if ((Array.isArray(one)) !== (Array.isArray(other))) {\r\n        return false;\r\n    }\r\n    var i;\r\n    var key;\r\n    if (Array.isArray(one)) {\r\n        if (one.length !== other.length) {\r\n            return false;\r\n        }\r\n        for (i = 0; i < one.length; i++) {\r\n            if (!equals(one[i], other[i])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        var oneKeys = [];\r\n        for (key in one) {\r\n            oneKeys.push(key);\r\n        }\r\n        oneKeys.sort();\r\n        var otherKeys = [];\r\n        for (key in other) {\r\n            otherKeys.push(key);\r\n        }\r\n        otherKeys.sort();\r\n        if (!equals(oneKeys, otherKeys)) {\r\n            return false;\r\n        }\r\n        for (i = 0; i < oneKeys.length; i++) {\r\n            if (!equals(one[oneKeys[i]], other[oneKeys[i]])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return true;\r\n}\r\nexport function getOrDefault(obj, fn, defaultValue) {\r\n    var result = fn(obj);\r\n    return typeof result === 'undefined' ? defaultValue : result;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { URI } from './uri.js';\r\nimport * as platform from './platform.js';\r\nexport var Schemas;\r\n(function (Schemas) {\r\n    /**\r\n     * A schema that is used for models that exist in memory\r\n     * only and that have no correspondence on a server or such.\r\n     */\r\n    Schemas.inMemory = 'inmemory';\r\n    /**\r\n     * A schema that is used for setting files\r\n     */\r\n    Schemas.vscode = 'vscode';\r\n    /**\r\n     * A schema that is used for internal private files\r\n     */\r\n    Schemas.internal = 'private';\r\n    /**\r\n     * A walk-through document.\r\n     */\r\n    Schemas.walkThrough = 'walkThrough';\r\n    /**\r\n     * An embedded code snippet.\r\n     */\r\n    Schemas.walkThroughSnippet = 'walkThroughSnippet';\r\n    Schemas.http = 'http';\r\n    Schemas.https = 'https';\r\n    Schemas.file = 'file';\r\n    Schemas.mailto = 'mailto';\r\n    Schemas.untitled = 'untitled';\r\n    Schemas.data = 'data';\r\n    Schemas.command = 'command';\r\n    Schemas.vscodeRemote = 'vscode-remote';\r\n    Schemas.vscodeRemoteResource = 'vscode-remote-resource';\r\n    Schemas.userData = 'vscode-userdata';\r\n})(Schemas || (Schemas = {}));\r\nvar RemoteAuthoritiesImpl = /** @class */ (function () {\r\n    function RemoteAuthoritiesImpl() {\r\n        this._hosts = Object.create(null);\r\n        this._ports = Object.create(null);\r\n        this._connectionTokens = Object.create(null);\r\n        this._preferredWebSchema = 'http';\r\n        this._delegate = null;\r\n    }\r\n    RemoteAuthoritiesImpl.prototype.setPreferredWebSchema = function (schema) {\r\n        this._preferredWebSchema = schema;\r\n    };\r\n    RemoteAuthoritiesImpl.prototype.rewrite = function (uri) {\r\n        if (this._delegate) {\r\n            return this._delegate(uri);\r\n        }\r\n        var authority = uri.authority;\r\n        var host = this._hosts[authority];\r\n        if (host && host.indexOf(':') !== -1) {\r\n            host = \"[\" + host + \"]\";\r\n        }\r\n        var port = this._ports[authority];\r\n        var connectionToken = this._connectionTokens[authority];\r\n        var query = \"path=\" + encodeURIComponent(uri.path);\r\n        if (typeof connectionToken === 'string') {\r\n            query += \"&tkn=\" + encodeURIComponent(connectionToken);\r\n        }\r\n        return URI.from({\r\n            scheme: platform.isWeb ? this._preferredWebSchema : Schemas.vscodeRemoteResource,\r\n            authority: host + \":\" + port,\r\n            path: \"/vscode-remote-resource\",\r\n            query: query\r\n        });\r\n    };\r\n    return RemoteAuthoritiesImpl;\r\n}());\r\nexport var RemoteAuthorities = new RemoteAuthoritiesImpl();\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { basename, posix } from './path.js';\r\nimport { endsWith, startsWithUTF8BOM } from './strings.js';\r\nimport { match } from './glob.js';\r\nimport { Schemas } from './network.js';\r\nimport { DataUri } from './resources.js';\r\nexport var MIME_TEXT = 'text/plain';\r\nexport var MIME_UNKNOWN = 'application/unknown';\r\nvar registeredAssociations = [];\r\nvar nonUserRegisteredAssociations = [];\r\nvar userRegisteredAssociations = [];\r\n/**\r\n * Associate a text mime to the registry.\r\n */\r\nexport function registerTextMime(association, warnOnOverwrite) {\r\n    if (warnOnOverwrite === void 0) { warnOnOverwrite = false; }\r\n    // Register\r\n    var associationItem = toTextMimeAssociationItem(association);\r\n    registeredAssociations.push(associationItem);\r\n    if (!associationItem.userConfigured) {\r\n        nonUserRegisteredAssociations.push(associationItem);\r\n    }\r\n    else {\r\n        userRegisteredAssociations.push(associationItem);\r\n    }\r\n    // Check for conflicts unless this is a user configured association\r\n    if (warnOnOverwrite && !associationItem.userConfigured) {\r\n        registeredAssociations.forEach(function (a) {\r\n            if (a.mime === associationItem.mime || a.userConfigured) {\r\n                return; // same mime or userConfigured is ok\r\n            }\r\n            if (associationItem.extension && a.extension === associationItem.extension) {\r\n                console.warn(\"Overwriting extension <<\" + associationItem.extension + \">> to now point to mime <<\" + associationItem.mime + \">>\");\r\n            }\r\n            if (associationItem.filename && a.filename === associationItem.filename) {\r\n                console.warn(\"Overwriting filename <<\" + associationItem.filename + \">> to now point to mime <<\" + associationItem.mime + \">>\");\r\n            }\r\n            if (associationItem.filepattern && a.filepattern === associationItem.filepattern) {\r\n                console.warn(\"Overwriting filepattern <<\" + associationItem.filepattern + \">> to now point to mime <<\" + associationItem.mime + \">>\");\r\n            }\r\n            if (associationItem.firstline && a.firstline === associationItem.firstline) {\r\n                console.warn(\"Overwriting firstline <<\" + associationItem.firstline + \">> to now point to mime <<\" + associationItem.mime + \">>\");\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction toTextMimeAssociationItem(association) {\r\n    return {\r\n        id: association.id,\r\n        mime: association.mime,\r\n        filename: association.filename,\r\n        extension: association.extension,\r\n        filepattern: association.filepattern,\r\n        firstline: association.firstline,\r\n        userConfigured: association.userConfigured,\r\n        filenameLowercase: association.filename ? association.filename.toLowerCase() : undefined,\r\n        extensionLowercase: association.extension ? association.extension.toLowerCase() : undefined,\r\n        filepatternLowercase: association.filepattern ? association.filepattern.toLowerCase() : undefined,\r\n        filepatternOnPath: association.filepattern ? association.filepattern.indexOf(posix.sep) >= 0 : false\r\n    };\r\n}\r\n/**\r\n * Given a file, return the best matching mime type for it\r\n */\r\nexport function guessMimeTypes(resource, firstLine) {\r\n    var path;\r\n    if (resource) {\r\n        switch (resource.scheme) {\r\n            case Schemas.file:\r\n                path = resource.fsPath;\r\n                break;\r\n            case Schemas.data:\r\n                var metadata = DataUri.parseMetaData(resource);\r\n                path = metadata.get(DataUri.META_DATA_LABEL);\r\n                break;\r\n            default:\r\n                path = resource.path;\r\n        }\r\n    }\r\n    if (!path) {\r\n        return [MIME_UNKNOWN];\r\n    }\r\n    path = path.toLowerCase();\r\n    var filename = basename(path);\r\n    // 1.) User configured mappings have highest priority\r\n    var configuredMime = guessMimeTypeByPath(path, filename, userRegisteredAssociations);\r\n    if (configuredMime) {\r\n        return [configuredMime, MIME_TEXT];\r\n    }\r\n    // 2.) Registered mappings have middle priority\r\n    var registeredMime = guessMimeTypeByPath(path, filename, nonUserRegisteredAssociations);\r\n    if (registeredMime) {\r\n        return [registeredMime, MIME_TEXT];\r\n    }\r\n    // 3.) Firstline has lowest priority\r\n    if (firstLine) {\r\n        var firstlineMime = guessMimeTypeByFirstline(firstLine);\r\n        if (firstlineMime) {\r\n            return [firstlineMime, MIME_TEXT];\r\n        }\r\n    }\r\n    return [MIME_UNKNOWN];\r\n}\r\nfunction guessMimeTypeByPath(path, filename, associations) {\r\n    var filenameMatch = null;\r\n    var patternMatch = null;\r\n    var extensionMatch = null;\r\n    // We want to prioritize associations based on the order they are registered so that the last registered\r\n    // association wins over all other. This is for https://github.com/Microsoft/vscode/issues/20074\r\n    for (var i = associations.length - 1; i >= 0; i--) {\r\n        var association = associations[i];\r\n        // First exact name match\r\n        if (filename === association.filenameLowercase) {\r\n            filenameMatch = association;\r\n            break; // take it!\r\n        }\r\n        // Longest pattern match\r\n        if (association.filepattern) {\r\n            if (!patternMatch || association.filepattern.length > patternMatch.filepattern.length) {\r\n                var target = association.filepatternOnPath ? path : filename; // match on full path if pattern contains path separator\r\n                if (match(association.filepatternLowercase, target)) {\r\n                    patternMatch = association;\r\n                }\r\n            }\r\n        }\r\n        // Longest extension match\r\n        if (association.extension) {\r\n            if (!extensionMatch || association.extension.length > extensionMatch.extension.length) {\r\n                if (endsWith(filename, association.extensionLowercase)) {\r\n                    extensionMatch = association;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // 1.) Exact name match has second highest prio\r\n    if (filenameMatch) {\r\n        return filenameMatch.mime;\r\n    }\r\n    // 2.) Match on pattern\r\n    if (patternMatch) {\r\n        return patternMatch.mime;\r\n    }\r\n    // 3.) Match on extension comes next\r\n    if (extensionMatch) {\r\n        return extensionMatch.mime;\r\n    }\r\n    return null;\r\n}\r\nfunction guessMimeTypeByFirstline(firstLine) {\r\n    if (startsWithUTF8BOM(firstLine)) {\r\n        firstLine = firstLine.substr(1);\r\n    }\r\n    if (firstLine.length > 0) {\r\n        // We want to prioritize associations based on the order they are registered so that the last registered\r\n        // association wins over all other. This is for https://github.com/Microsoft/vscode/issues/20074\r\n        for (var i = registeredAssociations.length - 1; i >= 0; i--) {\r\n            var association = registeredAssociations[i];\r\n            if (!association.firstline) {\r\n                continue;\r\n            }\r\n            var matches = firstLine.match(association.firstline);\r\n            if (matches && matches.length > 0) {\r\n                return association.mime;\r\n            }\r\n        }\r\n    }\r\n    return null;\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { isWindows, isMacintosh, setImmediate } from './platform.js';\r\nvar safeProcess = (typeof process === 'undefined') ? {\r\n    cwd: function () { return '/'; },\r\n    env: Object.create(null),\r\n    get platform() { return isWindows ? 'win32' : isMacintosh ? 'darwin' : 'linux'; },\r\n    nextTick: function (callback) { return setImmediate(callback); }\r\n} : process;\r\nexport var cwd = safeProcess.cwd;\r\nexport var env = safeProcess.env;\r\nexport var platform = safeProcess.platform;\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { globals } from './platform.js';\r\nvar hasPerformanceNow = (globals.performance && typeof globals.performance.now === 'function');\r\nvar StopWatch = /** @class */ (function () {\r\n    function StopWatch(highResolution) {\r\n        this._highResolution = hasPerformanceNow && highResolution;\r\n        this._startTime = this._now();\r\n        this._stopTime = -1;\r\n    }\r\n    StopWatch.create = function (highResolution) {\r\n        if (highResolution === void 0) { highResolution = true; }\r\n        return new StopWatch(highResolution);\r\n    };\r\n    StopWatch.prototype.stop = function () {\r\n        this._stopTime = this._now();\r\n    };\r\n    StopWatch.prototype.elapsed = function () {\r\n        if (this._stopTime !== -1) {\r\n            return this._stopTime - this._startTime;\r\n        }\r\n        return this._now() - this._startTime;\r\n    };\r\n    StopWatch.prototype._now = function () {\r\n        return this._highResolution ? globals.performance.now() : new Date().getTime();\r\n    };\r\n    return StopWatch;\r\n}());\r\nexport { StopWatch };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar _typeof = {\r\n    number: 'number',\r\n    string: 'string',\r\n    undefined: 'undefined',\r\n    object: 'object',\r\n    function: 'function'\r\n};\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Array or not.\r\n */\r\nexport function isArray(array) {\r\n    if (Array.isArray) {\r\n        return Array.isArray(array);\r\n    }\r\n    if (array && typeof (array.length) === _typeof.number && array.constructor === Array) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript String or not.\r\n */\r\nexport function isString(str) {\r\n    if (typeof (str) === _typeof.string || str instanceof String) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n *\r\n * @returns whether the provided parameter is of type `object` but **not**\r\n *\t`null`, an `array`, a `regexp`, nor a `date`.\r\n */\r\nexport function isObject(obj) {\r\n    // The method can't do a type cast since there are type (like strings) which\r\n    // are subclasses of any put not positvely matched by the function. Hence type\r\n    // narrowing results in wrong results.\r\n    return typeof obj === _typeof.object\r\n        && obj !== null\r\n        && !Array.isArray(obj)\r\n        && !(obj instanceof RegExp)\r\n        && !(obj instanceof Date);\r\n}\r\n/**\r\n * In **contrast** to just checking `typeof` this will return `false` for `NaN`.\r\n * @returns whether the provided parameter is a JavaScript Number or not.\r\n */\r\nexport function isNumber(obj) {\r\n    if ((typeof (obj) === _typeof.number || obj instanceof Number) && !isNaN(obj)) {\r\n        return true;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Boolean or not.\r\n */\r\nexport function isBoolean(obj) {\r\n    return obj === true || obj === false;\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined.\r\n */\r\nexport function isUndefined(obj) {\r\n    return typeof (obj) === _typeof.undefined;\r\n}\r\n/**\r\n * @returns whether the provided parameter is undefined or null.\r\n */\r\nexport function isUndefinedOrNull(obj) {\r\n    return isUndefined(obj) || obj === null;\r\n}\r\nexport function assertType(condition, type) {\r\n    if (!condition) {\r\n        throw new Error(type ? \"Unexpected type, expected '\" + type + \"'\" : 'Unexpected type');\r\n    }\r\n}\r\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\r\n/**\r\n * @returns whether the provided parameter is an empty JavaScript Object or not.\r\n */\r\nexport function isEmptyObject(obj) {\r\n    if (!isObject(obj)) {\r\n        return false;\r\n    }\r\n    for (var key in obj) {\r\n        if (hasOwnProperty.call(obj, key)) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * @returns whether the provided parameter is a JavaScript Function or not.\r\n */\r\nexport function isFunction(obj) {\r\n    return typeof obj === _typeof.function;\r\n}\r\nexport function validateConstraints(args, constraints) {\r\n    var len = Math.min(args.length, constraints.length);\r\n    for (var i = 0; i < len; i++) {\r\n        validateConstraint(args[i], constraints[i]);\r\n    }\r\n}\r\nexport function validateConstraint(arg, constraint) {\r\n    if (isString(constraint)) {\r\n        if (typeof arg !== constraint) {\r\n            throw new Error(\"argument does not match constraint: typeof \" + constraint);\r\n        }\r\n    }\r\n    else if (isFunction(constraint)) {\r\n        try {\r\n            if (arg instanceof constraint) {\r\n                return;\r\n            }\r\n        }\r\n        catch (_a) {\r\n            // ignore\r\n        }\r\n        if (!isUndefinedOrNull(arg) && arg.constructor === constraint) {\r\n            return;\r\n        }\r\n        if (constraint.length === 1 && constraint.call(undefined, arg) === true) {\r\n            return;\r\n        }\r\n        throw new Error(\"argument does not match one of these constraints: arg instanceof constraint, arg.constructor === constraint, nor constraint(arg) === true\");\r\n    }\r\n}\r\nexport function getAllPropertyNames(obj) {\r\n    var res = [];\r\n    var proto = Object.getPrototypeOf(obj);\r\n    while (Object.prototype !== proto) {\r\n        res = res.concat(Object.getOwnPropertyNames(proto));\r\n        proto = Object.getPrototypeOf(proto);\r\n    }\r\n    return res;\r\n}\r\nexport function getAllMethodNames(obj) {\r\n    var methods = [];\r\n    for (var _i = 0, _a = getAllPropertyNames(obj); _i < _a.length; _i++) {\r\n        var prop = _a[_i];\r\n        if (typeof obj[prop] === 'function') {\r\n            methods.push(prop);\r\n        }\r\n    }\r\n    return methods;\r\n}\r\nexport function createProxyObject(methodNames, invoke) {\r\n    var createProxyMethod = function (method) {\r\n        return function () {\r\n            var args = Array.prototype.slice.call(arguments, 0);\r\n            return invoke(method, args);\r\n        };\r\n    };\r\n    var result = {};\r\n    for (var _i = 0, methodNames_1 = methodNames; _i < methodNames_1.length; _i++) {\r\n        var methodName = methodNames_1[_i];\r\n        result[methodName] = createProxyMethod(methodName);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Converts null to undefined, passes all other values through.\r\n */\r\nexport function withNullAsUndefined(x) {\r\n    return x === null ? undefined : x;\r\n}\r\n/**\r\n * Converts undefined to null, passes all other values through.\r\n */\r\nexport function withUndefinedAsNull(x) {\r\n    return typeof x === 'undefined' ? null : x;\r\n}\r\n"],"sourceRoot":""}