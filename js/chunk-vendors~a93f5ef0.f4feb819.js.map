{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/editor/contrib/suggest/completionModel.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetVariables.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetSession.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetController2.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/contrib/snippet/snippetParser.js"],"names":["CompletionModel","LineContext","leadingLineContent","characterCountDelta","this","items","column","lineContext","wordDistance","options","snippetSuggestions","_snippetCompareFn","_compareCompletionItems","_items","_column","_wordDistance","_options","_refilterKind","_lineContext","_compareCompletionItemsSnippetsUp","_compareCompletionItemsSnippetsDown","Object","defineProperty","prototype","get","set","value","_filteredItems","enumerable","configurable","_ensureCachedState","_isIncomplete","adopt","except","res","Array","i","length","has","provider","push","pop","_stats","_createCachedState","Set","suggestionCount","snippetCount","textCount","_a","word","wordLow","source","target","scoreFn","filterGraceful","item","container","incomplete","add","overwriteBefore","position","editStart","wordLen","slice","toLowerCase","score","Default","wordPos","ch","charCodeAt","textLabel","completion","label","name","filterText","match","filterTextLow","labelLow","idx","distance","kind","sort","a","b","CompositeSnippetVariableResolver","_delegates","resolve","variable","_i","delegate","undefined","SelectionBasedVariableResolver","_model","_selection","getValueInRange","startLineNumber","endLineNumber","snippet","line","getLineContent","lineLeadingWhitespace","startColumn","varLeadingWhitespace_1","walk","marker","split","whitespaceCommonLength_1","replace","m","newline","rest","substr","positionLineNumber","info","getWordAtPosition","lineNumber","positionColumn","String","ModelBasedVariableResolver","_labelService","path","uri","fsPath","name_1","lastIndexOf","getUriLabel","ClipboardBasedVariableResolver","_readClipboardText","_selectionIdx","_selectionCount","_spread","clipboardText","lines","filter","s","CommentBasedVariableResolver","language","getLanguageIdentifier","config","getComments","id","lineCommentToken","blockCommentStartToken","blockCommentEndToken","TimeBasedVariableResolver","Date","getFullYear","getMonth","valueOf","getDate","getHours","getMinutes","getSeconds","dayNames","getDay","dayNamesShort","monthNames","monthNamesShort","Math","floor","now","nls","WorkspaceBasedVariableResolver","_workspaceService","workspaceIdentifier","getWorkspace","_resolveWorkspaceName","_resoveWorkspacePath","filename","configPath","folderpath","RandomBasedVariableResolver","random","toString","theme","collector","getColorGraceful","color","getColor","addRule","OneSnippet","editor","offset","_nestingLevel","_editor","_snippet","_offset","_placeholderGroups","placeholders","compareByIndex","_placeholderGroupsIdx","dispose","_placeholderDecorations","toRemove_1","forEach","handle","deltaDecorations","_initDecorations","_this","Map","model","getModel","changeDecorations","accessor","placeholder","placeholderOffset","placeholderLen","fullLen","range","fromPositions","getPositionAt","isFinalTabstop","_decor","inactiveFinal","inactive","addDecoration","move","fwd","hasModel","operations","transform","getDecorationRange","currentValue","replaceMove","executeEdits","couldSkipThisPlaceholder","newSelections","activePlaceholders","selections","endColumn","_hasPlaceholderBeenCollapsed","changeDecorationOptions","activeFinal","active","_b","_c","enclosingPlaceholders","enclosingPlaceholder","id_1","isEmpty","parent","computePossibleSelections","result","placeholdersWithEqualIndex","ranges","placeholdersWithEqualIndex_1","index","delete","choice","merge","others","nested","shift","console","assert","indexLastPlaceholder","placeholderInfo","last","all","nestedPlaceholder","children","removeDecoration","_d","_e","placeholder_1","register","stickiness","className","_defaultOptions","overwriteAfter","adjustWhitespace","SnippetSession","template","_templateMerges","_snippets","_template","adjustIndentation","adjustNewlines","templateLeadingWhitespace","normalizeIndentation","newValue","join","getEOL","adjustSelection","selection","positionColumnBefore","positionColumnAfter","validateRange","createWithDirection","getDirection","createEditsAndSnippets","enforceFinalTabstop","edits","snippets","workspaceService","invokeWithinContext","modelBasedVariableResolver","clipboardService","readClipboardText","readTextSync","delta","firstBeforeText","getSelection","firstAfterText","firstLineFirstNonWhitespace","getLineFirstNonWhitespaceColumn","indexedSelections","getSelections","map","compareRangesUsingStarts","indexedSelections_1","extensionBefore","extensionAfter","snippetSelection","setStartPosition","setEndPosition","parse","start","getStartPosition","resolveVariables","getOption","getOffsetAt","getValueLengthInRange","_logInfo","insert","undoEdits","hasPlaceholder","_move","edit","getEndPosition","revealRange","next","setSelections","revealPositionInCenterIfOutsideViewport","getPosition","prev","oneSelection","apply","isAtFirstPlaceholder","isAtLastPlaceholder","isSelectionWithinPlaceholders","allPossibleSelections","_loop_1","possibleSelections","size","selections_1","containsRange","array","state_1","__assign","assign","t","n","arguments","p","hasOwnProperty","call","__decorate","decorators","key","desc","d","c","r","getOwnPropertyDescriptor","Reflect","decorate","__param","paramIndex","decorator","undoStopBefore","undoStopAfter","SnippetController2","_logService","contextKeyService","_snippetListener","_modelVersionId","_inSnippet","InSnippetMode","bindTo","_hasNextTabstop","HasNextTabstop","_hasPrevTabstop","HasPrevTabstop","getContribution","ID","reset","_session","opts","_doInsert","e","cancel","error","clear","pushStackElement","getAlternativeVersionId","_updateState","onDidChangeModelContent","isFlush","onDidChangeModel","onDidChangeCursorSelection","_handleChoice","_currentChoice","first_1","option","insertText","sortText","finish","resetSelection","isInSnippet","Boolean","CommandCtor","bindToContribution","precondition","and","handler","ctrl","kbOpts","weight","kbExpr","editorTextFocus","primary","secondary","__extends","extendStatics","setPrototypeOf","__proto__","__","constructor","create","__spreadArrays","il","k","j","jl","Scanner","pos","isDigitCharacter","isVariableCharacter","text","tokenText","token","len","type","_table","isNaN","Marker","_children","appendChild","child","Text","indexOf","newChildren","splice","_fixParent","children_1","child_1","candidate","TextmateSnippet","reduce","cur","_super","_this_1","clone","TransformableMarker","Placeholder","Choice","ret","Transform","regexp","RegExp","didMatch","_replace","some","FormatString","elseValue","groups","ignoreCase","global","shorthandName","ifValue","toLocaleUpperCase","toLocaleLowerCase","_toPascalCase","charAt","toUpperCase","Variable","resolver","visitor","stack","marker_1","recurse","unshift","_placeholders","last_1","all_1","found","SnippetParser","_scanner","_token","escape","insertFinalTabstop","_parse","placeholderDefaultValues","incompletePlaceholders","placeholderCount","incompletePlaceholders_1","defaultValues","defaultValues_1","_accept","_backTo","_until","nextToken","substring","_parseEscaped","_parseTabstopOrVariableName","_parseComplexPlaceholder","_parseComplexVariable","_parseAnything","test","Number","_parseTransform","_parseChoiceElement","values","regexValue","regexOptions","escaped","_parseFormatString","complex","shorthand"],"mappings":"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","file":"js/chunk-vendors~a93f5ef0.f4feb819.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { fuzzyScore, fuzzyScoreGracefulAggressive, FuzzyScore, anyScore } from '../../../base/common/filters.js';\r\nimport { compareIgnoreCase } from '../../../base/common/strings.js';\r\nvar LineContext = /** @class */ (function () {\r\n    function LineContext(leadingLineContent, characterCountDelta) {\r\n        this.leadingLineContent = leadingLineContent;\r\n        this.characterCountDelta = characterCountDelta;\r\n    }\r\n    return LineContext;\r\n}());\r\nexport { LineContext };\r\nvar CompletionModel = /** @class */ (function () {\r\n    function CompletionModel(items, column, lineContext, wordDistance, options, snippetSuggestions) {\r\n        this._snippetCompareFn = CompletionModel._compareCompletionItems;\r\n        this._items = items;\r\n        this._column = column;\r\n        this._wordDistance = wordDistance;\r\n        this._options = options;\r\n        this._refilterKind = 1 /* All */;\r\n        this._lineContext = lineContext;\r\n        if (snippetSuggestions === 'top') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsUp;\r\n        }\r\n        else if (snippetSuggestions === 'bottom') {\r\n            this._snippetCompareFn = CompletionModel._compareCompletionItemsSnippetsDown;\r\n        }\r\n    }\r\n    Object.defineProperty(CompletionModel.prototype, \"lineContext\", {\r\n        get: function () {\r\n            return this._lineContext;\r\n        },\r\n        set: function (value) {\r\n            if (this._lineContext.leadingLineContent !== value.leadingLineContent\r\n                || this._lineContext.characterCountDelta !== value.characterCountDelta) {\r\n                this._refilterKind = this._lineContext.characterCountDelta < value.characterCountDelta && this._filteredItems ? 2 /* Incr */ : 1 /* All */;\r\n                this._lineContext = value;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompletionModel.prototype, \"items\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._filteredItems;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(CompletionModel.prototype, \"incomplete\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._isIncomplete;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionModel.prototype.adopt = function (except) {\r\n        var res = new Array();\r\n        for (var i = 0; i < this._items.length;) {\r\n            if (!except.has(this._items[i].provider)) {\r\n                res.push(this._items[i]);\r\n                // unordered removed\r\n                this._items[i] = this._items[this._items.length - 1];\r\n                this._items.pop();\r\n            }\r\n            else {\r\n                // continue with next item\r\n                i++;\r\n            }\r\n        }\r\n        this._refilterKind = 1 /* All */;\r\n        return res;\r\n    };\r\n    Object.defineProperty(CompletionModel.prototype, \"stats\", {\r\n        get: function () {\r\n            this._ensureCachedState();\r\n            return this._stats;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    CompletionModel.prototype._ensureCachedState = function () {\r\n        if (this._refilterKind !== 0 /* Nothing */) {\r\n            this._createCachedState();\r\n        }\r\n    };\r\n    CompletionModel.prototype._createCachedState = function () {\r\n        this._isIncomplete = new Set();\r\n        this._stats = { suggestionCount: 0, snippetCount: 0, textCount: 0 };\r\n        var _a = this._lineContext, leadingLineContent = _a.leadingLineContent, characterCountDelta = _a.characterCountDelta;\r\n        var word = '';\r\n        var wordLow = '';\r\n        // incrementally filter less\r\n        var source = this._refilterKind === 1 /* All */ ? this._items : this._filteredItems;\r\n        var target = [];\r\n        // picks a score function based on the number of\r\n        // items that we have to score/filter and based on the\r\n        // user-configuration\r\n        var scoreFn = (!this._options.filterGraceful || source.length > 2000) ? fuzzyScore : fuzzyScoreGracefulAggressive;\r\n        for (var i = 0; i < source.length; i++) {\r\n            var item = source[i];\r\n            // collect those supports that signaled having\r\n            // an incomplete result\r\n            if (item.container.incomplete) {\r\n                this._isIncomplete.add(item.provider);\r\n            }\r\n            // 'word' is that remainder of the current line that we\r\n            // filter and score against. In theory each suggestion uses a\r\n            // different word, but in practice not - that's why we cache\r\n            var overwriteBefore = item.position.column - item.editStart.column;\r\n            var wordLen = overwriteBefore + characterCountDelta - (item.position.column - this._column);\r\n            if (word.length !== wordLen) {\r\n                word = wordLen === 0 ? '' : leadingLineContent.slice(-wordLen);\r\n                wordLow = word.toLowerCase();\r\n            }\r\n            // remember the word against which this item was\r\n            // scored\r\n            item.word = word;\r\n            if (wordLen === 0) {\r\n                // when there is nothing to score against, don't\r\n                // event try to do. Use a const rank and rely on\r\n                // the fallback-sort using the initial sort order.\r\n                // use a score of `-100` because that is out of the\r\n                // bound of values `fuzzyScore` will return\r\n                item.score = FuzzyScore.Default;\r\n            }\r\n            else {\r\n                // skip word characters that are whitespace until\r\n                // we have hit the replace range (overwriteBefore)\r\n                var wordPos = 0;\r\n                while (wordPos < overwriteBefore) {\r\n                    var ch = word.charCodeAt(wordPos);\r\n                    if (ch === 32 /* Space */ || ch === 9 /* Tab */) {\r\n                        wordPos += 1;\r\n                    }\r\n                    else {\r\n                        break;\r\n                    }\r\n                }\r\n                var textLabel = typeof item.completion.label === 'string' ? item.completion.label : item.completion.label.name;\r\n                if (wordPos >= wordLen) {\r\n                    // the wordPos at which scoring starts is the whole word\r\n                    // and therefore the same rules as not having a word apply\r\n                    item.score = FuzzyScore.Default;\r\n                }\r\n                else if (typeof item.completion.filterText === 'string') {\r\n                    // when there is a `filterText` it must match the `word`.\r\n                    // if it matches we check with the label to compute highlights\r\n                    // and if that doesn't yield a result we have no highlights,\r\n                    // despite having the match\r\n                    var match = scoreFn(word, wordLow, wordPos, item.completion.filterText, item.filterTextLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    if (compareIgnoreCase(item.completion.filterText, textLabel) === 0) {\r\n                        // filterText and label are actually the same -> use good highlights\r\n                        item.score = match;\r\n                    }\r\n                    else {\r\n                        // re-run the scorer on the label in the hope of a result BUT use the rank\r\n                        // of the filterText-match\r\n                        item.score = anyScore(word, wordLow, wordPos, textLabel, item.labelLow, 0);\r\n                        item.score[0] = match[0]; // use score from filterText\r\n                    }\r\n                }\r\n                else {\r\n                    // by default match `word` against the `label`\r\n                    var match = scoreFn(word, wordLow, wordPos, textLabel, item.labelLow, 0, false);\r\n                    if (!match) {\r\n                        continue; // NO match\r\n                    }\r\n                    item.score = match;\r\n                }\r\n            }\r\n            item.idx = i;\r\n            item.distance = this._wordDistance.distance(item.position, item.completion);\r\n            target.push(item);\r\n            // update stats\r\n            this._stats.suggestionCount++;\r\n            switch (item.completion.kind) {\r\n                case 25 /* Snippet */:\r\n                    this._stats.snippetCount++;\r\n                    break;\r\n                case 18 /* Text */:\r\n                    this._stats.textCount++;\r\n                    break;\r\n            }\r\n        }\r\n        this._filteredItems = target.sort(this._snippetCompareFn);\r\n        this._refilterKind = 0 /* Nothing */;\r\n    };\r\n    CompletionModel._compareCompletionItems = function (a, b) {\r\n        if (a.score[0] > b.score[0]) {\r\n            return -1;\r\n        }\r\n        else if (a.score[0] < b.score[0]) {\r\n            return 1;\r\n        }\r\n        else if (a.distance < b.distance) {\r\n            return -1;\r\n        }\r\n        else if (a.distance > b.distance) {\r\n            return 1;\r\n        }\r\n        else if (a.idx < b.idx) {\r\n            return -1;\r\n        }\r\n        else if (a.idx > b.idx) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    CompletionModel._compareCompletionItemsSnippetsDown = function (a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 25 /* Snippet */) {\r\n                return 1;\r\n            }\r\n            else if (b.completion.kind === 25 /* Snippet */) {\r\n                return -1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    };\r\n    CompletionModel._compareCompletionItemsSnippetsUp = function (a, b) {\r\n        if (a.completion.kind !== b.completion.kind) {\r\n            if (a.completion.kind === 25 /* Snippet */) {\r\n                return -1;\r\n            }\r\n            else if (b.completion.kind === 25 /* Snippet */) {\r\n                return 1;\r\n            }\r\n        }\r\n        return CompletionModel._compareCompletionItems(a, b);\r\n    };\r\n    return CompletionModel;\r\n}());\r\nexport { CompletionModel };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../../nls.js';\r\nimport * as path from '../../../base/common/path.js';\r\nimport { dirname } from '../../../base/common/resources.js';\r\nimport { Text } from './snippetParser.js';\r\nimport { LanguageConfigurationRegistry } from '../../common/modes/languageConfigurationRegistry.js';\r\nimport { getLeadingWhitespace, commonPrefixLength, isFalsyOrWhitespace, pad, endsWith } from '../../../base/common/strings.js';\r\nimport { isSingleFolderWorkspaceIdentifier, toWorkspaceIdentifier, WORKSPACE_EXTENSION } from '../../../platform/workspaces/common/workspaces.js';\r\nimport { normalizeDriveLetter } from '../../../base/common/labels.js';\r\nvar CompositeSnippetVariableResolver = /** @class */ (function () {\r\n    function CompositeSnippetVariableResolver(_delegates) {\r\n        this._delegates = _delegates;\r\n        //\r\n    }\r\n    CompositeSnippetVariableResolver.prototype.resolve = function (variable) {\r\n        for (var _i = 0, _a = this._delegates; _i < _a.length; _i++) {\r\n            var delegate = _a[_i];\r\n            var value = delegate.resolve(variable);\r\n            if (value !== undefined) {\r\n                return value;\r\n            }\r\n        }\r\n        return undefined;\r\n    };\r\n    return CompositeSnippetVariableResolver;\r\n}());\r\nexport { CompositeSnippetVariableResolver };\r\nvar SelectionBasedVariableResolver = /** @class */ (function () {\r\n    function SelectionBasedVariableResolver(_model, _selection) {\r\n        this._model = _model;\r\n        this._selection = _selection;\r\n        //\r\n    }\r\n    SelectionBasedVariableResolver.prototype.resolve = function (variable) {\r\n        var name = variable.name;\r\n        if (name === 'SELECTION' || name === 'TM_SELECTED_TEXT') {\r\n            var value = this._model.getValueInRange(this._selection) || undefined;\r\n            if (value && this._selection.startLineNumber !== this._selection.endLineNumber && variable.snippet) {\r\n                // Selection is a multiline string which we indentation we now\r\n                // need to adjust. We compare the indentation of this variable\r\n                // with the indentation at the editor position and add potential\r\n                // extra indentation to the value\r\n                var line = this._model.getLineContent(this._selection.startLineNumber);\r\n                var lineLeadingWhitespace = getLeadingWhitespace(line, 0, this._selection.startColumn - 1);\r\n                var varLeadingWhitespace_1 = lineLeadingWhitespace;\r\n                variable.snippet.walk(function (marker) {\r\n                    if (marker === variable) {\r\n                        return false;\r\n                    }\r\n                    if (marker instanceof Text) {\r\n                        varLeadingWhitespace_1 = getLeadingWhitespace(marker.value.split(/\\r\\n|\\r|\\n/).pop());\r\n                    }\r\n                    return true;\r\n                });\r\n                var whitespaceCommonLength_1 = commonPrefixLength(varLeadingWhitespace_1, lineLeadingWhitespace);\r\n                value = value.replace(/(\\r\\n|\\r|\\n)(.*)/g, function (m, newline, rest) { return \"\" + newline + varLeadingWhitespace_1.substr(whitespaceCommonLength_1) + rest; });\r\n            }\r\n            return value;\r\n        }\r\n        else if (name === 'TM_CURRENT_LINE') {\r\n            return this._model.getLineContent(this._selection.positionLineNumber);\r\n        }\r\n        else if (name === 'TM_CURRENT_WORD') {\r\n            var info = this._model.getWordAtPosition({\r\n                lineNumber: this._selection.positionLineNumber,\r\n                column: this._selection.positionColumn\r\n            });\r\n            return info && info.word || undefined;\r\n        }\r\n        else if (name === 'TM_LINE_INDEX') {\r\n            return String(this._selection.positionLineNumber - 1);\r\n        }\r\n        else if (name === 'TM_LINE_NUMBER') {\r\n            return String(this._selection.positionLineNumber);\r\n        }\r\n        return undefined;\r\n    };\r\n    return SelectionBasedVariableResolver;\r\n}());\r\nexport { SelectionBasedVariableResolver };\r\nvar ModelBasedVariableResolver = /** @class */ (function () {\r\n    function ModelBasedVariableResolver(_labelService, _model) {\r\n        this._labelService = _labelService;\r\n        this._model = _model;\r\n        //\r\n    }\r\n    ModelBasedVariableResolver.prototype.resolve = function (variable) {\r\n        var name = variable.name;\r\n        if (name === 'TM_FILENAME') {\r\n            return path.basename(this._model.uri.fsPath);\r\n        }\r\n        else if (name === 'TM_FILENAME_BASE') {\r\n            var name_1 = path.basename(this._model.uri.fsPath);\r\n            var idx = name_1.lastIndexOf('.');\r\n            if (idx <= 0) {\r\n                return name_1;\r\n            }\r\n            else {\r\n                return name_1.slice(0, idx);\r\n            }\r\n        }\r\n        else if (name === 'TM_DIRECTORY' && this._labelService) {\r\n            if (path.dirname(this._model.uri.fsPath) === '.') {\r\n                return '';\r\n            }\r\n            return this._labelService.getUriLabel(dirname(this._model.uri));\r\n        }\r\n        else if (name === 'TM_FILEPATH' && this._labelService) {\r\n            return this._labelService.getUriLabel(this._model.uri);\r\n        }\r\n        return undefined;\r\n    };\r\n    return ModelBasedVariableResolver;\r\n}());\r\nexport { ModelBasedVariableResolver };\r\nvar ClipboardBasedVariableResolver = /** @class */ (function () {\r\n    function ClipboardBasedVariableResolver(_readClipboardText, _selectionIdx, _selectionCount, _spread) {\r\n        this._readClipboardText = _readClipboardText;\r\n        this._selectionIdx = _selectionIdx;\r\n        this._selectionCount = _selectionCount;\r\n        this._spread = _spread;\r\n        //\r\n    }\r\n    ClipboardBasedVariableResolver.prototype.resolve = function (variable) {\r\n        if (variable.name !== 'CLIPBOARD') {\r\n            return undefined;\r\n        }\r\n        var clipboardText = this._readClipboardText();\r\n        if (!clipboardText) {\r\n            return undefined;\r\n        }\r\n        // `spread` is assigning each cursor a line of the clipboard\r\n        // text whenever there the line count equals the cursor count\r\n        // and when enabled\r\n        if (this._spread) {\r\n            var lines = clipboardText.split(/\\r\\n|\\n|\\r/).filter(function (s) { return !isFalsyOrWhitespace(s); });\r\n            if (lines.length === this._selectionCount) {\r\n                return lines[this._selectionIdx];\r\n            }\r\n        }\r\n        return clipboardText;\r\n    };\r\n    return ClipboardBasedVariableResolver;\r\n}());\r\nexport { ClipboardBasedVariableResolver };\r\nvar CommentBasedVariableResolver = /** @class */ (function () {\r\n    function CommentBasedVariableResolver(_model) {\r\n        this._model = _model;\r\n        //\r\n    }\r\n    CommentBasedVariableResolver.prototype.resolve = function (variable) {\r\n        var name = variable.name;\r\n        var language = this._model.getLanguageIdentifier();\r\n        var config = LanguageConfigurationRegistry.getComments(language.id);\r\n        if (!config) {\r\n            return undefined;\r\n        }\r\n        if (name === 'LINE_COMMENT') {\r\n            return config.lineCommentToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_START') {\r\n            return config.blockCommentStartToken || undefined;\r\n        }\r\n        else if (name === 'BLOCK_COMMENT_END') {\r\n            return config.blockCommentEndToken || undefined;\r\n        }\r\n        return undefined;\r\n    };\r\n    return CommentBasedVariableResolver;\r\n}());\r\nexport { CommentBasedVariableResolver };\r\nvar TimeBasedVariableResolver = /** @class */ (function () {\r\n    function TimeBasedVariableResolver() {\r\n    }\r\n    TimeBasedVariableResolver.prototype.resolve = function (variable) {\r\n        var name = variable.name;\r\n        if (name === 'CURRENT_YEAR') {\r\n            return String(new Date().getFullYear());\r\n        }\r\n        else if (name === 'CURRENT_YEAR_SHORT') {\r\n            return String(new Date().getFullYear()).slice(-2);\r\n        }\r\n        else if (name === 'CURRENT_MONTH') {\r\n            return pad((new Date().getMonth().valueOf() + 1), 2);\r\n        }\r\n        else if (name === 'CURRENT_DATE') {\r\n            return pad(new Date().getDate().valueOf(), 2);\r\n        }\r\n        else if (name === 'CURRENT_HOUR') {\r\n            return pad(new Date().getHours().valueOf(), 2);\r\n        }\r\n        else if (name === 'CURRENT_MINUTE') {\r\n            return pad(new Date().getMinutes().valueOf(), 2);\r\n        }\r\n        else if (name === 'CURRENT_SECOND') {\r\n            return pad(new Date().getSeconds().valueOf(), 2);\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME') {\r\n            return TimeBasedVariableResolver.dayNames[new Date().getDay()];\r\n        }\r\n        else if (name === 'CURRENT_DAY_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.dayNamesShort[new Date().getDay()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME') {\r\n            return TimeBasedVariableResolver.monthNames[new Date().getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_MONTH_NAME_SHORT') {\r\n            return TimeBasedVariableResolver.monthNamesShort[new Date().getMonth()];\r\n        }\r\n        else if (name === 'CURRENT_SECONDS_UNIX') {\r\n            return String(Math.floor(Date.now() / 1000));\r\n        }\r\n        return undefined;\r\n    };\r\n    TimeBasedVariableResolver.dayNames = [nls.localize('Sunday', \"Sunday\"), nls.localize('Monday', \"Monday\"), nls.localize('Tuesday', \"Tuesday\"), nls.localize('Wednesday', \"Wednesday\"), nls.localize('Thursday', \"Thursday\"), nls.localize('Friday', \"Friday\"), nls.localize('Saturday', \"Saturday\")];\r\n    TimeBasedVariableResolver.dayNamesShort = [nls.localize('SundayShort', \"Sun\"), nls.localize('MondayShort', \"Mon\"), nls.localize('TuesdayShort', \"Tue\"), nls.localize('WednesdayShort', \"Wed\"), nls.localize('ThursdayShort', \"Thu\"), nls.localize('FridayShort', \"Fri\"), nls.localize('SaturdayShort', \"Sat\")];\r\n    TimeBasedVariableResolver.monthNames = [nls.localize('January', \"January\"), nls.localize('February', \"February\"), nls.localize('March', \"March\"), nls.localize('April', \"April\"), nls.localize('May', \"May\"), nls.localize('June', \"June\"), nls.localize('July', \"July\"), nls.localize('August', \"August\"), nls.localize('September', \"September\"), nls.localize('October', \"October\"), nls.localize('November', \"November\"), nls.localize('December', \"December\")];\r\n    TimeBasedVariableResolver.monthNamesShort = [nls.localize('JanuaryShort', \"Jan\"), nls.localize('FebruaryShort', \"Feb\"), nls.localize('MarchShort', \"Mar\"), nls.localize('AprilShort', \"Apr\"), nls.localize('MayShort', \"May\"), nls.localize('JuneShort', \"Jun\"), nls.localize('JulyShort', \"Jul\"), nls.localize('AugustShort', \"Aug\"), nls.localize('SeptemberShort', \"Sep\"), nls.localize('OctoberShort', \"Oct\"), nls.localize('NovemberShort', \"Nov\"), nls.localize('DecemberShort', \"Dec\")];\r\n    return TimeBasedVariableResolver;\r\n}());\r\nexport { TimeBasedVariableResolver };\r\nvar WorkspaceBasedVariableResolver = /** @class */ (function () {\r\n    function WorkspaceBasedVariableResolver(_workspaceService) {\r\n        this._workspaceService = _workspaceService;\r\n        //\r\n    }\r\n    WorkspaceBasedVariableResolver.prototype.resolve = function (variable) {\r\n        if (!this._workspaceService) {\r\n            return undefined;\r\n        }\r\n        var workspaceIdentifier = toWorkspaceIdentifier(this._workspaceService.getWorkspace());\r\n        if (!workspaceIdentifier) {\r\n            return undefined;\r\n        }\r\n        if (variable.name === 'WORKSPACE_NAME') {\r\n            return this._resolveWorkspaceName(workspaceIdentifier);\r\n        }\r\n        else if (variable.name === 'WORKSPACE_FOLDER') {\r\n            return this._resoveWorkspacePath(workspaceIdentifier);\r\n        }\r\n        return undefined;\r\n    };\r\n    WorkspaceBasedVariableResolver.prototype._resolveWorkspaceName = function (workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return path.basename(workspaceIdentifier.path);\r\n        }\r\n        var filename = path.basename(workspaceIdentifier.configPath.path);\r\n        if (endsWith(filename, WORKSPACE_EXTENSION)) {\r\n            filename = filename.substr(0, filename.length - WORKSPACE_EXTENSION.length - 1);\r\n        }\r\n        return filename;\r\n    };\r\n    WorkspaceBasedVariableResolver.prototype._resoveWorkspacePath = function (workspaceIdentifier) {\r\n        if (isSingleFolderWorkspaceIdentifier(workspaceIdentifier)) {\r\n            return normalizeDriveLetter(workspaceIdentifier.fsPath);\r\n        }\r\n        var filename = path.basename(workspaceIdentifier.configPath.path);\r\n        var folderpath = workspaceIdentifier.configPath.fsPath;\r\n        if (endsWith(folderpath, filename)) {\r\n            folderpath = folderpath.substr(0, folderpath.length - filename.length - 1);\r\n        }\r\n        return (folderpath ? normalizeDriveLetter(folderpath) : '/');\r\n    };\r\n    return WorkspaceBasedVariableResolver;\r\n}());\r\nexport { WorkspaceBasedVariableResolver };\r\nvar RandomBasedVariableResolver = /** @class */ (function () {\r\n    function RandomBasedVariableResolver() {\r\n    }\r\n    RandomBasedVariableResolver.prototype.resolve = function (variable) {\r\n        var name = variable.name;\r\n        if (name === 'RANDOM') {\r\n            return Math.random().toString().slice(-6);\r\n        }\r\n        else if (name === 'RANDOM_HEX') {\r\n            return Math.random().toString(16).slice(-6);\r\n        }\r\n        return undefined;\r\n    };\r\n    return RandomBasedVariableResolver;\r\n}());\r\nexport { RandomBasedVariableResolver };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { groupBy } from '../../../base/common/arrays.js';\r\nimport { dispose } from '../../../base/common/lifecycle.js';\r\nimport { getLeadingWhitespace } from '../../../base/common/strings.js';\r\nimport './snippetSession.css';\r\nimport { EditOperation } from '../../common/core/editOperation.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { ModelDecorationOptions } from '../../common/model/textModel.js';\r\nimport { IClipboardService } from '../../../platform/clipboard/common/clipboardService.js';\r\nimport { IWorkspaceContextService } from '../../../platform/workspace/common/workspace.js';\r\nimport { optional } from '../../../platform/instantiation/common/instantiation.js';\r\nimport { Choice, Placeholder, SnippetParser, Text } from './snippetParser.js';\r\nimport { ClipboardBasedVariableResolver, CompositeSnippetVariableResolver, ModelBasedVariableResolver, SelectionBasedVariableResolver, TimeBasedVariableResolver, CommentBasedVariableResolver, WorkspaceBasedVariableResolver, RandomBasedVariableResolver } from './snippetVariables.js';\r\nimport { registerThemingParticipant } from '../../../platform/theme/common/themeService.js';\r\nimport * as colors from '../../../platform/theme/common/colorRegistry.js';\r\nimport { ILabelService } from '../../../platform/label/common/label.js';\r\nregisterThemingParticipant(function (theme, collector) {\r\n    function getColorGraceful(name) {\r\n        var color = theme.getColor(name);\r\n        return color ? color.toString() : 'transparent';\r\n    }\r\n    collector.addRule(\".monaco-editor .snippet-placeholder { background-color: \" + getColorGraceful(colors.snippetTabstopHighlightBackground) + \"; outline-color: \" + getColorGraceful(colors.snippetTabstopHighlightBorder) + \"; }\");\r\n    collector.addRule(\".monaco-editor .finish-snippet-placeholder { background-color: \" + getColorGraceful(colors.snippetFinalTabstopHighlightBackground) + \"; outline-color: \" + getColorGraceful(colors.snippetFinalTabstopHighlightBorder) + \"; }\");\r\n});\r\nvar OneSnippet = /** @class */ (function () {\r\n    function OneSnippet(editor, snippet, offset) {\r\n        this._nestingLevel = 1;\r\n        this._editor = editor;\r\n        this._snippet = snippet;\r\n        this._offset = offset;\r\n        this._placeholderGroups = groupBy(snippet.placeholders, Placeholder.compareByIndex);\r\n        this._placeholderGroupsIdx = -1;\r\n    }\r\n    OneSnippet.prototype.dispose = function () {\r\n        if (this._placeholderDecorations) {\r\n            var toRemove_1 = [];\r\n            this._placeholderDecorations.forEach(function (handle) { return toRemove_1.push(handle); });\r\n            this._editor.deltaDecorations(toRemove_1, []);\r\n        }\r\n        this._placeholderGroups.length = 0;\r\n    };\r\n    OneSnippet.prototype._initDecorations = function () {\r\n        var _this = this;\r\n        if (this._placeholderDecorations) {\r\n            // already initialized\r\n            return;\r\n        }\r\n        this._placeholderDecorations = new Map();\r\n        var model = this._editor.getModel();\r\n        this._editor.changeDecorations(function (accessor) {\r\n            // create a decoration for each placeholder\r\n            for (var _i = 0, _a = _this._snippet.placeholders; _i < _a.length; _i++) {\r\n                var placeholder = _a[_i];\r\n                var placeholderOffset = _this._snippet.offset(placeholder);\r\n                var placeholderLen = _this._snippet.fullLen(placeholder);\r\n                var range = Range.fromPositions(model.getPositionAt(_this._offset + placeholderOffset), model.getPositionAt(_this._offset + placeholderOffset + placeholderLen));\r\n                var options = placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive;\r\n                var handle = accessor.addDecoration(range, options);\r\n                _this._placeholderDecorations.set(placeholder, handle);\r\n            }\r\n        });\r\n    };\r\n    OneSnippet.prototype.move = function (fwd) {\r\n        var _this = this;\r\n        if (!this._editor.hasModel()) {\r\n            return [];\r\n        }\r\n        this._initDecorations();\r\n        // Transform placeholder text if necessary\r\n        if (this._placeholderGroupsIdx >= 0) {\r\n            var operations = [];\r\n            for (var _i = 0, _a = this._placeholderGroups[this._placeholderGroupsIdx]; _i < _a.length; _i++) {\r\n                var placeholder = _a[_i];\r\n                // Check if the placeholder has a transformation\r\n                if (placeholder.transform) {\r\n                    var id = this._placeholderDecorations.get(placeholder);\r\n                    var range = this._editor.getModel().getDecorationRange(id);\r\n                    var currentValue = this._editor.getModel().getValueInRange(range);\r\n                    operations.push(EditOperation.replaceMove(range, placeholder.transform.resolve(currentValue)));\r\n                }\r\n            }\r\n            if (operations.length > 0) {\r\n                this._editor.executeEdits('snippet.placeholderTransform', operations);\r\n            }\r\n        }\r\n        var couldSkipThisPlaceholder = false;\r\n        if (fwd === true && this._placeholderGroupsIdx < this._placeholderGroups.length - 1) {\r\n            this._placeholderGroupsIdx += 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else if (fwd === false && this._placeholderGroupsIdx > 0) {\r\n            this._placeholderGroupsIdx -= 1;\r\n            couldSkipThisPlaceholder = true;\r\n        }\r\n        else {\r\n            // the selection of the current placeholder might\r\n            // not acurate any more -> simply restore it\r\n        }\r\n        var newSelections = this._editor.getModel().changeDecorations(function (accessor) {\r\n            var activePlaceholders = new Set();\r\n            // change stickiness to always grow when typing at its edges\r\n            // because these decorations represent the currently active\r\n            // tabstop.\r\n            // Special case #1: reaching the final tabstop\r\n            // Special case #2: placeholders enclosing active placeholders\r\n            var selections = [];\r\n            for (var _i = 0, _a = _this._placeholderGroups[_this._placeholderGroupsIdx]; _i < _a.length; _i++) {\r\n                var placeholder = _a[_i];\r\n                var id = _this._placeholderDecorations.get(placeholder);\r\n                var range = _this._editor.getModel().getDecorationRange(id);\r\n                selections.push(new Selection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn));\r\n                // consider to skip this placeholder index when the decoration\r\n                // range is empty but when the placeholder wasn't. that's a strong\r\n                // hint that the placeholder has been deleted. (all placeholder must match this)\r\n                couldSkipThisPlaceholder = couldSkipThisPlaceholder && _this._hasPlaceholderBeenCollapsed(placeholder);\r\n                accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                activePlaceholders.add(placeholder);\r\n                for (var _b = 0, _c = _this._snippet.enclosingPlaceholders(placeholder); _b < _c.length; _b++) {\r\n                    var enclosingPlaceholder = _c[_b];\r\n                    var id_1 = _this._placeholderDecorations.get(enclosingPlaceholder);\r\n                    accessor.changeDecorationOptions(id_1, enclosingPlaceholder.isFinalTabstop ? OneSnippet._decor.activeFinal : OneSnippet._decor.active);\r\n                    activePlaceholders.add(enclosingPlaceholder);\r\n                }\r\n            }\r\n            // change stickness to never grow when typing at its edges\r\n            // so that in-active tabstops never grow\r\n            _this._placeholderDecorations.forEach(function (id, placeholder) {\r\n                if (!activePlaceholders.has(placeholder)) {\r\n                    accessor.changeDecorationOptions(id, placeholder.isFinalTabstop ? OneSnippet._decor.inactiveFinal : OneSnippet._decor.inactive);\r\n                }\r\n            });\r\n            return selections;\r\n        });\r\n        return !couldSkipThisPlaceholder ? newSelections : this.move(fwd);\r\n    };\r\n    OneSnippet.prototype._hasPlaceholderBeenCollapsed = function (placeholder) {\r\n        // A placeholder is empty when it wasn't empty when authored but\r\n        // when its tracking decoration is empty. This also applies to all\r\n        // potential parent placeholders\r\n        var marker = placeholder;\r\n        while (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                var id = this._placeholderDecorations.get(marker);\r\n                var range = this._editor.getModel().getDecorationRange(id);\r\n                if (range.isEmpty() && marker.toString().length > 0) {\r\n                    return true;\r\n                }\r\n            }\r\n            marker = marker.parent;\r\n        }\r\n        return false;\r\n    };\r\n    Object.defineProperty(OneSnippet.prototype, \"isAtFirstPlaceholder\", {\r\n        get: function () {\r\n            return this._placeholderGroupsIdx <= 0 || this._placeholderGroups.length === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OneSnippet.prototype, \"isAtLastPlaceholder\", {\r\n        get: function () {\r\n            return this._placeholderGroupsIdx === this._placeholderGroups.length - 1;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(OneSnippet.prototype, \"hasPlaceholder\", {\r\n        get: function () {\r\n            return this._snippet.placeholders.length > 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    OneSnippet.prototype.computePossibleSelections = function () {\r\n        var result = new Map();\r\n        for (var _i = 0, _a = this._placeholderGroups; _i < _a.length; _i++) {\r\n            var placeholdersWithEqualIndex = _a[_i];\r\n            var ranges = void 0;\r\n            for (var _b = 0, placeholdersWithEqualIndex_1 = placeholdersWithEqualIndex; _b < placeholdersWithEqualIndex_1.length; _b++) {\r\n                var placeholder = placeholdersWithEqualIndex_1[_b];\r\n                if (placeholder.isFinalTabstop) {\r\n                    // ignore those\r\n                    break;\r\n                }\r\n                if (!ranges) {\r\n                    ranges = [];\r\n                    result.set(placeholder.index, ranges);\r\n                }\r\n                var id = this._placeholderDecorations.get(placeholder);\r\n                var range = this._editor.getModel().getDecorationRange(id);\r\n                if (!range) {\r\n                    // one of the placeholder lost its decoration and\r\n                    // therefore we bail out and pretend the placeholder\r\n                    // (with its mirrors) doesn't exist anymore.\r\n                    result.delete(placeholder.index);\r\n                    break;\r\n                }\r\n                ranges.push(range);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    Object.defineProperty(OneSnippet.prototype, \"choice\", {\r\n        get: function () {\r\n            return this._placeholderGroups[this._placeholderGroupsIdx][0].choice;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    OneSnippet.prototype.merge = function (others) {\r\n        var _this = this;\r\n        var model = this._editor.getModel();\r\n        this._nestingLevel *= 10;\r\n        this._editor.changeDecorations(function (accessor) {\r\n            // For each active placeholder take one snippet and merge it\r\n            // in that the placeholder (can be many for `$1foo$1foo`). Because\r\n            // everything is sorted by editor selection we can simply remove\r\n            // elements from the beginning of the array\r\n            for (var _i = 0, _a = _this._placeholderGroups[_this._placeholderGroupsIdx]; _i < _a.length; _i++) {\r\n                var placeholder = _a[_i];\r\n                var nested = others.shift();\r\n                console.assert(!nested._placeholderDecorations);\r\n                // Massage placeholder-indicies of the nested snippet to be\r\n                // sorted right after the insertion point. This ensures we move\r\n                // through the placeholders in the correct order\r\n                var indexLastPlaceholder = nested._snippet.placeholderInfo.last.index;\r\n                for (var _b = 0, _c = nested._snippet.placeholderInfo.all; _b < _c.length; _b++) {\r\n                    var nestedPlaceholder = _c[_b];\r\n                    if (nestedPlaceholder.isFinalTabstop) {\r\n                        nestedPlaceholder.index = placeholder.index + ((indexLastPlaceholder + 1) / _this._nestingLevel);\r\n                    }\r\n                    else {\r\n                        nestedPlaceholder.index = placeholder.index + (nestedPlaceholder.index / _this._nestingLevel);\r\n                    }\r\n                }\r\n                _this._snippet.replace(placeholder, nested._snippet.children);\r\n                // Remove the placeholder at which position are inserting\r\n                // the snippet and also remove its decoration.\r\n                var id = _this._placeholderDecorations.get(placeholder);\r\n                accessor.removeDecoration(id);\r\n                _this._placeholderDecorations.delete(placeholder);\r\n                // For each *new* placeholder we create decoration to monitor\r\n                // how and if it grows/shrinks.\r\n                for (var _d = 0, _e = nested._snippet.placeholders; _d < _e.length; _d++) {\r\n                    var placeholder_1 = _e[_d];\r\n                    var placeholderOffset = nested._snippet.offset(placeholder_1);\r\n                    var placeholderLen = nested._snippet.fullLen(placeholder_1);\r\n                    var range = Range.fromPositions(model.getPositionAt(nested._offset + placeholderOffset), model.getPositionAt(nested._offset + placeholderOffset + placeholderLen));\r\n                    var handle = accessor.addDecoration(range, OneSnippet._decor.inactive);\r\n                    _this._placeholderDecorations.set(placeholder_1, handle);\r\n                }\r\n            }\r\n            // Last, re-create the placeholder groups by sorting placeholders by their index.\r\n            _this._placeholderGroups = groupBy(_this._snippet.placeholders, Placeholder.compareByIndex);\r\n        });\r\n    };\r\n    OneSnippet._decor = {\r\n        active: ModelDecorationOptions.register({ stickiness: 0 /* AlwaysGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n        inactive: ModelDecorationOptions.register({ stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'snippet-placeholder' }),\r\n        activeFinal: ModelDecorationOptions.register({ stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n        inactiveFinal: ModelDecorationOptions.register({ stickiness: 1 /* NeverGrowsWhenTypingAtEdges */, className: 'finish-snippet-placeholder' }),\r\n    };\r\n    return OneSnippet;\r\n}());\r\nexport { OneSnippet };\r\nvar _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined\r\n};\r\nvar SnippetSession = /** @class */ (function () {\r\n    function SnippetSession(editor, template, options) {\r\n        if (options === void 0) { options = _defaultOptions; }\r\n        this._templateMerges = [];\r\n        this._snippets = [];\r\n        this._editor = editor;\r\n        this._template = template;\r\n        this._options = options;\r\n    }\r\n    SnippetSession.adjustWhitespace = function (model, position, snippet, adjustIndentation, adjustNewlines) {\r\n        var line = model.getLineContent(position.lineNumber);\r\n        var lineLeadingWhitespace = getLeadingWhitespace(line, 0, position.column - 1);\r\n        snippet.walk(function (marker) {\r\n            if (marker instanceof Text && !(marker.parent instanceof Choice)) {\r\n                // adjust indentation of text markers, except for choise elements\r\n                // which get adjusted when being selected\r\n                var lines = marker.value.split(/\\r\\n|\\r|\\n/);\r\n                if (adjustIndentation) {\r\n                    for (var i = 1; i < lines.length; i++) {\r\n                        var templateLeadingWhitespace = getLeadingWhitespace(lines[i]);\r\n                        lines[i] = model.normalizeIndentation(lineLeadingWhitespace + templateLeadingWhitespace) + lines[i].substr(templateLeadingWhitespace.length);\r\n                    }\r\n                }\r\n                if (adjustNewlines) {\r\n                    var newValue = lines.join(model.getEOL());\r\n                    if (newValue !== marker.value) {\r\n                        marker.parent.replace(marker, [new Text(newValue)]);\r\n                    }\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n    };\r\n    SnippetSession.adjustSelection = function (model, selection, overwriteBefore, overwriteAfter) {\r\n        if (overwriteBefore !== 0 || overwriteAfter !== 0) {\r\n            // overwrite[Before|After] is compute using the position, not the whole\r\n            // selection. therefore we adjust the selection around that position\r\n            var positionLineNumber = selection.positionLineNumber, positionColumn = selection.positionColumn;\r\n            var positionColumnBefore = positionColumn - overwriteBefore;\r\n            var positionColumnAfter = positionColumn + overwriteAfter;\r\n            var range = model.validateRange({\r\n                startLineNumber: positionLineNumber,\r\n                startColumn: positionColumnBefore,\r\n                endLineNumber: positionLineNumber,\r\n                endColumn: positionColumnAfter\r\n            });\r\n            selection = Selection.createWithDirection(range.startLineNumber, range.startColumn, range.endLineNumber, range.endColumn, selection.getDirection());\r\n        }\r\n        return selection;\r\n    };\r\n    SnippetSession.createEditsAndSnippets = function (editor, template, overwriteBefore, overwriteAfter, enforceFinalTabstop, adjustWhitespace, clipboardText) {\r\n        var edits = [];\r\n        var snippets = [];\r\n        if (!editor.hasModel()) {\r\n            return { edits: edits, snippets: snippets };\r\n        }\r\n        var model = editor.getModel();\r\n        var workspaceService = editor.invokeWithinContext(function (accessor) { return accessor.get(IWorkspaceContextService, optional); });\r\n        var modelBasedVariableResolver = editor.invokeWithinContext(function (accessor) { return new ModelBasedVariableResolver(accessor.get(ILabelService, optional), model); });\r\n        var clipboardService = editor.invokeWithinContext(function (accessor) { return accessor.get(IClipboardService, optional); });\r\n        var readClipboardText = function () { return clipboardText || clipboardService && clipboardService.readTextSync(); };\r\n        var delta = 0;\r\n        // know what text the overwrite[Before|After] extensions\r\n        // of the primary curser have selected because only when\r\n        // secondary selections extend to the same text we can grow them\r\n        var firstBeforeText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), overwriteBefore, 0));\r\n        var firstAfterText = model.getValueInRange(SnippetSession.adjustSelection(model, editor.getSelection(), 0, overwriteAfter));\r\n        // remember the first non-whitespace column to decide if\r\n        // `keepWhitespace` should be overruled for secondary selections\r\n        var firstLineFirstNonWhitespace = model.getLineFirstNonWhitespaceColumn(editor.getSelection().positionLineNumber);\r\n        // sort selections by their start position but remeber\r\n        // the original index. that allows you to create correct\r\n        // offset-based selection logic without changing the\r\n        // primary selection\r\n        var indexedSelections = editor.getSelections()\r\n            .map(function (selection, idx) { return ({ selection: selection, idx: idx }); })\r\n            .sort(function (a, b) { return Range.compareRangesUsingStarts(a.selection, b.selection); });\r\n        for (var _i = 0, indexedSelections_1 = indexedSelections; _i < indexedSelections_1.length; _i++) {\r\n            var _a = indexedSelections_1[_i], selection = _a.selection, idx = _a.idx;\r\n            // extend selection with the `overwriteBefore` and `overwriteAfter` and then\r\n            // compare if this matches the extensions of the primary selection\r\n            var extensionBefore = SnippetSession.adjustSelection(model, selection, overwriteBefore, 0);\r\n            var extensionAfter = SnippetSession.adjustSelection(model, selection, 0, overwriteAfter);\r\n            if (firstBeforeText !== model.getValueInRange(extensionBefore)) {\r\n                extensionBefore = selection;\r\n            }\r\n            if (firstAfterText !== model.getValueInRange(extensionAfter)) {\r\n                extensionAfter = selection;\r\n            }\r\n            // merge the before and after selection into one\r\n            var snippetSelection = selection\r\n                .setStartPosition(extensionBefore.startLineNumber, extensionBefore.startColumn)\r\n                .setEndPosition(extensionAfter.endLineNumber, extensionAfter.endColumn);\r\n            var snippet = new SnippetParser().parse(template, true, enforceFinalTabstop);\r\n            // adjust the template string to match the indentation and\r\n            // whitespace rules of this insert location (can be different for each cursor)\r\n            // happens when being asked for (default) or when this is a secondary\r\n            // cursor and the leading whitespace is different\r\n            var start = snippetSelection.getStartPosition();\r\n            SnippetSession.adjustWhitespace(model, start, snippet, adjustWhitespace || (idx > 0 && firstLineFirstNonWhitespace !== model.getLineFirstNonWhitespaceColumn(selection.positionLineNumber)), true);\r\n            snippet.resolveVariables(new CompositeSnippetVariableResolver([\r\n                modelBasedVariableResolver,\r\n                new ClipboardBasedVariableResolver(readClipboardText, idx, indexedSelections.length, editor.getOption(60 /* multiCursorPaste */) === 'spread'),\r\n                new SelectionBasedVariableResolver(model, selection),\r\n                new CommentBasedVariableResolver(model),\r\n                new TimeBasedVariableResolver,\r\n                new WorkspaceBasedVariableResolver(workspaceService),\r\n                new RandomBasedVariableResolver,\r\n            ]));\r\n            var offset = model.getOffsetAt(start) + delta;\r\n            delta += snippet.toString().length - model.getValueLengthInRange(snippetSelection);\r\n            // store snippets with the index of their originating selection.\r\n            // that ensures the primiary cursor stays primary despite not being\r\n            // the one with lowest start position\r\n            edits[idx] = EditOperation.replace(snippetSelection, snippet.toString());\r\n            snippets[idx] = new OneSnippet(editor, snippet, offset);\r\n        }\r\n        return { edits: edits, snippets: snippets };\r\n    };\r\n    SnippetSession.prototype.dispose = function () {\r\n        dispose(this._snippets);\r\n    };\r\n    SnippetSession.prototype._logInfo = function () {\r\n        return \"template=\\\"\" + this._template + \"\\\", merged_templates=\\\"\" + this._templateMerges.join(' -> ') + \"\\\"\";\r\n    };\r\n    SnippetSession.prototype.insert = function () {\r\n        var _this = this;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // make insert edit and start with first selections\r\n        var _a = SnippetSession.createEditsAndSnippets(this._editor, this._template, this._options.overwriteBefore, this._options.overwriteAfter, false, this._options.adjustWhitespace, this._options.clipboardText), edits = _a.edits, snippets = _a.snippets;\r\n        this._snippets = snippets;\r\n        this._editor.executeEdits('snippet', edits, function (undoEdits) {\r\n            if (_this._snippets[0].hasPlaceholder) {\r\n                return _this._move(true);\r\n            }\r\n            else {\r\n                return undoEdits.map(function (edit) { return Selection.fromPositions(edit.range.getEndPosition()); });\r\n            }\r\n        });\r\n        this._editor.revealRange(this._editor.getSelections()[0]);\r\n    };\r\n    SnippetSession.prototype.merge = function (template, options) {\r\n        var _this = this;\r\n        if (options === void 0) { options = _defaultOptions; }\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        this._templateMerges.push([this._snippets[0]._nestingLevel, this._snippets[0]._placeholderGroupsIdx, template]);\r\n        var _a = SnippetSession.createEditsAndSnippets(this._editor, template, options.overwriteBefore, options.overwriteAfter, true, options.adjustWhitespace, options.clipboardText), edits = _a.edits, snippets = _a.snippets;\r\n        this._editor.executeEdits('snippet', edits, function (undoEdits) {\r\n            for (var _i = 0, _a = _this._snippets; _i < _a.length; _i++) {\r\n                var snippet = _a[_i];\r\n                snippet.merge(snippets);\r\n            }\r\n            console.assert(snippets.length === 0);\r\n            if (_this._snippets[0].hasPlaceholder) {\r\n                return _this._move(undefined);\r\n            }\r\n            else {\r\n                return undoEdits.map(function (edit) { return Selection.fromPositions(edit.range.getEndPosition()); });\r\n            }\r\n        });\r\n    };\r\n    SnippetSession.prototype.next = function () {\r\n        var newSelections = this._move(true);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    };\r\n    SnippetSession.prototype.prev = function () {\r\n        var newSelections = this._move(false);\r\n        this._editor.setSelections(newSelections);\r\n        this._editor.revealPositionInCenterIfOutsideViewport(newSelections[0].getPosition());\r\n    };\r\n    SnippetSession.prototype._move = function (fwd) {\r\n        var selections = [];\r\n        for (var _i = 0, _a = this._snippets; _i < _a.length; _i++) {\r\n            var snippet = _a[_i];\r\n            var oneSelection = snippet.move(fwd);\r\n            selections.push.apply(selections, oneSelection);\r\n        }\r\n        return selections;\r\n    };\r\n    Object.defineProperty(SnippetSession.prototype, \"isAtFirstPlaceholder\", {\r\n        get: function () {\r\n            return this._snippets[0].isAtFirstPlaceholder;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SnippetSession.prototype, \"isAtLastPlaceholder\", {\r\n        get: function () {\r\n            return this._snippets[0].isAtLastPlaceholder;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SnippetSession.prototype, \"hasPlaceholder\", {\r\n        get: function () {\r\n            return this._snippets[0].hasPlaceholder;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(SnippetSession.prototype, \"choice\", {\r\n        get: function () {\r\n            return this._snippets[0].choice;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    SnippetSession.prototype.isSelectionWithinPlaceholders = function () {\r\n        if (!this.hasPlaceholder) {\r\n            return false;\r\n        }\r\n        var selections = this._editor.getSelections();\r\n        if (selections.length < this._snippets.length) {\r\n            // this means we started snippet mode with N\r\n            // selections and have M (N > M) selections.\r\n            // So one snippet is without selection -> cancel\r\n            return false;\r\n        }\r\n        var allPossibleSelections = new Map();\r\n        var _loop_1 = function (snippet) {\r\n            var possibleSelections = snippet.computePossibleSelections();\r\n            // for the first snippet find the placeholder (and its ranges)\r\n            // that contain at least one selection. for all remaining snippets\r\n            // the same placeholder (and their ranges) must be used.\r\n            if (allPossibleSelections.size === 0) {\r\n                possibleSelections.forEach(function (ranges, index) {\r\n                    ranges.sort(Range.compareRangesUsingStarts);\r\n                    for (var _i = 0, selections_1 = selections; _i < selections_1.length; _i++) {\r\n                        var selection = selections_1[_i];\r\n                        if (ranges[0].containsRange(selection)) {\r\n                            allPossibleSelections.set(index, []);\r\n                            break;\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            if (allPossibleSelections.size === 0) {\r\n                return { value: false };\r\n            }\r\n            // add selections from 'this' snippet so that we know all\r\n            // selections for this placeholder\r\n            allPossibleSelections.forEach(function (array, index) {\r\n                array.push.apply(array, possibleSelections.get(index));\r\n            });\r\n        };\r\n        for (var _i = 0, _a = this._snippets; _i < _a.length; _i++) {\r\n            var snippet = _a[_i];\r\n            var state_1 = _loop_1(snippet);\r\n            if (typeof state_1 === \"object\")\r\n                return state_1.value;\r\n        }\r\n        // sort selections (and later placeholder-ranges). then walk both\r\n        // arrays and make sure the placeholder-ranges contain the corresponding\r\n        // selection\r\n        selections.sort(Range.compareRangesUsingStarts);\r\n        allPossibleSelections.forEach(function (ranges, index) {\r\n            if (ranges.length !== selections.length) {\r\n                allPossibleSelections.delete(index);\r\n                return;\r\n            }\r\n            ranges.sort(Range.compareRangesUsingStarts);\r\n            for (var i = 0; i < ranges.length; i++) {\r\n                if (!ranges[i].containsRange(selections[i])) {\r\n                    allPossibleSelections.delete(index);\r\n                    return;\r\n                }\r\n            }\r\n        });\r\n        // from all possible selections we have deleted those\r\n        // that don't match with the current selection. if we don't\r\n        // have any left, we don't have a selection anymore\r\n        return allPossibleSelections.size > 0;\r\n    };\r\n    return SnippetSession;\r\n}());\r\nexport { SnippetSession };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __param = (this && this.__param) || function (paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n};\r\nimport { dispose, DisposableStore } from '../../../base/common/lifecycle.js';\r\nimport { repeat } from '../../../base/common/strings.js';\r\nimport { EditorCommand, registerEditorCommand, registerEditorContribution } from '../../browser/editorExtensions.js';\r\nimport { Range } from '../../common/core/range.js';\r\nimport { Selection } from '../../common/core/selection.js';\r\nimport { EditorContextKeys } from '../../common/editorContextKeys.js';\r\nimport { showSimpleSuggestions } from '../suggest/suggest.js';\r\nimport { ContextKeyExpr, IContextKeyService, RawContextKey } from '../../../platform/contextkey/common/contextkey.js';\r\nimport { ILogService } from '../../../platform/log/common/log.js';\r\nimport { SnippetSession } from './snippetSession.js';\r\nvar _defaultOptions = {\r\n    overwriteBefore: 0,\r\n    overwriteAfter: 0,\r\n    undoStopBefore: true,\r\n    undoStopAfter: true,\r\n    adjustWhitespace: true,\r\n    clipboardText: undefined\r\n};\r\nvar SnippetController2 = /** @class */ (function () {\r\n    function SnippetController2(_editor, _logService, contextKeyService) {\r\n        this._editor = _editor;\r\n        this._logService = _logService;\r\n        this._snippetListener = new DisposableStore();\r\n        this._modelVersionId = -1;\r\n        this._inSnippet = SnippetController2.InSnippetMode.bindTo(contextKeyService);\r\n        this._hasNextTabstop = SnippetController2.HasNextTabstop.bindTo(contextKeyService);\r\n        this._hasPrevTabstop = SnippetController2.HasPrevTabstop.bindTo(contextKeyService);\r\n    }\r\n    SnippetController2.get = function (editor) {\r\n        return editor.getContribution(SnippetController2.ID);\r\n    };\r\n    SnippetController2.prototype.dispose = function () {\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        dispose(this._session);\r\n        this._snippetListener.dispose();\r\n    };\r\n    SnippetController2.prototype.insert = function (template, opts) {\r\n        // this is here to find out more about the yet-not-understood\r\n        // error that sometimes happens when we fail to inserted a nested\r\n        // snippet\r\n        try {\r\n            this._doInsert(template, typeof opts === 'undefined' ? _defaultOptions : __assign(__assign({}, _defaultOptions), opts));\r\n        }\r\n        catch (e) {\r\n            this.cancel();\r\n            this._logService.error(e);\r\n            this._logService.error('snippet_error');\r\n            this._logService.error('insert_template=', template);\r\n            this._logService.error('existing_template=', this._session ? this._session._logInfo() : '<no_session>');\r\n        }\r\n    };\r\n    SnippetController2.prototype._doInsert = function (template, opts) {\r\n        var _this = this;\r\n        if (!this._editor.hasModel()) {\r\n            return;\r\n        }\r\n        // don't listen while inserting the snippet\r\n        // as that is the inflight state causing cancelation\r\n        this._snippetListener.clear();\r\n        if (opts.undoStopBefore) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        if (!this._session) {\r\n            this._modelVersionId = this._editor.getModel().getAlternativeVersionId();\r\n            this._session = new SnippetSession(this._editor, template, opts);\r\n            this._session.insert();\r\n        }\r\n        else {\r\n            this._session.merge(template, opts);\r\n        }\r\n        if (opts.undoStopAfter) {\r\n            this._editor.getModel().pushStackElement();\r\n        }\r\n        this._updateState();\r\n        this._snippetListener.add(this._editor.onDidChangeModelContent(function (e) { return e.isFlush && _this.cancel(); }));\r\n        this._snippetListener.add(this._editor.onDidChangeModel(function () { return _this.cancel(); }));\r\n        this._snippetListener.add(this._editor.onDidChangeCursorSelection(function () { return _this._updateState(); }));\r\n    };\r\n    SnippetController2.prototype._updateState = function () {\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            // canceled in the meanwhile\r\n            return;\r\n        }\r\n        if (this._modelVersionId === this._editor.getModel().getAlternativeVersionId()) {\r\n            // undo until the 'before' state happened\r\n            // and makes use cancel snippet mode\r\n            return this.cancel();\r\n        }\r\n        if (!this._session.hasPlaceholder) {\r\n            // don't listen for selection changes and don't\r\n            // update context keys when the snippet is plain text\r\n            return this.cancel();\r\n        }\r\n        if (this._session.isAtLastPlaceholder || !this._session.isSelectionWithinPlaceholders()) {\r\n            return this.cancel();\r\n        }\r\n        this._inSnippet.set(true);\r\n        this._hasPrevTabstop.set(!this._session.isAtFirstPlaceholder);\r\n        this._hasNextTabstop.set(!this._session.isAtLastPlaceholder);\r\n        this._handleChoice();\r\n    };\r\n    SnippetController2.prototype._handleChoice = function () {\r\n        var _this = this;\r\n        if (!this._session || !this._editor.hasModel()) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        var choice = this._session.choice;\r\n        if (!choice) {\r\n            this._currentChoice = undefined;\r\n            return;\r\n        }\r\n        if (this._currentChoice !== choice) {\r\n            this._currentChoice = choice;\r\n            this._editor.setSelections(this._editor.getSelections()\r\n                .map(function (s) { return Selection.fromPositions(s.getStartPosition()); }));\r\n            var first_1 = choice.options[0];\r\n            showSimpleSuggestions(this._editor, choice.options.map(function (option, i) {\r\n                // let before = choice.options.slice(0, i);\r\n                // let after = choice.options.slice(i);\r\n                return {\r\n                    kind: 13 /* Value */,\r\n                    label: option.value,\r\n                    insertText: option.value,\r\n                    // insertText: `\\${1|${after.concat(before).join(',')}|}$0`,\r\n                    // snippetType: 'textmate',\r\n                    sortText: repeat('a', i + 1),\r\n                    range: Range.fromPositions(_this._editor.getPosition(), _this._editor.getPosition().delta(0, first_1.value.length))\r\n                };\r\n            }));\r\n        }\r\n    };\r\n    SnippetController2.prototype.finish = function () {\r\n        while (this._inSnippet.get()) {\r\n            this.next();\r\n        }\r\n    };\r\n    SnippetController2.prototype.cancel = function (resetSelection) {\r\n        if (resetSelection === void 0) { resetSelection = false; }\r\n        this._inSnippet.reset();\r\n        this._hasPrevTabstop.reset();\r\n        this._hasNextTabstop.reset();\r\n        this._snippetListener.clear();\r\n        dispose(this._session);\r\n        this._session = undefined;\r\n        this._modelVersionId = -1;\r\n        if (resetSelection) {\r\n            // reset selection to the primary cursor when being asked\r\n            // for. this happens when explicitly cancelling snippet mode,\r\n            // e.g. when pressing ESC\r\n            this._editor.setSelections([this._editor.getSelection()]);\r\n        }\r\n    };\r\n    SnippetController2.prototype.prev = function () {\r\n        if (this._session) {\r\n            this._session.prev();\r\n        }\r\n        this._updateState();\r\n    };\r\n    SnippetController2.prototype.next = function () {\r\n        if (this._session) {\r\n            this._session.next();\r\n        }\r\n        this._updateState();\r\n    };\r\n    SnippetController2.prototype.isInSnippet = function () {\r\n        return Boolean(this._inSnippet.get());\r\n    };\r\n    SnippetController2.ID = 'snippetController2';\r\n    SnippetController2.InSnippetMode = new RawContextKey('inSnippetMode', false);\r\n    SnippetController2.HasNextTabstop = new RawContextKey('hasNextTabstop', false);\r\n    SnippetController2.HasPrevTabstop = new RawContextKey('hasPrevTabstop', false);\r\n    SnippetController2 = __decorate([\r\n        __param(1, ILogService),\r\n        __param(2, IContextKeyService)\r\n    ], SnippetController2);\r\n    return SnippetController2;\r\n}());\r\nexport { SnippetController2 };\r\nregisterEditorContribution(SnippetController2.ID, SnippetController2);\r\nvar CommandCtor = EditorCommand.bindToContribution(SnippetController2.get);\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToNextSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasNextTabstop),\r\n    handler: function (ctrl) { return ctrl.next(); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'jumpToPrevSnippetPlaceholder',\r\n    precondition: ContextKeyExpr.and(SnippetController2.InSnippetMode, SnippetController2.HasPrevTabstop),\r\n    handler: function (ctrl) { return ctrl.prev(); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 1024 /* Shift */ | 2 /* Tab */\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'leaveSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: function (ctrl) { return ctrl.cancel(true); },\r\n    kbOpts: {\r\n        weight: 100 /* EditorContrib */ + 30,\r\n        kbExpr: EditorContextKeys.editorTextFocus,\r\n        primary: 9 /* Escape */,\r\n        secondary: [1024 /* Shift */ | 9 /* Escape */]\r\n    }\r\n}));\r\nregisterEditorCommand(new CommandCtor({\r\n    id: 'acceptSnippet',\r\n    precondition: SnippetController2.InSnippetMode,\r\n    handler: function (ctrl) { return ctrl.finish(); },\r\n}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArrays = (this && this.__spreadArrays) || function () {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\nvar _a;\r\nvar Scanner = /** @class */ (function () {\r\n    function Scanner() {\r\n        this.value = '';\r\n        this.pos = 0;\r\n    }\r\n    Scanner.isDigitCharacter = function (ch) {\r\n        return ch >= 48 /* Digit0 */ && ch <= 57 /* Digit9 */;\r\n    };\r\n    Scanner.isVariableCharacter = function (ch) {\r\n        return ch === 95 /* Underline */\r\n            || (ch >= 97 /* a */ && ch <= 122 /* z */)\r\n            || (ch >= 65 /* A */ && ch <= 90 /* Z */);\r\n    };\r\n    Scanner.prototype.text = function (value) {\r\n        this.value = value;\r\n        this.pos = 0;\r\n    };\r\n    Scanner.prototype.tokenText = function (token) {\r\n        return this.value.substr(token.pos, token.len);\r\n    };\r\n    Scanner.prototype.next = function () {\r\n        if (this.pos >= this.value.length) {\r\n            return { type: 14 /* EOF */, pos: this.pos, len: 0 };\r\n        }\r\n        var pos = this.pos;\r\n        var len = 0;\r\n        var ch = this.value.charCodeAt(pos);\r\n        var type;\r\n        // static types\r\n        type = Scanner._table[ch];\r\n        if (typeof type === 'number') {\r\n            this.pos += 1;\r\n            return { type: type, pos: pos, len: 1 };\r\n        }\r\n        // number\r\n        if (Scanner.isDigitCharacter(ch)) {\r\n            type = 8 /* Int */;\r\n            do {\r\n                len += 1;\r\n                ch = this.value.charCodeAt(pos + len);\r\n            } while (Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type: type, pos: pos, len: len };\r\n        }\r\n        // variable name\r\n        if (Scanner.isVariableCharacter(ch)) {\r\n            type = 9 /* VariableName */;\r\n            do {\r\n                ch = this.value.charCodeAt(pos + (++len));\r\n            } while (Scanner.isVariableCharacter(ch) || Scanner.isDigitCharacter(ch));\r\n            this.pos += len;\r\n            return { type: type, pos: pos, len: len };\r\n        }\r\n        // format\r\n        type = 10 /* Format */;\r\n        do {\r\n            len += 1;\r\n            ch = this.value.charCodeAt(pos + len);\r\n        } while (!isNaN(ch)\r\n            && typeof Scanner._table[ch] === 'undefined' // not static token\r\n            && !Scanner.isDigitCharacter(ch) // not number\r\n            && !Scanner.isVariableCharacter(ch) // not variable\r\n        );\r\n        this.pos += len;\r\n        return { type: type, pos: pos, len: len };\r\n    };\r\n    Scanner._table = (_a = {},\r\n        _a[36 /* DollarSign */] = 0 /* Dollar */,\r\n        _a[58 /* Colon */] = 1 /* Colon */,\r\n        _a[44 /* Comma */] = 2 /* Comma */,\r\n        _a[123 /* OpenCurlyBrace */] = 3 /* CurlyOpen */,\r\n        _a[125 /* CloseCurlyBrace */] = 4 /* CurlyClose */,\r\n        _a[92 /* Backslash */] = 5 /* Backslash */,\r\n        _a[47 /* Slash */] = 6 /* Forwardslash */,\r\n        _a[124 /* Pipe */] = 7 /* Pipe */,\r\n        _a[43 /* Plus */] = 11 /* Plus */,\r\n        _a[45 /* Dash */] = 12 /* Dash */,\r\n        _a[63 /* QuestionMark */] = 13 /* QuestionMark */,\r\n        _a);\r\n    return Scanner;\r\n}());\r\nexport { Scanner };\r\nvar Marker = /** @class */ (function () {\r\n    function Marker() {\r\n        this._children = [];\r\n    }\r\n    Marker.prototype.appendChild = function (child) {\r\n        if (child instanceof Text && this._children[this._children.length - 1] instanceof Text) {\r\n            // this and previous child are text -> merge them\r\n            this._children[this._children.length - 1].value += child.value;\r\n        }\r\n        else {\r\n            // normal adoption of child\r\n            child.parent = this;\r\n            this._children.push(child);\r\n        }\r\n        return this;\r\n    };\r\n    Marker.prototype.replace = function (child, others) {\r\n        var parent = child.parent;\r\n        var idx = parent.children.indexOf(child);\r\n        var newChildren = parent.children.slice(0);\r\n        newChildren.splice.apply(newChildren, __spreadArrays([idx, 1], others));\r\n        parent._children = newChildren;\r\n        (function _fixParent(children, parent) {\r\n            for (var _i = 0, children_1 = children; _i < children_1.length; _i++) {\r\n                var child_1 = children_1[_i];\r\n                child_1.parent = parent;\r\n                _fixParent(child_1.children, child_1);\r\n            }\r\n        })(others, parent);\r\n    };\r\n    Object.defineProperty(Marker.prototype, \"children\", {\r\n        get: function () {\r\n            return this._children;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Marker.prototype, \"snippet\", {\r\n        get: function () {\r\n            var candidate = this;\r\n            while (true) {\r\n                if (!candidate) {\r\n                    return undefined;\r\n                }\r\n                if (candidate instanceof TextmateSnippet) {\r\n                    return candidate;\r\n                }\r\n                candidate = candidate.parent;\r\n            }\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Marker.prototype.toString = function () {\r\n        return this.children.reduce(function (prev, cur) { return prev + cur.toString(); }, '');\r\n    };\r\n    Marker.prototype.len = function () {\r\n        return 0;\r\n    };\r\n    return Marker;\r\n}());\r\nexport { Marker };\r\nvar Text = /** @class */ (function (_super) {\r\n    __extends(Text, _super);\r\n    function Text(value) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.value = value;\r\n        return _this_1;\r\n    }\r\n    Text.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Text.prototype.len = function () {\r\n        return this.value.length;\r\n    };\r\n    Text.prototype.clone = function () {\r\n        return new Text(this.value);\r\n    };\r\n    return Text;\r\n}(Marker));\r\nexport { Text };\r\nvar TransformableMarker = /** @class */ (function (_super) {\r\n    __extends(TransformableMarker, _super);\r\n    function TransformableMarker() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    return TransformableMarker;\r\n}(Marker));\r\nexport { TransformableMarker };\r\nvar Placeholder = /** @class */ (function (_super) {\r\n    __extends(Placeholder, _super);\r\n    function Placeholder(index) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.index = index;\r\n        return _this_1;\r\n    }\r\n    Placeholder.compareByIndex = function (a, b) {\r\n        if (a.index === b.index) {\r\n            return 0;\r\n        }\r\n        else if (a.isFinalTabstop) {\r\n            return 1;\r\n        }\r\n        else if (b.isFinalTabstop) {\r\n            return -1;\r\n        }\r\n        else if (a.index < b.index) {\r\n            return -1;\r\n        }\r\n        else if (a.index > b.index) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    };\r\n    Object.defineProperty(Placeholder.prototype, \"isFinalTabstop\", {\r\n        get: function () {\r\n            return this.index === 0;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Placeholder.prototype, \"choice\", {\r\n        get: function () {\r\n            return this._children.length === 1 && this._children[0] instanceof Choice\r\n                ? this._children[0]\r\n                : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Placeholder.prototype.clone = function () {\r\n        var ret = new Placeholder(this.index);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Placeholder;\r\n}(TransformableMarker));\r\nexport { Placeholder };\r\nvar Choice = /** @class */ (function (_super) {\r\n    __extends(Choice, _super);\r\n    function Choice() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1.options = [];\r\n        return _this_1;\r\n    }\r\n    Choice.prototype.appendChild = function (marker) {\r\n        if (marker instanceof Text) {\r\n            marker.parent = this;\r\n            this.options.push(marker);\r\n        }\r\n        return this;\r\n    };\r\n    Choice.prototype.toString = function () {\r\n        return this.options[0].value;\r\n    };\r\n    Choice.prototype.len = function () {\r\n        return this.options[0].len();\r\n    };\r\n    Choice.prototype.clone = function () {\r\n        var ret = new Choice();\r\n        this.options.forEach(ret.appendChild, ret);\r\n        return ret;\r\n    };\r\n    return Choice;\r\n}(Marker));\r\nexport { Choice };\r\nvar Transform = /** @class */ (function (_super) {\r\n    __extends(Transform, _super);\r\n    function Transform() {\r\n        var _this_1 = _super !== null && _super.apply(this, arguments) || this;\r\n        _this_1.regexp = new RegExp('');\r\n        return _this_1;\r\n    }\r\n    Transform.prototype.resolve = function (value) {\r\n        var _this = this;\r\n        var didMatch = false;\r\n        var ret = value.replace(this.regexp, function () {\r\n            didMatch = true;\r\n            return _this._replace(Array.prototype.slice.call(arguments, 0, -2));\r\n        });\r\n        // when the regex didn't match and when the transform has\r\n        // else branches, then run those\r\n        if (!didMatch && this._children.some(function (child) { return child instanceof FormatString && Boolean(child.elseValue); })) {\r\n            ret = this._replace([]);\r\n        }\r\n        return ret;\r\n    };\r\n    Transform.prototype._replace = function (groups) {\r\n        var ret = '';\r\n        for (var _i = 0, _a = this._children; _i < _a.length; _i++) {\r\n            var marker = _a[_i];\r\n            if (marker instanceof FormatString) {\r\n                var value = groups[marker.index] || '';\r\n                value = marker.resolve(value);\r\n                ret += value;\r\n            }\r\n            else {\r\n                ret += marker.toString();\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Transform.prototype.toString = function () {\r\n        return '';\r\n    };\r\n    Transform.prototype.clone = function () {\r\n        var ret = new Transform();\r\n        ret.regexp = new RegExp(this.regexp.source, '' + (this.regexp.ignoreCase ? 'i' : '') + (this.regexp.global ? 'g' : ''));\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Transform;\r\n}(Marker));\r\nexport { Transform };\r\nvar FormatString = /** @class */ (function (_super) {\r\n    __extends(FormatString, _super);\r\n    function FormatString(index, shorthandName, ifValue, elseValue) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.index = index;\r\n        _this_1.shorthandName = shorthandName;\r\n        _this_1.ifValue = ifValue;\r\n        _this_1.elseValue = elseValue;\r\n        return _this_1;\r\n    }\r\n    FormatString.prototype.resolve = function (value) {\r\n        if (this.shorthandName === 'upcase') {\r\n            return !value ? '' : value.toLocaleUpperCase();\r\n        }\r\n        else if (this.shorthandName === 'downcase') {\r\n            return !value ? '' : value.toLocaleLowerCase();\r\n        }\r\n        else if (this.shorthandName === 'capitalize') {\r\n            return !value ? '' : (value[0].toLocaleUpperCase() + value.substr(1));\r\n        }\r\n        else if (this.shorthandName === 'pascalcase') {\r\n            return !value ? '' : this._toPascalCase(value);\r\n        }\r\n        else if (Boolean(value) && typeof this.ifValue === 'string') {\r\n            return this.ifValue;\r\n        }\r\n        else if (!Boolean(value) && typeof this.elseValue === 'string') {\r\n            return this.elseValue;\r\n        }\r\n        else {\r\n            return value || '';\r\n        }\r\n    };\r\n    FormatString.prototype._toPascalCase = function (value) {\r\n        var match = value.match(/[a-z]+/gi);\r\n        if (!match) {\r\n            return value;\r\n        }\r\n        return match.map(function (word) {\r\n            return word.charAt(0).toUpperCase()\r\n                + word.substr(1).toLowerCase();\r\n        })\r\n            .join('');\r\n    };\r\n    FormatString.prototype.clone = function () {\r\n        var ret = new FormatString(this.index, this.shorthandName, this.ifValue, this.elseValue);\r\n        return ret;\r\n    };\r\n    return FormatString;\r\n}(Marker));\r\nexport { FormatString };\r\nvar Variable = /** @class */ (function (_super) {\r\n    __extends(Variable, _super);\r\n    function Variable(name) {\r\n        var _this_1 = _super.call(this) || this;\r\n        _this_1.name = name;\r\n        return _this_1;\r\n    }\r\n    Variable.prototype.resolve = function (resolver) {\r\n        var value = resolver.resolve(this);\r\n        if (this.transform) {\r\n            value = this.transform.resolve(value || '');\r\n        }\r\n        if (value !== undefined) {\r\n            this._children = [new Text(value)];\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    Variable.prototype.clone = function () {\r\n        var ret = new Variable(this.name);\r\n        if (this.transform) {\r\n            ret.transform = this.transform.clone();\r\n        }\r\n        ret._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    return Variable;\r\n}(TransformableMarker));\r\nexport { Variable };\r\nfunction walk(marker, visitor) {\r\n    var stack = __spreadArrays(marker);\r\n    while (stack.length > 0) {\r\n        var marker_1 = stack.shift();\r\n        var recurse = visitor(marker_1);\r\n        if (!recurse) {\r\n            break;\r\n        }\r\n        stack.unshift.apply(stack, marker_1.children);\r\n    }\r\n}\r\nvar TextmateSnippet = /** @class */ (function (_super) {\r\n    __extends(TextmateSnippet, _super);\r\n    function TextmateSnippet() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(TextmateSnippet.prototype, \"placeholderInfo\", {\r\n        get: function () {\r\n            if (!this._placeholders) {\r\n                // fill in placeholders\r\n                var all_1 = [];\r\n                var last_1;\r\n                this.walk(function (candidate) {\r\n                    if (candidate instanceof Placeholder) {\r\n                        all_1.push(candidate);\r\n                        last_1 = !last_1 || last_1.index < candidate.index ? candidate : last_1;\r\n                    }\r\n                    return true;\r\n                });\r\n                this._placeholders = { all: all_1, last: last_1 };\r\n            }\r\n            return this._placeholders;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(TextmateSnippet.prototype, \"placeholders\", {\r\n        get: function () {\r\n            var all = this.placeholderInfo.all;\r\n            return all;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    TextmateSnippet.prototype.offset = function (marker) {\r\n        var pos = 0;\r\n        var found = false;\r\n        this.walk(function (candidate) {\r\n            if (candidate === marker) {\r\n                found = true;\r\n                return false;\r\n            }\r\n            pos += candidate.len();\r\n            return true;\r\n        });\r\n        if (!found) {\r\n            return -1;\r\n        }\r\n        return pos;\r\n    };\r\n    TextmateSnippet.prototype.fullLen = function (marker) {\r\n        var ret = 0;\r\n        walk([marker], function (marker) {\r\n            ret += marker.len();\r\n            return true;\r\n        });\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.enclosingPlaceholders = function (placeholder) {\r\n        var ret = [];\r\n        var parent = placeholder.parent;\r\n        while (parent) {\r\n            if (parent instanceof Placeholder) {\r\n                ret.push(parent);\r\n            }\r\n            parent = parent.parent;\r\n        }\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.resolveVariables = function (resolver) {\r\n        var _this_1 = this;\r\n        this.walk(function (candidate) {\r\n            if (candidate instanceof Variable) {\r\n                if (candidate.resolve(resolver)) {\r\n                    _this_1._placeholders = undefined;\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        return this;\r\n    };\r\n    TextmateSnippet.prototype.appendChild = function (child) {\r\n        this._placeholders = undefined;\r\n        return _super.prototype.appendChild.call(this, child);\r\n    };\r\n    TextmateSnippet.prototype.replace = function (child, others) {\r\n        this._placeholders = undefined;\r\n        return _super.prototype.replace.call(this, child, others);\r\n    };\r\n    TextmateSnippet.prototype.clone = function () {\r\n        var ret = new TextmateSnippet();\r\n        this._children = this.children.map(function (child) { return child.clone(); });\r\n        return ret;\r\n    };\r\n    TextmateSnippet.prototype.walk = function (visitor) {\r\n        walk(this.children, visitor);\r\n    };\r\n    return TextmateSnippet;\r\n}(Marker));\r\nexport { TextmateSnippet };\r\nvar SnippetParser = /** @class */ (function () {\r\n    function SnippetParser() {\r\n        this._scanner = new Scanner();\r\n        this._token = { type: 14 /* EOF */, pos: 0, len: 0 };\r\n    }\r\n    SnippetParser.escape = function (value) {\r\n        return value.replace(/\\$|}|\\\\/g, '\\\\$&');\r\n    };\r\n    SnippetParser.prototype.parse = function (value, insertFinalTabstop, enforceFinalTabstop) {\r\n        this._scanner.text(value);\r\n        this._token = this._scanner.next();\r\n        var snippet = new TextmateSnippet();\r\n        while (this._parse(snippet)) {\r\n            // nothing\r\n        }\r\n        // fill in values for placeholders. the first placeholder of an index\r\n        // that has a value defines the value for all placeholders with that index\r\n        var placeholderDefaultValues = new Map();\r\n        var incompletePlaceholders = [];\r\n        var placeholderCount = 0;\r\n        snippet.walk(function (marker) {\r\n            if (marker instanceof Placeholder) {\r\n                placeholderCount += 1;\r\n                if (marker.isFinalTabstop) {\r\n                    placeholderDefaultValues.set(0, undefined);\r\n                }\r\n                else if (!placeholderDefaultValues.has(marker.index) && marker.children.length > 0) {\r\n                    placeholderDefaultValues.set(marker.index, marker.children);\r\n                }\r\n                else {\r\n                    incompletePlaceholders.push(marker);\r\n                }\r\n            }\r\n            return true;\r\n        });\r\n        for (var _i = 0, incompletePlaceholders_1 = incompletePlaceholders; _i < incompletePlaceholders_1.length; _i++) {\r\n            var placeholder = incompletePlaceholders_1[_i];\r\n            var defaultValues = placeholderDefaultValues.get(placeholder.index);\r\n            if (defaultValues) {\r\n                var clone = new Placeholder(placeholder.index);\r\n                clone.transform = placeholder.transform;\r\n                for (var _a = 0, defaultValues_1 = defaultValues; _a < defaultValues_1.length; _a++) {\r\n                    var child = defaultValues_1[_a];\r\n                    clone.appendChild(child.clone());\r\n                }\r\n                snippet.replace(placeholder, [clone]);\r\n            }\r\n        }\r\n        if (!enforceFinalTabstop) {\r\n            enforceFinalTabstop = placeholderCount > 0 && insertFinalTabstop;\r\n        }\r\n        if (!placeholderDefaultValues.has(0) && enforceFinalTabstop) {\r\n            // the snippet uses placeholders but has no\r\n            // final tabstop defined -> insert at the end\r\n            snippet.appendChild(new Placeholder(0));\r\n        }\r\n        return snippet;\r\n    };\r\n    SnippetParser.prototype._accept = function (type, value) {\r\n        if (type === undefined || this._token.type === type) {\r\n            var ret = !value ? true : this._scanner.tokenText(this._token);\r\n            this._token = this._scanner.next();\r\n            return ret;\r\n        }\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._backTo = function (token) {\r\n        this._scanner.pos = token.pos + token.len;\r\n        this._token = token;\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._until = function (type) {\r\n        var start = this._token;\r\n        while (this._token.type !== type) {\r\n            if (this._token.type === 14 /* EOF */) {\r\n                return false;\r\n            }\r\n            else if (this._token.type === 5 /* Backslash */) {\r\n                var nextToken = this._scanner.next();\r\n                if (nextToken.type !== 0 /* Dollar */\r\n                    && nextToken.type !== 4 /* CurlyClose */\r\n                    && nextToken.type !== 5 /* Backslash */) {\r\n                    return false;\r\n                }\r\n            }\r\n            this._token = this._scanner.next();\r\n        }\r\n        var value = this._scanner.value.substring(start.pos, this._token.pos).replace(/\\\\(\\$|}|\\\\)/g, '$1');\r\n        this._token = this._scanner.next();\r\n        return value;\r\n    };\r\n    SnippetParser.prototype._parse = function (marker) {\r\n        return this._parseEscaped(marker)\r\n            || this._parseTabstopOrVariableName(marker)\r\n            || this._parseComplexPlaceholder(marker)\r\n            || this._parseComplexVariable(marker)\r\n            || this._parseAnything(marker);\r\n    };\r\n    // \\$, \\\\, \\} -> just text\r\n    SnippetParser.prototype._parseEscaped = function (marker) {\r\n        var value;\r\n        if (value = this._accept(5 /* Backslash */, true)) {\r\n            // saw a backslash, append escaped token or that backslash\r\n            value = this._accept(0 /* Dollar */, true)\r\n                || this._accept(4 /* CurlyClose */, true)\r\n                || this._accept(5 /* Backslash */, true)\r\n                || value;\r\n            marker.appendChild(new Text(value));\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    // $foo -> variable, $1 -> tabstop\r\n    SnippetParser.prototype._parseTabstopOrVariableName = function (parent) {\r\n        var value;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && (value = this._accept(9 /* VariableName */, true) || this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        parent.appendChild(/^\\d+$/.test(value)\r\n            ? new Placeholder(Number(value))\r\n            : new Variable(value));\r\n        return true;\r\n    };\r\n    // ${1:<children>}, ${1} -> placeholder\r\n    SnippetParser.prototype._parseComplexPlaceholder = function (parent) {\r\n        var index;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (index = this._accept(8 /* Int */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        var placeholder = new Placeholder(Number(index));\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${1:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(placeholder);\r\n                    return true;\r\n                }\r\n                if (this._parse(placeholder)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + index + ':'));\r\n                placeholder.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (placeholder.index > 0 && this._accept(7 /* Pipe */)) {\r\n            // ${1|one,two,three|}\r\n            var choice = new Choice();\r\n            while (true) {\r\n                if (this._parseChoiceElement(choice)) {\r\n                    if (this._accept(2 /* Comma */)) {\r\n                        // opt, -> more\r\n                        continue;\r\n                    }\r\n                    if (this._accept(7 /* Pipe */)) {\r\n                        placeholder.appendChild(choice);\r\n                        if (this._accept(4 /* CurlyClose */)) {\r\n                            // ..|} -> done\r\n                            parent.appendChild(placeholder);\r\n                            return true;\r\n                        }\r\n                    }\r\n                }\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1/<regex>/<format>/<options>}\r\n            if (this._parseTransform(placeholder)) {\r\n                parent.appendChild(placeholder);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(placeholder);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${1 <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    };\r\n    SnippetParser.prototype._parseChoiceElement = function (parent) {\r\n        var token = this._token;\r\n        var values = [];\r\n        while (true) {\r\n            if (this._token.type === 2 /* Comma */ || this._token.type === 7 /* Pipe */) {\r\n                break;\r\n            }\r\n            var value = void 0;\r\n            if (value = this._accept(5 /* Backslash */, true)) {\r\n                // \\, \\|, or \\\\\r\n                value = this._accept(2 /* Comma */, true)\r\n                    || this._accept(7 /* Pipe */, true)\r\n                    || this._accept(5 /* Backslash */, true)\r\n                    || value;\r\n            }\r\n            else {\r\n                value = this._accept(undefined, true);\r\n            }\r\n            if (!value) {\r\n                // EOF\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            values.push(value);\r\n        }\r\n        if (values.length === 0) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        parent.appendChild(new Text(values.join('')));\r\n        return true;\r\n    };\r\n    // ${foo:<children>}, ${foo} -> variable\r\n    SnippetParser.prototype._parseComplexVariable = function (parent) {\r\n        var name;\r\n        var token = this._token;\r\n        var match = this._accept(0 /* Dollar */)\r\n            && this._accept(3 /* CurlyOpen */)\r\n            && (name = this._accept(9 /* VariableName */, true));\r\n        if (!match) {\r\n            return this._backTo(token);\r\n        }\r\n        var variable = new Variable(name);\r\n        if (this._accept(1 /* Colon */)) {\r\n            // ${foo:<children>}\r\n            while (true) {\r\n                // ...} -> done\r\n                if (this._accept(4 /* CurlyClose */)) {\r\n                    parent.appendChild(variable);\r\n                    return true;\r\n                }\r\n                if (this._parse(variable)) {\r\n                    continue;\r\n                }\r\n                // fallback\r\n                parent.appendChild(new Text('${' + name + ':'));\r\n                variable.children.forEach(parent.appendChild, parent);\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(6 /* Forwardslash */)) {\r\n            // ${foo/<regex>/<format>/<options>}\r\n            if (this._parseTransform(variable)) {\r\n                parent.appendChild(variable);\r\n                return true;\r\n            }\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${foo}\r\n            parent.appendChild(variable);\r\n            return true;\r\n        }\r\n        else {\r\n            // ${foo <- missing curly or colon\r\n            return this._backTo(token);\r\n        }\r\n    };\r\n    SnippetParser.prototype._parseTransform = function (parent) {\r\n        // ...<regex>/<format>/<options>}\r\n        var transform = new Transform();\r\n        var regexValue = '';\r\n        var regexOptions = '';\r\n        // (1) /regex\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            var escaped = void 0;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(6 /* Forwardslash */, true) || escaped;\r\n                regexValue += escaped;\r\n                continue;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexValue += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (2) /format\r\n        while (true) {\r\n            if (this._accept(6 /* Forwardslash */)) {\r\n                break;\r\n            }\r\n            var escaped = void 0;\r\n            if (escaped = this._accept(5 /* Backslash */, true)) {\r\n                escaped = this._accept(5 /* Backslash */, true) || this._accept(6 /* Forwardslash */, true) || escaped;\r\n                transform.appendChild(new Text(escaped));\r\n                continue;\r\n            }\r\n            if (this._parseFormatString(transform) || this._parseAnything(transform)) {\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        // (3) /option\r\n        while (true) {\r\n            if (this._accept(4 /* CurlyClose */)) {\r\n                break;\r\n            }\r\n            if (this._token.type !== 14 /* EOF */) {\r\n                regexOptions += this._accept(undefined, true);\r\n                continue;\r\n            }\r\n            return false;\r\n        }\r\n        try {\r\n            transform.regexp = new RegExp(regexValue, regexOptions);\r\n        }\r\n        catch (e) {\r\n            // invalid regexp\r\n            return false;\r\n        }\r\n        parent.transform = transform;\r\n        return true;\r\n    };\r\n    SnippetParser.prototype._parseFormatString = function (parent) {\r\n        var token = this._token;\r\n        if (!this._accept(0 /* Dollar */)) {\r\n            return false;\r\n        }\r\n        var complex = false;\r\n        if (this._accept(3 /* CurlyOpen */)) {\r\n            complex = true;\r\n        }\r\n        var index = this._accept(8 /* Int */, true);\r\n        if (!index) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        else if (!complex) {\r\n            // $1\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (this._accept(4 /* CurlyClose */)) {\r\n            // ${1}\r\n            parent.appendChild(new FormatString(Number(index)));\r\n            return true;\r\n        }\r\n        else if (!this._accept(1 /* Colon */)) {\r\n            this._backTo(token);\r\n            return false;\r\n        }\r\n        if (this._accept(6 /* Forwardslash */)) {\r\n            // ${1:/upcase}\r\n            var shorthand = this._accept(9 /* VariableName */, true);\r\n            if (!shorthand || !this._accept(4 /* CurlyClose */)) {\r\n                this._backTo(token);\r\n                return false;\r\n            }\r\n            else {\r\n                parent.appendChild(new FormatString(Number(index), shorthand));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(11 /* Plus */)) {\r\n            // ${1:+<if>}\r\n            var ifValue = this._until(4 /* CurlyClose */);\r\n            if (ifValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, ifValue, undefined));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(12 /* Dash */)) {\r\n            // ${2:-<else>}\r\n            var elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        else if (this._accept(13 /* QuestionMark */)) {\r\n            // ${2:?<if>:<else>}\r\n            var ifValue = this._until(1 /* Colon */);\r\n            if (ifValue) {\r\n                var elseValue = this._until(4 /* CurlyClose */);\r\n                if (elseValue) {\r\n                    parent.appendChild(new FormatString(Number(index), undefined, ifValue, elseValue));\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            // ${1:<else>}\r\n            var elseValue = this._until(4 /* CurlyClose */);\r\n            if (elseValue) {\r\n                parent.appendChild(new FormatString(Number(index), undefined, undefined, elseValue));\r\n                return true;\r\n            }\r\n        }\r\n        this._backTo(token);\r\n        return false;\r\n    };\r\n    SnippetParser.prototype._parseAnything = function (marker) {\r\n        if (this._token.type !== 14 /* EOF */) {\r\n            marker.appendChild(new Text(this._scanner.tokenText(this._token)));\r\n            this._accept(undefined);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    return SnippetParser;\r\n}());\r\nexport { SnippetParser };\r\n"],"sourceRoot":""}