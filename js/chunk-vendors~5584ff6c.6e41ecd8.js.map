{"version":3,"sources":["webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standaloneStrings.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/promise-polyfill/polyfill.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneEnums.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewLayout/viewLineRenderer.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/standalone/standaloneBase.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewLayout/lineDecorations.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewLayout/linesLayout.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewLayout/viewLayout.js","webpack:///./node_modules/monaco-editor/esm/vs/editor/common/viewLayout/viewLinesViewportData.js"],"names":["AccessibilityHelpNLS","InspectTokensNLS","GoToLineNLS","QuickCommandNLS","QuickOutlineNLS","StandaloneCodeEditorNLS","ToggleHighContrastNLS","SimpleServicesNLS","noSelection","singleSelectionRange","singleSelection","multiSelectionRange","multiSelection","emergencyConfOn","openingDocs","readonlyDiffEditor","editableDiffEditor","readonlyEditor","editableEditor","changeConfigToOnMac","changeConfigToOnWinLinux","auto_on","auto_off","tabFocusModeOnMsg","tabFocusModeOnMsgNoKb","tabFocusModeOffMsg","tabFocusModeOffMsgNoKb","openDocMac","openDocWinLinux","outroMsg","showAccessibilityHelpAction","inspectTokensAction","gotoLineLabelValidLineAndColumn","gotoLineLabelValidLine","gotoLineLabelEmptyWithLineLimit","gotoLineLabelEmptyWithLineAndColumnLimit","gotoLineAriaLabel","gotoLineActionInput","gotoLineActionLabel","ariaLabelEntryWithKey","ariaLabelEntry","quickCommandActionInput","quickCommandActionLabel","entryAriaLabel","quickOutlineActionInput","quickOutlineActionLabel","_symbols_","_modules_","_class_","_interface_","_method_","_function_","_property_","_variable_","_variable2_","_constructor_","_call_","editorViewAccessibleLabel","accessibilityHelpMessageIE","accessibilityHelpMessage","toggleHighContrast","bulkEditServiceSummary","global","factory","this","finallyConstructor","callback","constructor","then","value","resolve","reason","reject","setTimeoutFunc","setTimeout","noop","bind","fn","thisArg","apply","arguments","Promise","TypeError","_state","_handled","_value","undefined","_deferreds","doResolve","handle","self","deferred","_immediateFn","cb","onFulfilled","onRejected","ret","e","promise","push","newValue","finale","length","_unhandledRejectionFn","i","len","Handler","done","ex","prototype","prom","all","arr","args","Array","slice","call","remaining","res","val","race","values","setImmediate","err","console","warn","globalNS","window","Error","AccessibilitySupport","CompletionItemInsertTextRule","CompletionItemKind","CompletionItemTag","CompletionTriggerKind","ContentWidgetPositionPreference","CursorChangeReason","DefaultEndOfLine","DocumentHighlightKind","EditorAutoIndentStrategy","EditorOption","EndOfLinePreference","EndOfLineSequence","IndentAction","KeyCode","MarkerSeverity","MarkerTag","MinimapPosition","MouseTargetType","OverlayWidgetPositionPreference","OverviewRulerLane","RenderLineNumbersType","RenderMinimap","ScrollType","ScrollbarVisibility","SelectionDirection","SignatureHelpTriggerKind","SymbolKind","SymbolTag","TextEditorCursorBlinkingStyle","TextEditorCursorStyle","TrackedRangeStickiness","WrappingIndent","LinePart","endIndex","type","LineRange","startIndex","startOffset","endOffset","equals","otherLineRange","RenderLineInput","useMonospaceOptimizations","canUseHalfwidthRightwardsArrow","lineContent","continuesWithWrappedLine","isBasicASCII","containsRTL","fauxIndentLength","lineTokens","lineDecorations","tabSize","startVisibleColumn","spaceWidth","middotWidth","stopRenderingLineAfter","renderWhitespace","renderControlCharacters","fontLigatures","selectionsOnLine","sort","a","b","sameSelection","otherSelections","other","equalsArr","CharacterMapping","partCount","_data","Uint32Array","_absoluteOffsets","getPartIndex","partData","getCharIndex","setPartData","charOffset","partIndex","charIndex","partAbsoluteOffset","getAbsoluteOffsets","charOffsetToPartData","partDataToCharOffset","partLength","searchEntry","min","max","mid","midEntry","minEntry","maxEntry","maxCharIndex","minPartIndex","minCharIndex","maxPartIndex","minEntryDistance","maxEntryDistance","RenderLineOutput","characterMapping","containsForeignElements","renderViewLine","input","sb","content","beforeClassNames","afterClassNames","lineDecoration","className","beforeSpan","join","afterSpan","appendASCIIString","_renderLine","resolveRenderLineInput","RenderLineOutput2","html","renderViewLine2","out","build","ResolvedRenderLineInput","fontIsMonospace","isOverflowing","parts","tokens","transformAndRemoveOverflowing","_applyRenderWhitespace","len_1","_applyInlineDecorations","splitLargeTokens","result","resultLen","tokenIndex","tokensLen","getCount","getEndOffset","getClassName","onlyAtSpaces","lastTokenEndIndex","token","tokenEndIndex","tokenType","lastSpaceOffset","currTokenStart","j","charCodeAt","diff","piecesCount","Math","ceil","pieceEndIndex","selections","onlyBoundary","lastNonWhitespaceIndex","tokensLength","firstNonWhitespaceIndex","wasInWhitespace","currentSelectionIndex","currentSelection","tmpIndent","chCode","isInWhitespace","nextChCode","generateWhitespace","lastCharCode","prevCharCode","isSingleTrailingSpace","_lineDecorations","compare","normalize","lineDecorationsLen","lineDecorationIndex","lastResultEndIndex","len_2","classNames","spaceRenderWhitespaceCharacter","visibleColumn","charOffsetInPart","prevPartContentCnt","part","partEndIndex","partType","partRendersWhitespace","indexOf","appendASCII","partContentCnt","_charIndex","_visibleColumn","charCode","charWidth","partIsOnlyWhitespace","String","write1","space","producedCharacters","KeyMod","chord","firstPart","secondPart","CtrlCmd","Shift","Alt","WinCtrl","createMonacoBaseAPI","editor","languages","CancellationTokenSource","Emitter","Position","Range","Selection","Uri","Token","LineDecoration","startColumn","endColumn","_equals","aLen","bLen","filter","lineNumber","minLineColumn","maxLineColumn","d","range","endLineNumber","startLineNumber","isEmpty","inlineClassName","DecorationSegment","Stack","stopOffsets","count","consumeLowerThan","maxStopOffset","nextStartOffset","splice","insert","stopOffset","LineDecorationsNormalizer","stack","charCodeBefore","currentStartOffset","currentEndOffset","PendingChanges","_hasPending","_inserts","_changes","_removes","x","change","remove","mustCommit","commit","linesLayout","inserts","changes","removes","_commitPendingChanges","EditorWhitespace","id","afterLineNumber","ordinal","height","minWidth","prefixSum","LinesLayout","lineCount","lineHeight","_instanceId","strings","INSTANCE_COUNT","_pendingChanges","_lastWhitespaceId","_arr","_prefixSumValidIndex","_minWidth","_lineCount","_lineHeight","findInsertionIndex","low","high","setLineHeight","_checkPendingChanges","onFlushed","changeWhitespace","_this","accessor","insertWhitespace","heightInPx","changeOneWhitespace","newAfterLineNumber","newHeight","removeWhitespace","_i","inserts_1","_insertWhitespace","_a","changes_1","_changeOneWhitespace","_b","removes_1","index","_findWhitespaceIndex","_removeWhitespace","toRemove","Set","_c","removes_2","add","toChange","Map","_d","changes_2","set","applyRemoveAndChange","whitespaces","whitespaces_1","whitespace","has","get","concat","insertIndex","removeIndex","onLinesDeleted","fromLineNumber","toLineNumber","onLinesInserted","getWhitespacesTotalHeight","getWhitespacesAccumulatedHeight","getLinesTotalHeight","linesHeight","whitespacesHeight","getWhitespaceAccumulatedHeightBeforeLineNumber","lastWhitespaceBeforeLineNumber","_findLastWhitespaceBeforeLineNumber","delta","halfDelta","_findFirstWhitespaceAfterLineNumber","firstWhitespaceAfterLineNumber","getFirstWhitespaceIndexAfterLineNumber","getVerticalOffsetForLineNumber","previousLinesHeight","previousWhitespacesHeight","getWhitespaceMinWidth","isAfterLines","verticalOffset","totalHeight","getLineNumberAtOrAfterVerticalOffset","linesCount","minLineNumber","maxLineNumber","midLineNumber","midLineNumberVerticalOffset","getLinesViewportData","verticalOffset1","verticalOffset2","currentWhitespaceHeight","currentWhitespaceAfterLineNumber","startLineNumberVerticalOffset","whitespaceIndex","whitespaceCount","getWhitespacesCount","getAfterLineNumberForWhitespaceIndex","getHeightForWhitespaceIndex","currentVerticalOffset","currentLineRelativeOffset","STEP_SIZE","bigNumbersDelta","floor","linesOffsets","verticalCenter","centeredLineNumber","currentLineTop","currentLineBottom","endLineNumberVerticalOffset","completelyVisibleStartLineNumber","completelyVisibleEndLineNumber","relativeVerticalOffset","getVerticalOffsetForWhitespaceIndex","getWhitespaceIndexAtOrAfterVerticallOffset","minWhitespaceIndex","maxWhitespaceIndex","maxWhitespaceVerticalOffset","maxWhitespaceHeight","midWhitespaceIndex","midWhitespaceVerticalOffset","midWhitespaceHeight","getWhitespaceAtVerticalOffset","candidateIndex","candidateTop","candidateHeight","candidateId","getIdForWhitespaceIndex","candidateAfterLineNumber","getWhitespaceViewportData","top_1","getWhitespaces","__extends","extendStatics","Object","setPrototypeOf","__proto__","p","hasOwnProperty","__","create","SMOOTH_SCROLLING_TIME","EditorScrollDimensions","width","contentWidth","contentHeight","scrollWidth","scrollHeight","_super","EditorScrollable","smoothScrollDuration","scheduleAtNextAnimationFrame","_onDidContentSizeChange","_register","onDidContentSizeChange","event","_dimensions","_scrollable","onDidScroll","onScroll","getScrollable","setSmoothScrollDuration","validateScrollPosition","scrollPosition","getScrollDimensions","setScrollDimensions","dimensions","oldDimensions","contentWidthChanged","contentHeightChanged","fire","getFutureScrollPosition","getCurrentScrollPosition","setScrollPositionNow","update","setScrollPositionSmooth","ViewLayout","configuration","_configuration","options","layoutInfo","_linesLayout","_configureSmoothScrollDuration","_updateHeight","dispose","onHeightMaybeChanged","onConfigurationChanged","hasChanged","scrollDimensions","_getContentHeight","_getHorizontalScrollbarHeight","scrollbar","horizontal","horizontalScrollbarSize","getCurrentViewport","currentScrollPosition","scrollTop","scrollLeft","getFutureViewport","_computeContentWidth","maxLineWidth","wrappingInfo","fontInfo","isViewportWrapping","minimap","typicalHalfwidthCharacterWidth","enabled","side","verticalScrollbarWidth","extraHorizontalSpace","whitespaceMinWidth","onMaxLineWidthChanged","saveState","firstLineNumberInViewport","whitespaceAboveFirstLine","scrollTopWithoutViewZones","getLineNumberAtVerticalOffset","visibleBox","top","getLinesViewportDataAtScrollTop","getContentWidth","getScrollWidth","getContentHeight","getScrollHeight","getCurrentScrollLeft","getCurrentScrollTop","position","deltaScrollNow","deltaScrollLeft","deltaScrollTop","ViewportData","partialData","whitespaceViewportData","model","_model","visibleRange","getLineMinColumn","getLineMaxColumn","getViewLineRenderingData","getDecorationsInViewport"],"mappings":"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","file":"js/chunk-vendors~5584ff6c.6e41ecd8.js","sourcesContent":["/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as nls from '../../nls.js';\r\nexport var AccessibilityHelpNLS;\r\n(function (AccessibilityHelpNLS) {\r\n    AccessibilityHelpNLS.noSelection = nls.localize(\"noSelection\", \"No selection\");\r\n    AccessibilityHelpNLS.singleSelectionRange = nls.localize(\"singleSelectionRange\", \"Line {0}, Column {1} ({2} selected)\");\r\n    AccessibilityHelpNLS.singleSelection = nls.localize(\"singleSelection\", \"Line {0}, Column {1}\");\r\n    AccessibilityHelpNLS.multiSelectionRange = nls.localize(\"multiSelectionRange\", \"{0} selections ({1} characters selected)\");\r\n    AccessibilityHelpNLS.multiSelection = nls.localize(\"multiSelection\", \"{0} selections\");\r\n    AccessibilityHelpNLS.emergencyConfOn = nls.localize(\"emergencyConfOn\", \"Now changing the setting `accessibilitySupport` to 'on'.\");\r\n    AccessibilityHelpNLS.openingDocs = nls.localize(\"openingDocs\", \"Now opening the Editor Accessibility documentation page.\");\r\n    AccessibilityHelpNLS.readonlyDiffEditor = nls.localize(\"readonlyDiffEditor\", \" in a read-only pane of a diff editor.\");\r\n    AccessibilityHelpNLS.editableDiffEditor = nls.localize(\"editableDiffEditor\", \" in a pane of a diff editor.\");\r\n    AccessibilityHelpNLS.readonlyEditor = nls.localize(\"readonlyEditor\", \" in a read-only code editor\");\r\n    AccessibilityHelpNLS.editableEditor = nls.localize(\"editableEditor\", \" in a code editor\");\r\n    AccessibilityHelpNLS.changeConfigToOnMac = nls.localize(\"changeConfigToOnMac\", \"To configure the editor to be optimized for usage with a Screen Reader press Command+E now.\");\r\n    AccessibilityHelpNLS.changeConfigToOnWinLinux = nls.localize(\"changeConfigToOnWinLinux\", \"To configure the editor to be optimized for usage with a Screen Reader press Control+E now.\");\r\n    AccessibilityHelpNLS.auto_on = nls.localize(\"auto_on\", \"The editor is configured to be optimized for usage with a Screen Reader.\");\r\n    AccessibilityHelpNLS.auto_off = nls.localize(\"auto_off\", \"The editor is configured to never be optimized for usage with a Screen Reader, which is not the case at this time.\");\r\n    AccessibilityHelpNLS.tabFocusModeOnMsg = nls.localize(\"tabFocusModeOnMsg\", \"Pressing Tab in the current editor will move focus to the next focusable element. Toggle this behavior by pressing {0}.\");\r\n    AccessibilityHelpNLS.tabFocusModeOnMsgNoKb = nls.localize(\"tabFocusModeOnMsgNoKb\", \"Pressing Tab in the current editor will move focus to the next focusable element. The command {0} is currently not triggerable by a keybinding.\");\r\n    AccessibilityHelpNLS.tabFocusModeOffMsg = nls.localize(\"tabFocusModeOffMsg\", \"Pressing Tab in the current editor will insert the tab character. Toggle this behavior by pressing {0}.\");\r\n    AccessibilityHelpNLS.tabFocusModeOffMsgNoKb = nls.localize(\"tabFocusModeOffMsgNoKb\", \"Pressing Tab in the current editor will insert the tab character. The command {0} is currently not triggerable by a keybinding.\");\r\n    AccessibilityHelpNLS.openDocMac = nls.localize(\"openDocMac\", \"Press Command+H now to open a browser window with more information related to editor accessibility.\");\r\n    AccessibilityHelpNLS.openDocWinLinux = nls.localize(\"openDocWinLinux\", \"Press Control+H now to open a browser window with more information related to editor accessibility.\");\r\n    AccessibilityHelpNLS.outroMsg = nls.localize(\"outroMsg\", \"You can dismiss this tooltip and return to the editor by pressing Escape or Shift+Escape.\");\r\n    AccessibilityHelpNLS.showAccessibilityHelpAction = nls.localize(\"showAccessibilityHelpAction\", \"Show Accessibility Help\");\r\n})(AccessibilityHelpNLS || (AccessibilityHelpNLS = {}));\r\nexport var InspectTokensNLS;\r\n(function (InspectTokensNLS) {\r\n    InspectTokensNLS.inspectTokensAction = nls.localize('inspectTokens', \"Developer: Inspect Tokens\");\r\n})(InspectTokensNLS || (InspectTokensNLS = {}));\r\nexport var GoToLineNLS;\r\n(function (GoToLineNLS) {\r\n    GoToLineNLS.gotoLineLabelValidLineAndColumn = nls.localize('gotoLineLabelValidLineAndColumn', \"Go to line {0} and character {1}\");\r\n    GoToLineNLS.gotoLineLabelValidLine = nls.localize('gotoLineLabelValidLine', \"Go to line {0}\");\r\n    GoToLineNLS.gotoLineLabelEmptyWithLineLimit = nls.localize('gotoLineLabelEmptyWithLineLimit', \"Type a line number between 1 and {0} to navigate to\");\r\n    GoToLineNLS.gotoLineLabelEmptyWithLineAndColumnLimit = nls.localize('gotoLineLabelEmptyWithLineAndColumnLimit', \"Type a character between 1 and {0} to navigate to\");\r\n    GoToLineNLS.gotoLineAriaLabel = nls.localize('gotoLineAriaLabel', \"Current Line: {0}. Go to line {1}.\");\r\n    GoToLineNLS.gotoLineActionInput = nls.localize('gotoLineActionInput', \"Type a line number, followed by an optional colon and a character number to navigate to\");\r\n    GoToLineNLS.gotoLineActionLabel = nls.localize('gotoLineActionLabel', \"Go to Line...\");\r\n})(GoToLineNLS || (GoToLineNLS = {}));\r\nexport var QuickCommandNLS;\r\n(function (QuickCommandNLS) {\r\n    QuickCommandNLS.ariaLabelEntryWithKey = nls.localize('ariaLabelEntryWithKey', \"{0}, {1}, commands\");\r\n    QuickCommandNLS.ariaLabelEntry = nls.localize('ariaLabelEntry', \"{0}, commands\");\r\n    QuickCommandNLS.quickCommandActionInput = nls.localize('quickCommandActionInput', \"Type the name of an action you want to execute\");\r\n    QuickCommandNLS.quickCommandActionLabel = nls.localize('quickCommandActionLabel', \"Command Palette\");\r\n})(QuickCommandNLS || (QuickCommandNLS = {}));\r\nexport var QuickOutlineNLS;\r\n(function (QuickOutlineNLS) {\r\n    QuickOutlineNLS.entryAriaLabel = nls.localize('entryAriaLabel', \"{0}, symbols\");\r\n    QuickOutlineNLS.quickOutlineActionInput = nls.localize('quickOutlineActionInput', \"Type the name of an identifier you wish to navigate to\");\r\n    QuickOutlineNLS.quickOutlineActionLabel = nls.localize('quickOutlineActionLabel', \"Go to Symbol...\");\r\n    QuickOutlineNLS._symbols_ = nls.localize('symbols', \"symbols ({0})\");\r\n    QuickOutlineNLS._modules_ = nls.localize('modules', \"modules ({0})\");\r\n    QuickOutlineNLS._class_ = nls.localize('class', \"classes ({0})\");\r\n    QuickOutlineNLS._interface_ = nls.localize('interface', \"interfaces ({0})\");\r\n    QuickOutlineNLS._method_ = nls.localize('method', \"methods ({0})\");\r\n    QuickOutlineNLS._function_ = nls.localize('function', \"functions ({0})\");\r\n    QuickOutlineNLS._property_ = nls.localize('property', \"properties ({0})\");\r\n    QuickOutlineNLS._variable_ = nls.localize('variable', \"variables ({0})\");\r\n    QuickOutlineNLS._variable2_ = nls.localize('variable2', \"variables ({0})\");\r\n    QuickOutlineNLS._constructor_ = nls.localize('_constructor', \"constructors ({0})\");\r\n    QuickOutlineNLS._call_ = nls.localize('call', \"calls ({0})\");\r\n})(QuickOutlineNLS || (QuickOutlineNLS = {}));\r\nexport var StandaloneCodeEditorNLS;\r\n(function (StandaloneCodeEditorNLS) {\r\n    StandaloneCodeEditorNLS.editorViewAccessibleLabel = nls.localize('editorViewAccessibleLabel', \"Editor content\");\r\n    StandaloneCodeEditorNLS.accessibilityHelpMessageIE = nls.localize('accessibilityHelpMessageIE', \"Press Ctrl+F1 for Accessibility Options.\");\r\n    StandaloneCodeEditorNLS.accessibilityHelpMessage = nls.localize('accessibilityHelpMessage', \"Press Alt+F1 for Accessibility Options.\");\r\n})(StandaloneCodeEditorNLS || (StandaloneCodeEditorNLS = {}));\r\nexport var ToggleHighContrastNLS;\r\n(function (ToggleHighContrastNLS) {\r\n    ToggleHighContrastNLS.toggleHighContrast = nls.localize('toggleHighContrast', \"Toggle High Contrast Theme\");\r\n})(ToggleHighContrastNLS || (ToggleHighContrastNLS = {}));\r\nexport var SimpleServicesNLS;\r\n(function (SimpleServicesNLS) {\r\n    SimpleServicesNLS.bulkEditServiceSummary = nls.localize('bulkEditServiceSummary', \"Made {0} edits in {1} files\");\r\n})(SimpleServicesNLS || (SimpleServicesNLS = {}));\r\n","/*!\nCopyright (c) 2014 Taylor Hakes\nCopyright (c) 2014 Forbes Lindesay\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory() :\n\t\ttypeof define === 'function' && define.amd ? define(factory) :\n\t\t\t(factory());\n}(this, (function () {\n\t'use strict';\n\n\t/**\n\t * @this {Promise}\n\t */\n\tfunction finallyConstructor(callback) {\n\t\tvar constructor = this.constructor;\n\t\treturn this.then(\n\t\t\tfunction (value) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn value;\n\t\t\t\t});\n\t\t\t},\n\t\t\tfunction (reason) {\n\t\t\t\treturn constructor.resolve(callback()).then(function () {\n\t\t\t\t\treturn constructor.reject(reason);\n\t\t\t\t});\n\t\t\t}\n\t\t);\n\t}\n\n\t// Store setTimeout reference so promise-polyfill will be unaffected by\n\t// other code modifying setTimeout (like sinon.useFakeTimers())\n\tvar setTimeoutFunc = setTimeout;\n\n\tfunction noop() { }\n\n\t// Polyfill for Function.prototype.bind\n\tfunction bind(fn, thisArg) {\n\t\treturn function () {\n\t\t\tfn.apply(thisArg, arguments);\n\t\t};\n\t}\n\n\t/**\n\t * @constructor\n\t * @param {Function} fn\n\t */\n\tfunction Promise(fn) {\n\t\tif (!(this instanceof Promise))\n\t\t\tthrow new TypeError('Promises must be constructed via new');\n\t\tif (typeof fn !== 'function') throw new TypeError('not a function');\n\t\t/** @type {!number} */\n\t\tthis._state = 0;\n\t\t/** @type {!boolean} */\n\t\tthis._handled = false;\n\t\t/** @type {Promise|undefined} */\n\t\tthis._value = undefined;\n\t\t/** @type {!Array<!Function>} */\n\t\tthis._deferreds = [];\n\n\t\tdoResolve(fn, this);\n\t}\n\n\tfunction handle(self, deferred) {\n\t\twhile (self._state === 3) {\n\t\t\tself = self._value;\n\t\t}\n\t\tif (self._state === 0) {\n\t\t\tself._deferreds.push(deferred);\n\t\t\treturn;\n\t\t}\n\t\tself._handled = true;\n\t\tPromise._immediateFn(function () {\n\t\t\tvar cb = self._state === 1 ? deferred.onFulfilled : deferred.onRejected;\n\t\t\tif (cb === null) {\n\t\t\t\t(self._state === 1 ? resolve : reject)(deferred.promise, self._value);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar ret;\n\t\t\ttry {\n\t\t\t\tret = cb(self._value);\n\t\t\t} catch (e) {\n\t\t\t\treject(deferred.promise, e);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresolve(deferred.promise, ret);\n\t\t});\n\t}\n\n\tfunction resolve(self, newValue) {\n\t\ttry {\n\t\t\t// Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n\t\t\tif (newValue === self)\n\t\t\t\tthrow new TypeError('A promise cannot be resolved with itself.');\n\t\t\tif (\n\t\t\t\tnewValue &&\n\t\t\t\t(typeof newValue === 'object' || typeof newValue === 'function')\n\t\t\t) {\n\t\t\t\tvar then = newValue.then;\n\t\t\t\tif (newValue instanceof Promise) {\n\t\t\t\t\tself._state = 3;\n\t\t\t\t\tself._value = newValue;\n\t\t\t\t\tfinale(self);\n\t\t\t\t\treturn;\n\t\t\t\t} else if (typeof then === 'function') {\n\t\t\t\t\tdoResolve(bind(then, newValue), self);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tself._state = 1;\n\t\t\tself._value = newValue;\n\t\t\tfinale(self);\n\t\t} catch (e) {\n\t\t\treject(self, e);\n\t\t}\n\t}\n\n\tfunction reject(self, newValue) {\n\t\tself._state = 2;\n\t\tself._value = newValue;\n\t\tfinale(self);\n\t}\n\n\tfunction finale(self) {\n\t\tif (self._state === 2 && self._deferreds.length === 0) {\n\t\t\tPromise._immediateFn(function () {\n\t\t\t\tif (!self._handled) {\n\t\t\t\t\tPromise._unhandledRejectionFn(self._value);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\tfor (var i = 0, len = self._deferreds.length; i < len; i++) {\n\t\t\thandle(self, self._deferreds[i]);\n\t\t}\n\t\tself._deferreds = null;\n\t}\n\n\t/**\n\t * @constructor\n\t */\n\tfunction Handler(onFulfilled, onRejected, promise) {\n\t\tthis.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n\t\tthis.onRejected = typeof onRejected === 'function' ? onRejected : null;\n\t\tthis.promise = promise;\n\t}\n\n\t/**\n\t * Take a potentially misbehaving resolver function and make sure\n\t * onFulfilled and onRejected are only called once.\n\t *\n\t * Makes no guarantees about asynchrony.\n\t */\n\tfunction doResolve(fn, self) {\n\t\tvar done = false;\n\t\ttry {\n\t\t\tfn(\n\t\t\t\tfunction (value) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\tresolve(self, value);\n\t\t\t\t},\n\t\t\t\tfunction (reason) {\n\t\t\t\t\tif (done) return;\n\t\t\t\t\tdone = true;\n\t\t\t\t\treject(self, reason);\n\t\t\t\t}\n\t\t\t);\n\t\t} catch (ex) {\n\t\t\tif (done) return;\n\t\t\tdone = true;\n\t\t\treject(self, ex);\n\t\t}\n\t}\n\n\tPromise.prototype['catch'] = function (onRejected) {\n\t\treturn this.then(null, onRejected);\n\t};\n\n\tPromise.prototype.then = function (onFulfilled, onRejected) {\n\t\t// @ts-ignore\n\t\tvar prom = new this.constructor(noop);\n\n\t\thandle(this, new Handler(onFulfilled, onRejected, prom));\n\t\treturn prom;\n\t};\n\n\tPromise.prototype['finally'] = finallyConstructor;\n\n\tPromise.all = function (arr) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tif (!arr || typeof arr.length === 'undefined')\n\t\t\t\tthrow new TypeError('Promise.all accepts an array');\n\t\t\tvar args = Array.prototype.slice.call(arr);\n\t\t\tif (args.length === 0) return resolve([]);\n\t\t\tvar remaining = args.length;\n\n\t\t\tfunction res(i, val) {\n\t\t\t\ttry {\n\t\t\t\t\tif (val && (typeof val === 'object' || typeof val === 'function')) {\n\t\t\t\t\t\tvar then = val.then;\n\t\t\t\t\t\tif (typeof then === 'function') {\n\t\t\t\t\t\t\tthen.call(\n\t\t\t\t\t\t\t\tval,\n\t\t\t\t\t\t\t\tfunction (val) {\n\t\t\t\t\t\t\t\t\tres(i, val);\n\t\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t\treject\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\targs[i] = val;\n\t\t\t\t\tif (--remaining === 0) {\n\t\t\t\t\t\tresolve(args);\n\t\t\t\t\t}\n\t\t\t\t} catch (ex) {\n\t\t\t\t\treject(ex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (var i = 0; i < args.length; i++) {\n\t\t\t\tres(i, args[i]);\n\t\t\t}\n\t\t});\n\t};\n\n\tPromise.resolve = function (value) {\n\t\tif (value && typeof value === 'object' && value.constructor === Promise) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn new Promise(function (resolve) {\n\t\t\tresolve(value);\n\t\t});\n\t};\n\n\tPromise.reject = function (value) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\treject(value);\n\t\t});\n\t};\n\n\tPromise.race = function (values) {\n\t\treturn new Promise(function (resolve, reject) {\n\t\t\tfor (var i = 0, len = values.length; i < len; i++) {\n\t\t\t\tvalues[i].then(resolve, reject);\n\t\t\t}\n\t\t});\n\t};\n\n\t// Use polyfill for setImmediate for performance gains\n\tPromise._immediateFn =\n\t\t(typeof setImmediate === 'function' &&\n\t\t\tfunction (fn) {\n\t\t\t\tsetImmediate(fn);\n\t\t\t}) ||\n\t\tfunction (fn) {\n\t\t\tsetTimeoutFunc(fn, 0);\n\t\t};\n\n\tPromise._unhandledRejectionFn = function _unhandledRejectionFn(err) {\n\t\tif (typeof console !== 'undefined' && console) {\n\t\t\tconsole.warn('Possible Unhandled Promise Rejection:', err); // eslint-disable-line no-console\n\t\t}\n\t};\n\n\t/** @suppress {undefinedVars} */\n\tvar globalNS = (function () {\n\t\t// the only reliable means to get the global object is\n\t\t// `Function('return this')()`\n\t\t// However, this causes CSP violations in Chrome apps.\n\t\tif (typeof self !== 'undefined') {\n\t\t\treturn self;\n\t\t}\n\t\tif (typeof window !== 'undefined') {\n\t\t\treturn window;\n\t\t}\n\t\tif (typeof global !== 'undefined') {\n\t\t\treturn global;\n\t\t}\n\t\tthrow new Error('unable to locate global object');\n\t})();\n\n\tif (!('Promise' in globalNS)) {\n\t\tglobalNS['Promise'] = Promise;\n\t} else if (!globalNS.Promise.prototype['finally']) {\n\t\tglobalNS.Promise.prototype['finally'] = finallyConstructor;\n\t}\n\n})));\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n// THIS IS A GENERATED FILE. DO NOT EDIT DIRECTLY.\r\nexport var AccessibilitySupport;\r\n(function (AccessibilitySupport) {\r\n    /**\r\n     * This should be the browser case where it is not known if a screen reader is attached or no.\r\n     */\r\n    AccessibilitySupport[AccessibilitySupport[\"Unknown\"] = 0] = \"Unknown\";\r\n    AccessibilitySupport[AccessibilitySupport[\"Disabled\"] = 1] = \"Disabled\";\r\n    AccessibilitySupport[AccessibilitySupport[\"Enabled\"] = 2] = \"Enabled\";\r\n})(AccessibilitySupport || (AccessibilitySupport = {}));\r\nexport var CompletionItemInsertTextRule;\r\n(function (CompletionItemInsertTextRule) {\r\n    /**\r\n     * Adjust whitespace/indentation of multiline insert texts to\r\n     * match the current line indentation.\r\n     */\r\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"KeepWhitespace\"] = 1] = \"KeepWhitespace\";\r\n    /**\r\n     * `insertText` is a snippet.\r\n     */\r\n    CompletionItemInsertTextRule[CompletionItemInsertTextRule[\"InsertAsSnippet\"] = 4] = \"InsertAsSnippet\";\r\n})(CompletionItemInsertTextRule || (CompletionItemInsertTextRule = {}));\r\nexport var CompletionItemKind;\r\n(function (CompletionItemKind) {\r\n    CompletionItemKind[CompletionItemKind[\"Method\"] = 0] = \"Method\";\r\n    CompletionItemKind[CompletionItemKind[\"Function\"] = 1] = \"Function\";\r\n    CompletionItemKind[CompletionItemKind[\"Constructor\"] = 2] = \"Constructor\";\r\n    CompletionItemKind[CompletionItemKind[\"Field\"] = 3] = \"Field\";\r\n    CompletionItemKind[CompletionItemKind[\"Variable\"] = 4] = \"Variable\";\r\n    CompletionItemKind[CompletionItemKind[\"Class\"] = 5] = \"Class\";\r\n    CompletionItemKind[CompletionItemKind[\"Struct\"] = 6] = \"Struct\";\r\n    CompletionItemKind[CompletionItemKind[\"Interface\"] = 7] = \"Interface\";\r\n    CompletionItemKind[CompletionItemKind[\"Module\"] = 8] = \"Module\";\r\n    CompletionItemKind[CompletionItemKind[\"Property\"] = 9] = \"Property\";\r\n    CompletionItemKind[CompletionItemKind[\"Event\"] = 10] = \"Event\";\r\n    CompletionItemKind[CompletionItemKind[\"Operator\"] = 11] = \"Operator\";\r\n    CompletionItemKind[CompletionItemKind[\"Unit\"] = 12] = \"Unit\";\r\n    CompletionItemKind[CompletionItemKind[\"Value\"] = 13] = \"Value\";\r\n    CompletionItemKind[CompletionItemKind[\"Constant\"] = 14] = \"Constant\";\r\n    CompletionItemKind[CompletionItemKind[\"Enum\"] = 15] = \"Enum\";\r\n    CompletionItemKind[CompletionItemKind[\"EnumMember\"] = 16] = \"EnumMember\";\r\n    CompletionItemKind[CompletionItemKind[\"Keyword\"] = 17] = \"Keyword\";\r\n    CompletionItemKind[CompletionItemKind[\"Text\"] = 18] = \"Text\";\r\n    CompletionItemKind[CompletionItemKind[\"Color\"] = 19] = \"Color\";\r\n    CompletionItemKind[CompletionItemKind[\"File\"] = 20] = \"File\";\r\n    CompletionItemKind[CompletionItemKind[\"Reference\"] = 21] = \"Reference\";\r\n    CompletionItemKind[CompletionItemKind[\"Customcolor\"] = 22] = \"Customcolor\";\r\n    CompletionItemKind[CompletionItemKind[\"Folder\"] = 23] = \"Folder\";\r\n    CompletionItemKind[CompletionItemKind[\"TypeParameter\"] = 24] = \"TypeParameter\";\r\n    CompletionItemKind[CompletionItemKind[\"Snippet\"] = 25] = \"Snippet\";\r\n})(CompletionItemKind || (CompletionItemKind = {}));\r\nexport var CompletionItemTag;\r\n(function (CompletionItemTag) {\r\n    CompletionItemTag[CompletionItemTag[\"Deprecated\"] = 1] = \"Deprecated\";\r\n})(CompletionItemTag || (CompletionItemTag = {}));\r\n/**\r\n * How a suggest provider was triggered.\r\n */\r\nexport var CompletionTriggerKind;\r\n(function (CompletionTriggerKind) {\r\n    CompletionTriggerKind[CompletionTriggerKind[\"Invoke\"] = 0] = \"Invoke\";\r\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerCharacter\"] = 1] = \"TriggerCharacter\";\r\n    CompletionTriggerKind[CompletionTriggerKind[\"TriggerForIncompleteCompletions\"] = 2] = \"TriggerForIncompleteCompletions\";\r\n})(CompletionTriggerKind || (CompletionTriggerKind = {}));\r\n/**\r\n * A positioning preference for rendering content widgets.\r\n */\r\nexport var ContentWidgetPositionPreference;\r\n(function (ContentWidgetPositionPreference) {\r\n    /**\r\n     * Place the content widget exactly at a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"EXACT\"] = 0] = \"EXACT\";\r\n    /**\r\n     * Place the content widget above a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"ABOVE\"] = 1] = \"ABOVE\";\r\n    /**\r\n     * Place the content widget below a position\r\n     */\r\n    ContentWidgetPositionPreference[ContentWidgetPositionPreference[\"BELOW\"] = 2] = \"BELOW\";\r\n})(ContentWidgetPositionPreference || (ContentWidgetPositionPreference = {}));\r\n/**\r\n * Describes the reason the cursor has changed its position.\r\n */\r\nexport var CursorChangeReason;\r\n(function (CursorChangeReason) {\r\n    /**\r\n     * Unknown or not set.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"NotSet\"] = 0] = \"NotSet\";\r\n    /**\r\n     * A `model.setValue()` was called.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"ContentFlush\"] = 1] = \"ContentFlush\";\r\n    /**\r\n     * The `model` has been changed outside of this cursor and the cursor recovers its position from associated markers.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"RecoverFromMarkers\"] = 2] = \"RecoverFromMarkers\";\r\n    /**\r\n     * There was an explicit user gesture.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Explicit\"] = 3] = \"Explicit\";\r\n    /**\r\n     * There was a Paste.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Paste\"] = 4] = \"Paste\";\r\n    /**\r\n     * There was an Undo.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Undo\"] = 5] = \"Undo\";\r\n    /**\r\n     * There was a Redo.\r\n     */\r\n    CursorChangeReason[CursorChangeReason[\"Redo\"] = 6] = \"Redo\";\r\n})(CursorChangeReason || (CursorChangeReason = {}));\r\n/**\r\n * The default end of line to use when instantiating models.\r\n */\r\nexport var DefaultEndOfLine;\r\n(function (DefaultEndOfLine) {\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    DefaultEndOfLine[DefaultEndOfLine[\"LF\"] = 1] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    DefaultEndOfLine[DefaultEndOfLine[\"CRLF\"] = 2] = \"CRLF\";\r\n})(DefaultEndOfLine || (DefaultEndOfLine = {}));\r\n/**\r\n * A document highlight kind.\r\n */\r\nexport var DocumentHighlightKind;\r\n(function (DocumentHighlightKind) {\r\n    /**\r\n     * A textual occurrence.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Text\"] = 0] = \"Text\";\r\n    /**\r\n     * Read-access of a symbol, like reading a variable.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Read\"] = 1] = \"Read\";\r\n    /**\r\n     * Write-access of a symbol, like writing to a variable.\r\n     */\r\n    DocumentHighlightKind[DocumentHighlightKind[\"Write\"] = 2] = \"Write\";\r\n})(DocumentHighlightKind || (DocumentHighlightKind = {}));\r\n/**\r\n * Configuration options for auto indentation in the editor\r\n */\r\nexport var EditorAutoIndentStrategy;\r\n(function (EditorAutoIndentStrategy) {\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"None\"] = 0] = \"None\";\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Keep\"] = 1] = \"Keep\";\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Brackets\"] = 2] = \"Brackets\";\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Advanced\"] = 3] = \"Advanced\";\r\n    EditorAutoIndentStrategy[EditorAutoIndentStrategy[\"Full\"] = 4] = \"Full\";\r\n})(EditorAutoIndentStrategy || (EditorAutoIndentStrategy = {}));\r\nexport var EditorOption;\r\n(function (EditorOption) {\r\n    EditorOption[EditorOption[\"acceptSuggestionOnCommitCharacter\"] = 0] = \"acceptSuggestionOnCommitCharacter\";\r\n    EditorOption[EditorOption[\"acceptSuggestionOnEnter\"] = 1] = \"acceptSuggestionOnEnter\";\r\n    EditorOption[EditorOption[\"accessibilitySupport\"] = 2] = \"accessibilitySupport\";\r\n    EditorOption[EditorOption[\"accessibilityPageSize\"] = 3] = \"accessibilityPageSize\";\r\n    EditorOption[EditorOption[\"ariaLabel\"] = 4] = \"ariaLabel\";\r\n    EditorOption[EditorOption[\"autoClosingBrackets\"] = 5] = \"autoClosingBrackets\";\r\n    EditorOption[EditorOption[\"autoClosingOvertype\"] = 6] = \"autoClosingOvertype\";\r\n    EditorOption[EditorOption[\"autoClosingQuotes\"] = 7] = \"autoClosingQuotes\";\r\n    EditorOption[EditorOption[\"autoIndent\"] = 8] = \"autoIndent\";\r\n    EditorOption[EditorOption[\"automaticLayout\"] = 9] = \"automaticLayout\";\r\n    EditorOption[EditorOption[\"autoSurround\"] = 10] = \"autoSurround\";\r\n    EditorOption[EditorOption[\"codeLens\"] = 11] = \"codeLens\";\r\n    EditorOption[EditorOption[\"colorDecorators\"] = 12] = \"colorDecorators\";\r\n    EditorOption[EditorOption[\"comments\"] = 13] = \"comments\";\r\n    EditorOption[EditorOption[\"contextmenu\"] = 14] = \"contextmenu\";\r\n    EditorOption[EditorOption[\"copyWithSyntaxHighlighting\"] = 15] = \"copyWithSyntaxHighlighting\";\r\n    EditorOption[EditorOption[\"cursorBlinking\"] = 16] = \"cursorBlinking\";\r\n    EditorOption[EditorOption[\"cursorSmoothCaretAnimation\"] = 17] = \"cursorSmoothCaretAnimation\";\r\n    EditorOption[EditorOption[\"cursorStyle\"] = 18] = \"cursorStyle\";\r\n    EditorOption[EditorOption[\"cursorSurroundingLines\"] = 19] = \"cursorSurroundingLines\";\r\n    EditorOption[EditorOption[\"cursorSurroundingLinesStyle\"] = 20] = \"cursorSurroundingLinesStyle\";\r\n    EditorOption[EditorOption[\"cursorWidth\"] = 21] = \"cursorWidth\";\r\n    EditorOption[EditorOption[\"disableLayerHinting\"] = 22] = \"disableLayerHinting\";\r\n    EditorOption[EditorOption[\"disableMonospaceOptimizations\"] = 23] = \"disableMonospaceOptimizations\";\r\n    EditorOption[EditorOption[\"dragAndDrop\"] = 24] = \"dragAndDrop\";\r\n    EditorOption[EditorOption[\"emptySelectionClipboard\"] = 25] = \"emptySelectionClipboard\";\r\n    EditorOption[EditorOption[\"extraEditorClassName\"] = 26] = \"extraEditorClassName\";\r\n    EditorOption[EditorOption[\"fastScrollSensitivity\"] = 27] = \"fastScrollSensitivity\";\r\n    EditorOption[EditorOption[\"find\"] = 28] = \"find\";\r\n    EditorOption[EditorOption[\"fixedOverflowWidgets\"] = 29] = \"fixedOverflowWidgets\";\r\n    EditorOption[EditorOption[\"folding\"] = 30] = \"folding\";\r\n    EditorOption[EditorOption[\"foldingStrategy\"] = 31] = \"foldingStrategy\";\r\n    EditorOption[EditorOption[\"foldingHighlight\"] = 32] = \"foldingHighlight\";\r\n    EditorOption[EditorOption[\"fontFamily\"] = 33] = \"fontFamily\";\r\n    EditorOption[EditorOption[\"fontInfo\"] = 34] = \"fontInfo\";\r\n    EditorOption[EditorOption[\"fontLigatures\"] = 35] = \"fontLigatures\";\r\n    EditorOption[EditorOption[\"fontSize\"] = 36] = \"fontSize\";\r\n    EditorOption[EditorOption[\"fontWeight\"] = 37] = \"fontWeight\";\r\n    EditorOption[EditorOption[\"formatOnPaste\"] = 38] = \"formatOnPaste\";\r\n    EditorOption[EditorOption[\"formatOnType\"] = 39] = \"formatOnType\";\r\n    EditorOption[EditorOption[\"glyphMargin\"] = 40] = \"glyphMargin\";\r\n    EditorOption[EditorOption[\"gotoLocation\"] = 41] = \"gotoLocation\";\r\n    EditorOption[EditorOption[\"hideCursorInOverviewRuler\"] = 42] = \"hideCursorInOverviewRuler\";\r\n    EditorOption[EditorOption[\"highlightActiveIndentGuide\"] = 43] = \"highlightActiveIndentGuide\";\r\n    EditorOption[EditorOption[\"hover\"] = 44] = \"hover\";\r\n    EditorOption[EditorOption[\"inDiffEditor\"] = 45] = \"inDiffEditor\";\r\n    EditorOption[EditorOption[\"letterSpacing\"] = 46] = \"letterSpacing\";\r\n    EditorOption[EditorOption[\"lightbulb\"] = 47] = \"lightbulb\";\r\n    EditorOption[EditorOption[\"lineDecorationsWidth\"] = 48] = \"lineDecorationsWidth\";\r\n    EditorOption[EditorOption[\"lineHeight\"] = 49] = \"lineHeight\";\r\n    EditorOption[EditorOption[\"lineNumbers\"] = 50] = \"lineNumbers\";\r\n    EditorOption[EditorOption[\"lineNumbersMinChars\"] = 51] = \"lineNumbersMinChars\";\r\n    EditorOption[EditorOption[\"links\"] = 52] = \"links\";\r\n    EditorOption[EditorOption[\"matchBrackets\"] = 53] = \"matchBrackets\";\r\n    EditorOption[EditorOption[\"minimap\"] = 54] = \"minimap\";\r\n    EditorOption[EditorOption[\"mouseStyle\"] = 55] = \"mouseStyle\";\r\n    EditorOption[EditorOption[\"mouseWheelScrollSensitivity\"] = 56] = \"mouseWheelScrollSensitivity\";\r\n    EditorOption[EditorOption[\"mouseWheelZoom\"] = 57] = \"mouseWheelZoom\";\r\n    EditorOption[EditorOption[\"multiCursorMergeOverlapping\"] = 58] = \"multiCursorMergeOverlapping\";\r\n    EditorOption[EditorOption[\"multiCursorModifier\"] = 59] = \"multiCursorModifier\";\r\n    EditorOption[EditorOption[\"multiCursorPaste\"] = 60] = \"multiCursorPaste\";\r\n    EditorOption[EditorOption[\"occurrencesHighlight\"] = 61] = \"occurrencesHighlight\";\r\n    EditorOption[EditorOption[\"overviewRulerBorder\"] = 62] = \"overviewRulerBorder\";\r\n    EditorOption[EditorOption[\"overviewRulerLanes\"] = 63] = \"overviewRulerLanes\";\r\n    EditorOption[EditorOption[\"parameterHints\"] = 64] = \"parameterHints\";\r\n    EditorOption[EditorOption[\"peekWidgetDefaultFocus\"] = 65] = \"peekWidgetDefaultFocus\";\r\n    EditorOption[EditorOption[\"quickSuggestions\"] = 66] = \"quickSuggestions\";\r\n    EditorOption[EditorOption[\"quickSuggestionsDelay\"] = 67] = \"quickSuggestionsDelay\";\r\n    EditorOption[EditorOption[\"readOnly\"] = 68] = \"readOnly\";\r\n    EditorOption[EditorOption[\"renderControlCharacters\"] = 69] = \"renderControlCharacters\";\r\n    EditorOption[EditorOption[\"renderIndentGuides\"] = 70] = \"renderIndentGuides\";\r\n    EditorOption[EditorOption[\"renderFinalNewline\"] = 71] = \"renderFinalNewline\";\r\n    EditorOption[EditorOption[\"renderLineHighlight\"] = 72] = \"renderLineHighlight\";\r\n    EditorOption[EditorOption[\"renderValidationDecorations\"] = 73] = \"renderValidationDecorations\";\r\n    EditorOption[EditorOption[\"renderWhitespace\"] = 74] = \"renderWhitespace\";\r\n    EditorOption[EditorOption[\"revealHorizontalRightPadding\"] = 75] = \"revealHorizontalRightPadding\";\r\n    EditorOption[EditorOption[\"roundedSelection\"] = 76] = \"roundedSelection\";\r\n    EditorOption[EditorOption[\"rulers\"] = 77] = \"rulers\";\r\n    EditorOption[EditorOption[\"scrollbar\"] = 78] = \"scrollbar\";\r\n    EditorOption[EditorOption[\"scrollBeyondLastColumn\"] = 79] = \"scrollBeyondLastColumn\";\r\n    EditorOption[EditorOption[\"scrollBeyondLastLine\"] = 80] = \"scrollBeyondLastLine\";\r\n    EditorOption[EditorOption[\"selectionClipboard\"] = 81] = \"selectionClipboard\";\r\n    EditorOption[EditorOption[\"selectionHighlight\"] = 82] = \"selectionHighlight\";\r\n    EditorOption[EditorOption[\"selectOnLineNumbers\"] = 83] = \"selectOnLineNumbers\";\r\n    EditorOption[EditorOption[\"showFoldingControls\"] = 84] = \"showFoldingControls\";\r\n    EditorOption[EditorOption[\"showUnused\"] = 85] = \"showUnused\";\r\n    EditorOption[EditorOption[\"snippetSuggestions\"] = 86] = \"snippetSuggestions\";\r\n    EditorOption[EditorOption[\"smoothScrolling\"] = 87] = \"smoothScrolling\";\r\n    EditorOption[EditorOption[\"stopRenderingLineAfter\"] = 88] = \"stopRenderingLineAfter\";\r\n    EditorOption[EditorOption[\"suggest\"] = 89] = \"suggest\";\r\n    EditorOption[EditorOption[\"suggestFontSize\"] = 90] = \"suggestFontSize\";\r\n    EditorOption[EditorOption[\"suggestLineHeight\"] = 91] = \"suggestLineHeight\";\r\n    EditorOption[EditorOption[\"suggestOnTriggerCharacters\"] = 92] = \"suggestOnTriggerCharacters\";\r\n    EditorOption[EditorOption[\"suggestSelection\"] = 93] = \"suggestSelection\";\r\n    EditorOption[EditorOption[\"tabCompletion\"] = 94] = \"tabCompletion\";\r\n    EditorOption[EditorOption[\"useTabStops\"] = 95] = \"useTabStops\";\r\n    EditorOption[EditorOption[\"wordSeparators\"] = 96] = \"wordSeparators\";\r\n    EditorOption[EditorOption[\"wordWrap\"] = 97] = \"wordWrap\";\r\n    EditorOption[EditorOption[\"wordWrapBreakAfterCharacters\"] = 98] = \"wordWrapBreakAfterCharacters\";\r\n    EditorOption[EditorOption[\"wordWrapBreakBeforeCharacters\"] = 99] = \"wordWrapBreakBeforeCharacters\";\r\n    EditorOption[EditorOption[\"wordWrapColumn\"] = 100] = \"wordWrapColumn\";\r\n    EditorOption[EditorOption[\"wordWrapMinified\"] = 101] = \"wordWrapMinified\";\r\n    EditorOption[EditorOption[\"wrappingIndent\"] = 102] = \"wrappingIndent\";\r\n    EditorOption[EditorOption[\"wrappingStrategy\"] = 103] = \"wrappingStrategy\";\r\n    EditorOption[EditorOption[\"editorClassName\"] = 104] = \"editorClassName\";\r\n    EditorOption[EditorOption[\"pixelRatio\"] = 105] = \"pixelRatio\";\r\n    EditorOption[EditorOption[\"tabFocusMode\"] = 106] = \"tabFocusMode\";\r\n    EditorOption[EditorOption[\"layoutInfo\"] = 107] = \"layoutInfo\";\r\n    EditorOption[EditorOption[\"wrappingInfo\"] = 108] = \"wrappingInfo\";\r\n})(EditorOption || (EditorOption = {}));\r\n/**\r\n * End of line character preference.\r\n */\r\nexport var EndOfLinePreference;\r\n(function (EndOfLinePreference) {\r\n    /**\r\n     * Use the end of line character identified in the text buffer.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"TextDefined\"] = 0] = \"TextDefined\";\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"LF\"] = 1] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    EndOfLinePreference[EndOfLinePreference[\"CRLF\"] = 2] = \"CRLF\";\r\n})(EndOfLinePreference || (EndOfLinePreference = {}));\r\n/**\r\n * End of line character preference.\r\n */\r\nexport var EndOfLineSequence;\r\n(function (EndOfLineSequence) {\r\n    /**\r\n     * Use line feed (\\n) as the end of line character.\r\n     */\r\n    EndOfLineSequence[EndOfLineSequence[\"LF\"] = 0] = \"LF\";\r\n    /**\r\n     * Use carriage return and line feed (\\r\\n) as the end of line character.\r\n     */\r\n    EndOfLineSequence[EndOfLineSequence[\"CRLF\"] = 1] = \"CRLF\";\r\n})(EndOfLineSequence || (EndOfLineSequence = {}));\r\n/**\r\n * Describes what to do with the indentation when pressing Enter.\r\n */\r\nexport var IndentAction;\r\n(function (IndentAction) {\r\n    /**\r\n     * Insert new line and copy the previous line's indentation.\r\n     */\r\n    IndentAction[IndentAction[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Insert new line and indent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Indent\"] = 1] = \"Indent\";\r\n    /**\r\n     * Insert two new lines:\r\n     *  - the first one indented which will hold the cursor\r\n     *  - the second one at the same indentation level\r\n     */\r\n    IndentAction[IndentAction[\"IndentOutdent\"] = 2] = \"IndentOutdent\";\r\n    /**\r\n     * Insert new line and outdent once (relative to the previous line's indentation).\r\n     */\r\n    IndentAction[IndentAction[\"Outdent\"] = 3] = \"Outdent\";\r\n})(IndentAction || (IndentAction = {}));\r\n/**\r\n * Virtual Key Codes, the value does not hold any inherent meaning.\r\n * Inspired somewhat from https://msdn.microsoft.com/en-us/library/windows/desktop/dd375731(v=vs.85).aspx\r\n * But these are \"more general\", as they should work across browsers & OS`s.\r\n */\r\nexport var KeyCode;\r\n(function (KeyCode) {\r\n    /**\r\n     * Placed first to cover the 0 value of the enum.\r\n     */\r\n    KeyCode[KeyCode[\"Unknown\"] = 0] = \"Unknown\";\r\n    KeyCode[KeyCode[\"Backspace\"] = 1] = \"Backspace\";\r\n    KeyCode[KeyCode[\"Tab\"] = 2] = \"Tab\";\r\n    KeyCode[KeyCode[\"Enter\"] = 3] = \"Enter\";\r\n    KeyCode[KeyCode[\"Shift\"] = 4] = \"Shift\";\r\n    KeyCode[KeyCode[\"Ctrl\"] = 5] = \"Ctrl\";\r\n    KeyCode[KeyCode[\"Alt\"] = 6] = \"Alt\";\r\n    KeyCode[KeyCode[\"PauseBreak\"] = 7] = \"PauseBreak\";\r\n    KeyCode[KeyCode[\"CapsLock\"] = 8] = \"CapsLock\";\r\n    KeyCode[KeyCode[\"Escape\"] = 9] = \"Escape\";\r\n    KeyCode[KeyCode[\"Space\"] = 10] = \"Space\";\r\n    KeyCode[KeyCode[\"PageUp\"] = 11] = \"PageUp\";\r\n    KeyCode[KeyCode[\"PageDown\"] = 12] = \"PageDown\";\r\n    KeyCode[KeyCode[\"End\"] = 13] = \"End\";\r\n    KeyCode[KeyCode[\"Home\"] = 14] = \"Home\";\r\n    KeyCode[KeyCode[\"LeftArrow\"] = 15] = \"LeftArrow\";\r\n    KeyCode[KeyCode[\"UpArrow\"] = 16] = \"UpArrow\";\r\n    KeyCode[KeyCode[\"RightArrow\"] = 17] = \"RightArrow\";\r\n    KeyCode[KeyCode[\"DownArrow\"] = 18] = \"DownArrow\";\r\n    KeyCode[KeyCode[\"Insert\"] = 19] = \"Insert\";\r\n    KeyCode[KeyCode[\"Delete\"] = 20] = \"Delete\";\r\n    KeyCode[KeyCode[\"KEY_0\"] = 21] = \"KEY_0\";\r\n    KeyCode[KeyCode[\"KEY_1\"] = 22] = \"KEY_1\";\r\n    KeyCode[KeyCode[\"KEY_2\"] = 23] = \"KEY_2\";\r\n    KeyCode[KeyCode[\"KEY_3\"] = 24] = \"KEY_3\";\r\n    KeyCode[KeyCode[\"KEY_4\"] = 25] = \"KEY_4\";\r\n    KeyCode[KeyCode[\"KEY_5\"] = 26] = \"KEY_5\";\r\n    KeyCode[KeyCode[\"KEY_6\"] = 27] = \"KEY_6\";\r\n    KeyCode[KeyCode[\"KEY_7\"] = 28] = \"KEY_7\";\r\n    KeyCode[KeyCode[\"KEY_8\"] = 29] = \"KEY_8\";\r\n    KeyCode[KeyCode[\"KEY_9\"] = 30] = \"KEY_9\";\r\n    KeyCode[KeyCode[\"KEY_A\"] = 31] = \"KEY_A\";\r\n    KeyCode[KeyCode[\"KEY_B\"] = 32] = \"KEY_B\";\r\n    KeyCode[KeyCode[\"KEY_C\"] = 33] = \"KEY_C\";\r\n    KeyCode[KeyCode[\"KEY_D\"] = 34] = \"KEY_D\";\r\n    KeyCode[KeyCode[\"KEY_E\"] = 35] = \"KEY_E\";\r\n    KeyCode[KeyCode[\"KEY_F\"] = 36] = \"KEY_F\";\r\n    KeyCode[KeyCode[\"KEY_G\"] = 37] = \"KEY_G\";\r\n    KeyCode[KeyCode[\"KEY_H\"] = 38] = \"KEY_H\";\r\n    KeyCode[KeyCode[\"KEY_I\"] = 39] = \"KEY_I\";\r\n    KeyCode[KeyCode[\"KEY_J\"] = 40] = \"KEY_J\";\r\n    KeyCode[KeyCode[\"KEY_K\"] = 41] = \"KEY_K\";\r\n    KeyCode[KeyCode[\"KEY_L\"] = 42] = \"KEY_L\";\r\n    KeyCode[KeyCode[\"KEY_M\"] = 43] = \"KEY_M\";\r\n    KeyCode[KeyCode[\"KEY_N\"] = 44] = \"KEY_N\";\r\n    KeyCode[KeyCode[\"KEY_O\"] = 45] = \"KEY_O\";\r\n    KeyCode[KeyCode[\"KEY_P\"] = 46] = \"KEY_P\";\r\n    KeyCode[KeyCode[\"KEY_Q\"] = 47] = \"KEY_Q\";\r\n    KeyCode[KeyCode[\"KEY_R\"] = 48] = \"KEY_R\";\r\n    KeyCode[KeyCode[\"KEY_S\"] = 49] = \"KEY_S\";\r\n    KeyCode[KeyCode[\"KEY_T\"] = 50] = \"KEY_T\";\r\n    KeyCode[KeyCode[\"KEY_U\"] = 51] = \"KEY_U\";\r\n    KeyCode[KeyCode[\"KEY_V\"] = 52] = \"KEY_V\";\r\n    KeyCode[KeyCode[\"KEY_W\"] = 53] = \"KEY_W\";\r\n    KeyCode[KeyCode[\"KEY_X\"] = 54] = \"KEY_X\";\r\n    KeyCode[KeyCode[\"KEY_Y\"] = 55] = \"KEY_Y\";\r\n    KeyCode[KeyCode[\"KEY_Z\"] = 56] = \"KEY_Z\";\r\n    KeyCode[KeyCode[\"Meta\"] = 57] = \"Meta\";\r\n    KeyCode[KeyCode[\"ContextMenu\"] = 58] = \"ContextMenu\";\r\n    KeyCode[KeyCode[\"F1\"] = 59] = \"F1\";\r\n    KeyCode[KeyCode[\"F2\"] = 60] = \"F2\";\r\n    KeyCode[KeyCode[\"F3\"] = 61] = \"F3\";\r\n    KeyCode[KeyCode[\"F4\"] = 62] = \"F4\";\r\n    KeyCode[KeyCode[\"F5\"] = 63] = \"F5\";\r\n    KeyCode[KeyCode[\"F6\"] = 64] = \"F6\";\r\n    KeyCode[KeyCode[\"F7\"] = 65] = \"F7\";\r\n    KeyCode[KeyCode[\"F8\"] = 66] = \"F8\";\r\n    KeyCode[KeyCode[\"F9\"] = 67] = \"F9\";\r\n    KeyCode[KeyCode[\"F10\"] = 68] = \"F10\";\r\n    KeyCode[KeyCode[\"F11\"] = 69] = \"F11\";\r\n    KeyCode[KeyCode[\"F12\"] = 70] = \"F12\";\r\n    KeyCode[KeyCode[\"F13\"] = 71] = \"F13\";\r\n    KeyCode[KeyCode[\"F14\"] = 72] = \"F14\";\r\n    KeyCode[KeyCode[\"F15\"] = 73] = \"F15\";\r\n    KeyCode[KeyCode[\"F16\"] = 74] = \"F16\";\r\n    KeyCode[KeyCode[\"F17\"] = 75] = \"F17\";\r\n    KeyCode[KeyCode[\"F18\"] = 76] = \"F18\";\r\n    KeyCode[KeyCode[\"F19\"] = 77] = \"F19\";\r\n    KeyCode[KeyCode[\"NumLock\"] = 78] = \"NumLock\";\r\n    KeyCode[KeyCode[\"ScrollLock\"] = 79] = \"ScrollLock\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ';:' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SEMICOLON\"] = 80] = \"US_SEMICOLON\";\r\n    /**\r\n     * For any country/region, the '+' key\r\n     * For the US standard keyboard, the '=+' key\r\n     */\r\n    KeyCode[KeyCode[\"US_EQUAL\"] = 81] = \"US_EQUAL\";\r\n    /**\r\n     * For any country/region, the ',' key\r\n     * For the US standard keyboard, the ',<' key\r\n     */\r\n    KeyCode[KeyCode[\"US_COMMA\"] = 82] = \"US_COMMA\";\r\n    /**\r\n     * For any country/region, the '-' key\r\n     * For the US standard keyboard, the '-_' key\r\n     */\r\n    KeyCode[KeyCode[\"US_MINUS\"] = 83] = \"US_MINUS\";\r\n    /**\r\n     * For any country/region, the '.' key\r\n     * For the US standard keyboard, the '.>' key\r\n     */\r\n    KeyCode[KeyCode[\"US_DOT\"] = 84] = \"US_DOT\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '/?' key\r\n     */\r\n    KeyCode[KeyCode[\"US_SLASH\"] = 85] = \"US_SLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '`~' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKTICK\"] = 86] = \"US_BACKTICK\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '[{' key\r\n     */\r\n    KeyCode[KeyCode[\"US_OPEN_SQUARE_BRACKET\"] = 87] = \"US_OPEN_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the '\\|' key\r\n     */\r\n    KeyCode[KeyCode[\"US_BACKSLASH\"] = 88] = \"US_BACKSLASH\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ']}' key\r\n     */\r\n    KeyCode[KeyCode[\"US_CLOSE_SQUARE_BRACKET\"] = 89] = \"US_CLOSE_SQUARE_BRACKET\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     * For the US standard keyboard, the ''\"' key\r\n     */\r\n    KeyCode[KeyCode[\"US_QUOTE\"] = 90] = \"US_QUOTE\";\r\n    /**\r\n     * Used for miscellaneous characters; it can vary by keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_8\"] = 91] = \"OEM_8\";\r\n    /**\r\n     * Either the angle bracket key or the backslash key on the RT 102-key keyboard.\r\n     */\r\n    KeyCode[KeyCode[\"OEM_102\"] = 92] = \"OEM_102\";\r\n    KeyCode[KeyCode[\"NUMPAD_0\"] = 93] = \"NUMPAD_0\";\r\n    KeyCode[KeyCode[\"NUMPAD_1\"] = 94] = \"NUMPAD_1\";\r\n    KeyCode[KeyCode[\"NUMPAD_2\"] = 95] = \"NUMPAD_2\";\r\n    KeyCode[KeyCode[\"NUMPAD_3\"] = 96] = \"NUMPAD_3\";\r\n    KeyCode[KeyCode[\"NUMPAD_4\"] = 97] = \"NUMPAD_4\";\r\n    KeyCode[KeyCode[\"NUMPAD_5\"] = 98] = \"NUMPAD_5\";\r\n    KeyCode[KeyCode[\"NUMPAD_6\"] = 99] = \"NUMPAD_6\";\r\n    KeyCode[KeyCode[\"NUMPAD_7\"] = 100] = \"NUMPAD_7\";\r\n    KeyCode[KeyCode[\"NUMPAD_8\"] = 101] = \"NUMPAD_8\";\r\n    KeyCode[KeyCode[\"NUMPAD_9\"] = 102] = \"NUMPAD_9\";\r\n    KeyCode[KeyCode[\"NUMPAD_MULTIPLY\"] = 103] = \"NUMPAD_MULTIPLY\";\r\n    KeyCode[KeyCode[\"NUMPAD_ADD\"] = 104] = \"NUMPAD_ADD\";\r\n    KeyCode[KeyCode[\"NUMPAD_SEPARATOR\"] = 105] = \"NUMPAD_SEPARATOR\";\r\n    KeyCode[KeyCode[\"NUMPAD_SUBTRACT\"] = 106] = \"NUMPAD_SUBTRACT\";\r\n    KeyCode[KeyCode[\"NUMPAD_DECIMAL\"] = 107] = \"NUMPAD_DECIMAL\";\r\n    KeyCode[KeyCode[\"NUMPAD_DIVIDE\"] = 108] = \"NUMPAD_DIVIDE\";\r\n    /**\r\n     * Cover all key codes when IME is processing input.\r\n     */\r\n    KeyCode[KeyCode[\"KEY_IN_COMPOSITION\"] = 109] = \"KEY_IN_COMPOSITION\";\r\n    KeyCode[KeyCode[\"ABNT_C1\"] = 110] = \"ABNT_C1\";\r\n    KeyCode[KeyCode[\"ABNT_C2\"] = 111] = \"ABNT_C2\";\r\n    /**\r\n     * Placed last to cover the length of the enum.\r\n     * Please do not depend on this value!\r\n     */\r\n    KeyCode[KeyCode[\"MAX_VALUE\"] = 112] = \"MAX_VALUE\";\r\n})(KeyCode || (KeyCode = {}));\r\nexport var MarkerSeverity;\r\n(function (MarkerSeverity) {\r\n    MarkerSeverity[MarkerSeverity[\"Hint\"] = 1] = \"Hint\";\r\n    MarkerSeverity[MarkerSeverity[\"Info\"] = 2] = \"Info\";\r\n    MarkerSeverity[MarkerSeverity[\"Warning\"] = 4] = \"Warning\";\r\n    MarkerSeverity[MarkerSeverity[\"Error\"] = 8] = \"Error\";\r\n})(MarkerSeverity || (MarkerSeverity = {}));\r\nexport var MarkerTag;\r\n(function (MarkerTag) {\r\n    MarkerTag[MarkerTag[\"Unnecessary\"] = 1] = \"Unnecessary\";\r\n    MarkerTag[MarkerTag[\"Deprecated\"] = 2] = \"Deprecated\";\r\n})(MarkerTag || (MarkerTag = {}));\r\n/**\r\n * Position in the minimap to render the decoration.\r\n */\r\nexport var MinimapPosition;\r\n(function (MinimapPosition) {\r\n    MinimapPosition[MinimapPosition[\"Inline\"] = 1] = \"Inline\";\r\n    MinimapPosition[MinimapPosition[\"Gutter\"] = 2] = \"Gutter\";\r\n})(MinimapPosition || (MinimapPosition = {}));\r\n/**\r\n * Type of hit element with the mouse in the editor.\r\n */\r\nexport var MouseTargetType;\r\n(function (MouseTargetType) {\r\n    /**\r\n     * Mouse is on top of an unknown element.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"UNKNOWN\"] = 0] = \"UNKNOWN\";\r\n    /**\r\n     * Mouse is on top of the textarea used for input.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"TEXTAREA\"] = 1] = \"TEXTAREA\";\r\n    /**\r\n     * Mouse is on top of the glyph margin\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_GLYPH_MARGIN\"] = 2] = \"GUTTER_GLYPH_MARGIN\";\r\n    /**\r\n     * Mouse is on top of the line numbers\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_NUMBERS\"] = 3] = \"GUTTER_LINE_NUMBERS\";\r\n    /**\r\n     * Mouse is on top of the line decorations\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_LINE_DECORATIONS\"] = 4] = \"GUTTER_LINE_DECORATIONS\";\r\n    /**\r\n     * Mouse is on top of the whitespace left in the gutter by a view zone.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"GUTTER_VIEW_ZONE\"] = 5] = \"GUTTER_VIEW_ZONE\";\r\n    /**\r\n     * Mouse is on top of text in the content.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_TEXT\"] = 6] = \"CONTENT_TEXT\";\r\n    /**\r\n     * Mouse is on top of empty space in the content (e.g. after line text or below last line)\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_EMPTY\"] = 7] = \"CONTENT_EMPTY\";\r\n    /**\r\n     * Mouse is on top of a view zone in the content.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_VIEW_ZONE\"] = 8] = \"CONTENT_VIEW_ZONE\";\r\n    /**\r\n     * Mouse is on top of a content widget.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"CONTENT_WIDGET\"] = 9] = \"CONTENT_WIDGET\";\r\n    /**\r\n     * Mouse is on top of the decorations overview ruler.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OVERVIEW_RULER\"] = 10] = \"OVERVIEW_RULER\";\r\n    /**\r\n     * Mouse is on top of a scrollbar.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"SCROLLBAR\"] = 11] = \"SCROLLBAR\";\r\n    /**\r\n     * Mouse is on top of an overlay widget.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OVERLAY_WIDGET\"] = 12] = \"OVERLAY_WIDGET\";\r\n    /**\r\n     * Mouse is outside of the editor.\r\n     */\r\n    MouseTargetType[MouseTargetType[\"OUTSIDE_EDITOR\"] = 13] = \"OUTSIDE_EDITOR\";\r\n})(MouseTargetType || (MouseTargetType = {}));\r\n/**\r\n * A positioning preference for rendering overlay widgets.\r\n */\r\nexport var OverlayWidgetPositionPreference;\r\n(function (OverlayWidgetPositionPreference) {\r\n    /**\r\n     * Position the overlay widget in the top right corner\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_RIGHT_CORNER\"] = 0] = \"TOP_RIGHT_CORNER\";\r\n    /**\r\n     * Position the overlay widget in the bottom right corner\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"BOTTOM_RIGHT_CORNER\"] = 1] = \"BOTTOM_RIGHT_CORNER\";\r\n    /**\r\n     * Position the overlay widget in the top center\r\n     */\r\n    OverlayWidgetPositionPreference[OverlayWidgetPositionPreference[\"TOP_CENTER\"] = 2] = \"TOP_CENTER\";\r\n})(OverlayWidgetPositionPreference || (OverlayWidgetPositionPreference = {}));\r\n/**\r\n * Vertical Lane in the overview ruler of the editor.\r\n */\r\nexport var OverviewRulerLane;\r\n(function (OverviewRulerLane) {\r\n    OverviewRulerLane[OverviewRulerLane[\"Left\"] = 1] = \"Left\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Center\"] = 2] = \"Center\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Right\"] = 4] = \"Right\";\r\n    OverviewRulerLane[OverviewRulerLane[\"Full\"] = 7] = \"Full\";\r\n})(OverviewRulerLane || (OverviewRulerLane = {}));\r\nexport var RenderLineNumbersType;\r\n(function (RenderLineNumbersType) {\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Off\"] = 0] = \"Off\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"On\"] = 1] = \"On\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Relative\"] = 2] = \"Relative\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Interval\"] = 3] = \"Interval\";\r\n    RenderLineNumbersType[RenderLineNumbersType[\"Custom\"] = 4] = \"Custom\";\r\n})(RenderLineNumbersType || (RenderLineNumbersType = {}));\r\nexport var RenderMinimap;\r\n(function (RenderMinimap) {\r\n    RenderMinimap[RenderMinimap[\"None\"] = 0] = \"None\";\r\n    RenderMinimap[RenderMinimap[\"Text\"] = 1] = \"Text\";\r\n    RenderMinimap[RenderMinimap[\"Blocks\"] = 2] = \"Blocks\";\r\n})(RenderMinimap || (RenderMinimap = {}));\r\nexport var ScrollType;\r\n(function (ScrollType) {\r\n    ScrollType[ScrollType[\"Smooth\"] = 0] = \"Smooth\";\r\n    ScrollType[ScrollType[\"Immediate\"] = 1] = \"Immediate\";\r\n})(ScrollType || (ScrollType = {}));\r\nexport var ScrollbarVisibility;\r\n(function (ScrollbarVisibility) {\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Auto\"] = 1] = \"Auto\";\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Hidden\"] = 2] = \"Hidden\";\r\n    ScrollbarVisibility[ScrollbarVisibility[\"Visible\"] = 3] = \"Visible\";\r\n})(ScrollbarVisibility || (ScrollbarVisibility = {}));\r\n/**\r\n * The direction of a selection.\r\n */\r\nexport var SelectionDirection;\r\n(function (SelectionDirection) {\r\n    /**\r\n     * The selection starts above where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"LTR\"] = 0] = \"LTR\";\r\n    /**\r\n     * The selection starts below where it ends.\r\n     */\r\n    SelectionDirection[SelectionDirection[\"RTL\"] = 1] = \"RTL\";\r\n})(SelectionDirection || (SelectionDirection = {}));\r\nexport var SignatureHelpTriggerKind;\r\n(function (SignatureHelpTriggerKind) {\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"Invoke\"] = 1] = \"Invoke\";\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"TriggerCharacter\"] = 2] = \"TriggerCharacter\";\r\n    SignatureHelpTriggerKind[SignatureHelpTriggerKind[\"ContentChange\"] = 3] = \"ContentChange\";\r\n})(SignatureHelpTriggerKind || (SignatureHelpTriggerKind = {}));\r\n/**\r\n * A symbol kind.\r\n */\r\nexport var SymbolKind;\r\n(function (SymbolKind) {\r\n    SymbolKind[SymbolKind[\"File\"] = 0] = \"File\";\r\n    SymbolKind[SymbolKind[\"Module\"] = 1] = \"Module\";\r\n    SymbolKind[SymbolKind[\"Namespace\"] = 2] = \"Namespace\";\r\n    SymbolKind[SymbolKind[\"Package\"] = 3] = \"Package\";\r\n    SymbolKind[SymbolKind[\"Class\"] = 4] = \"Class\";\r\n    SymbolKind[SymbolKind[\"Method\"] = 5] = \"Method\";\r\n    SymbolKind[SymbolKind[\"Property\"] = 6] = \"Property\";\r\n    SymbolKind[SymbolKind[\"Field\"] = 7] = \"Field\";\r\n    SymbolKind[SymbolKind[\"Constructor\"] = 8] = \"Constructor\";\r\n    SymbolKind[SymbolKind[\"Enum\"] = 9] = \"Enum\";\r\n    SymbolKind[SymbolKind[\"Interface\"] = 10] = \"Interface\";\r\n    SymbolKind[SymbolKind[\"Function\"] = 11] = \"Function\";\r\n    SymbolKind[SymbolKind[\"Variable\"] = 12] = \"Variable\";\r\n    SymbolKind[SymbolKind[\"Constant\"] = 13] = \"Constant\";\r\n    SymbolKind[SymbolKind[\"String\"] = 14] = \"String\";\r\n    SymbolKind[SymbolKind[\"Number\"] = 15] = \"Number\";\r\n    SymbolKind[SymbolKind[\"Boolean\"] = 16] = \"Boolean\";\r\n    SymbolKind[SymbolKind[\"Array\"] = 17] = \"Array\";\r\n    SymbolKind[SymbolKind[\"Object\"] = 18] = \"Object\";\r\n    SymbolKind[SymbolKind[\"Key\"] = 19] = \"Key\";\r\n    SymbolKind[SymbolKind[\"Null\"] = 20] = \"Null\";\r\n    SymbolKind[SymbolKind[\"EnumMember\"] = 21] = \"EnumMember\";\r\n    SymbolKind[SymbolKind[\"Struct\"] = 22] = \"Struct\";\r\n    SymbolKind[SymbolKind[\"Event\"] = 23] = \"Event\";\r\n    SymbolKind[SymbolKind[\"Operator\"] = 24] = \"Operator\";\r\n    SymbolKind[SymbolKind[\"TypeParameter\"] = 25] = \"TypeParameter\";\r\n})(SymbolKind || (SymbolKind = {}));\r\nexport var SymbolTag;\r\n(function (SymbolTag) {\r\n    SymbolTag[SymbolTag[\"Deprecated\"] = 1] = \"Deprecated\";\r\n})(SymbolTag || (SymbolTag = {}));\r\n/**\r\n * The kind of animation in which the editor's cursor should be rendered.\r\n */\r\nexport var TextEditorCursorBlinkingStyle;\r\n(function (TextEditorCursorBlinkingStyle) {\r\n    /**\r\n     * Hidden\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Hidden\"] = 0] = \"Hidden\";\r\n    /**\r\n     * Blinking\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Blink\"] = 1] = \"Blink\";\r\n    /**\r\n     * Blinking with smooth fading\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Smooth\"] = 2] = \"Smooth\";\r\n    /**\r\n     * Blinking with prolonged filled state and smooth fading\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Phase\"] = 3] = \"Phase\";\r\n    /**\r\n     * Expand collapse animation on the y axis\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Expand\"] = 4] = \"Expand\";\r\n    /**\r\n     * No-Blinking\r\n     */\r\n    TextEditorCursorBlinkingStyle[TextEditorCursorBlinkingStyle[\"Solid\"] = 5] = \"Solid\";\r\n})(TextEditorCursorBlinkingStyle || (TextEditorCursorBlinkingStyle = {}));\r\n/**\r\n * The style in which the editor's cursor should be rendered.\r\n */\r\nexport var TextEditorCursorStyle;\r\n(function (TextEditorCursorStyle) {\r\n    /**\r\n     * As a vertical line (sitting between two characters).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Line\"] = 1] = \"Line\";\r\n    /**\r\n     * As a block (sitting on top of a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Block\"] = 2] = \"Block\";\r\n    /**\r\n     * As a horizontal line (sitting under a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"Underline\"] = 3] = \"Underline\";\r\n    /**\r\n     * As a thin vertical line (sitting between two characters).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"LineThin\"] = 4] = \"LineThin\";\r\n    /**\r\n     * As an outlined block (sitting on top of a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"BlockOutline\"] = 5] = \"BlockOutline\";\r\n    /**\r\n     * As a thin horizontal line (sitting under a character).\r\n     */\r\n    TextEditorCursorStyle[TextEditorCursorStyle[\"UnderlineThin\"] = 6] = \"UnderlineThin\";\r\n})(TextEditorCursorStyle || (TextEditorCursorStyle = {}));\r\n/**\r\n * Describes the behavior of decorations when typing/editing near their edges.\r\n * Note: Please do not edit the values, as they very carefully match `DecorationRangeBehavior`\r\n */\r\nexport var TrackedRangeStickiness;\r\n(function (TrackedRangeStickiness) {\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"AlwaysGrowsWhenTypingAtEdges\"] = 0] = \"AlwaysGrowsWhenTypingAtEdges\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"NeverGrowsWhenTypingAtEdges\"] = 1] = \"NeverGrowsWhenTypingAtEdges\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingBefore\"] = 2] = \"GrowsOnlyWhenTypingBefore\";\r\n    TrackedRangeStickiness[TrackedRangeStickiness[\"GrowsOnlyWhenTypingAfter\"] = 3] = \"GrowsOnlyWhenTypingAfter\";\r\n})(TrackedRangeStickiness || (TrackedRangeStickiness = {}));\r\n/**\r\n * Describes how to indent wrapped lines.\r\n */\r\nexport var WrappingIndent;\r\n(function (WrappingIndent) {\r\n    /**\r\n     * No indentation => wrapped lines begin at column 1.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"None\"] = 0] = \"None\";\r\n    /**\r\n     * Same => wrapped lines get the same indentation as the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"Same\"] = 1] = \"Same\";\r\n    /**\r\n     * Indent => wrapped lines get +1 indentation toward the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"Indent\"] = 2] = \"Indent\";\r\n    /**\r\n     * DeepIndent => wrapped lines get +2 indentation toward the parent.\r\n     */\r\n    WrappingIndent[WrappingIndent[\"DeepIndent\"] = 3] = \"DeepIndent\";\r\n})(WrappingIndent || (WrappingIndent = {}));\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nimport { createStringBuilder } from '../core/stringBuilder.js';\r\nimport { LineDecoration, LineDecorationsNormalizer } from './lineDecorations.js';\r\nvar LinePart = /** @class */ (function () {\r\n    function LinePart(endIndex, type) {\r\n        this.endIndex = endIndex;\r\n        this.type = type;\r\n    }\r\n    return LinePart;\r\n}());\r\nvar LineRange = /** @class */ (function () {\r\n    function LineRange(startIndex, endIndex) {\r\n        this.startOffset = startIndex;\r\n        this.endOffset = endIndex;\r\n    }\r\n    LineRange.prototype.equals = function (otherLineRange) {\r\n        return this.startOffset === otherLineRange.startOffset\r\n            && this.endOffset === otherLineRange.endOffset;\r\n    };\r\n    return LineRange;\r\n}());\r\nexport { LineRange };\r\nvar RenderLineInput = /** @class */ (function () {\r\n    function RenderLineInput(useMonospaceOptimizations, canUseHalfwidthRightwardsArrow, lineContent, continuesWithWrappedLine, isBasicASCII, containsRTL, fauxIndentLength, lineTokens, lineDecorations, tabSize, startVisibleColumn, spaceWidth, middotWidth, stopRenderingLineAfter, renderWhitespace, renderControlCharacters, fontLigatures, selectionsOnLine) {\r\n        this.useMonospaceOptimizations = useMonospaceOptimizations;\r\n        this.canUseHalfwidthRightwardsArrow = canUseHalfwidthRightwardsArrow;\r\n        this.lineContent = lineContent;\r\n        this.continuesWithWrappedLine = continuesWithWrappedLine;\r\n        this.isBasicASCII = isBasicASCII;\r\n        this.containsRTL = containsRTL;\r\n        this.fauxIndentLength = fauxIndentLength;\r\n        this.lineTokens = lineTokens;\r\n        this.lineDecorations = lineDecorations;\r\n        this.tabSize = tabSize;\r\n        this.startVisibleColumn = startVisibleColumn;\r\n        this.spaceWidth = spaceWidth;\r\n        this.middotWidth = middotWidth;\r\n        this.stopRenderingLineAfter = stopRenderingLineAfter;\r\n        this.renderWhitespace = (renderWhitespace === 'all'\r\n            ? 3 /* All */\r\n            : renderWhitespace === 'boundary'\r\n                ? 1 /* Boundary */\r\n                : renderWhitespace === 'selection'\r\n                    ? 2 /* Selection */\r\n                    : 0 /* None */);\r\n        this.renderControlCharacters = renderControlCharacters;\r\n        this.fontLigatures = fontLigatures;\r\n        this.selectionsOnLine = selectionsOnLine && selectionsOnLine.sort(function (a, b) { return a.startOffset < b.startOffset ? -1 : 1; });\r\n    }\r\n    RenderLineInput.prototype.sameSelection = function (otherSelections) {\r\n        if (this.selectionsOnLine === null) {\r\n            return otherSelections === null;\r\n        }\r\n        if (otherSelections === null) {\r\n            return false;\r\n        }\r\n        if (otherSelections.length !== this.selectionsOnLine.length) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < this.selectionsOnLine.length; i++) {\r\n            if (!this.selectionsOnLine[i].equals(otherSelections[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    RenderLineInput.prototype.equals = function (other) {\r\n        return (this.useMonospaceOptimizations === other.useMonospaceOptimizations\r\n            && this.canUseHalfwidthRightwardsArrow === other.canUseHalfwidthRightwardsArrow\r\n            && this.lineContent === other.lineContent\r\n            && this.continuesWithWrappedLine === other.continuesWithWrappedLine\r\n            && this.isBasicASCII === other.isBasicASCII\r\n            && this.containsRTL === other.containsRTL\r\n            && this.fauxIndentLength === other.fauxIndentLength\r\n            && this.tabSize === other.tabSize\r\n            && this.startVisibleColumn === other.startVisibleColumn\r\n            && this.spaceWidth === other.spaceWidth\r\n            && this.stopRenderingLineAfter === other.stopRenderingLineAfter\r\n            && this.renderWhitespace === other.renderWhitespace\r\n            && this.renderControlCharacters === other.renderControlCharacters\r\n            && this.fontLigatures === other.fontLigatures\r\n            && LineDecoration.equalsArr(this.lineDecorations, other.lineDecorations)\r\n            && this.lineTokens.equals(other.lineTokens)\r\n            && this.sameSelection(other.selectionsOnLine));\r\n    };\r\n    return RenderLineInput;\r\n}());\r\nexport { RenderLineInput };\r\n/**\r\n * Provides a both direction mapping between a line's character and its rendered position.\r\n */\r\nvar CharacterMapping = /** @class */ (function () {\r\n    function CharacterMapping(length, partCount) {\r\n        this.length = length;\r\n        this._data = new Uint32Array(this.length);\r\n        this._absoluteOffsets = new Uint32Array(this.length);\r\n    }\r\n    CharacterMapping.getPartIndex = function (partData) {\r\n        return (partData & 4294901760 /* PART_INDEX_MASK */) >>> 16 /* PART_INDEX_OFFSET */;\r\n    };\r\n    CharacterMapping.getCharIndex = function (partData) {\r\n        return (partData & 65535 /* CHAR_INDEX_MASK */) >>> 0 /* CHAR_INDEX_OFFSET */;\r\n    };\r\n    CharacterMapping.prototype.setPartData = function (charOffset, partIndex, charIndex, partAbsoluteOffset) {\r\n        var partData = ((partIndex << 16 /* PART_INDEX_OFFSET */)\r\n            | (charIndex << 0 /* CHAR_INDEX_OFFSET */)) >>> 0;\r\n        this._data[charOffset] = partData;\r\n        this._absoluteOffsets[charOffset] = partAbsoluteOffset + charIndex;\r\n    };\r\n    CharacterMapping.prototype.getAbsoluteOffsets = function () {\r\n        return this._absoluteOffsets;\r\n    };\r\n    CharacterMapping.prototype.charOffsetToPartData = function (charOffset) {\r\n        if (this.length === 0) {\r\n            return 0;\r\n        }\r\n        if (charOffset < 0) {\r\n            return this._data[0];\r\n        }\r\n        if (charOffset >= this.length) {\r\n            return this._data[this.length - 1];\r\n        }\r\n        return this._data[charOffset];\r\n    };\r\n    CharacterMapping.prototype.partDataToCharOffset = function (partIndex, partLength, charIndex) {\r\n        if (this.length === 0) {\r\n            return 0;\r\n        }\r\n        var searchEntry = ((partIndex << 16 /* PART_INDEX_OFFSET */)\r\n            | (charIndex << 0 /* CHAR_INDEX_OFFSET */)) >>> 0;\r\n        var min = 0;\r\n        var max = this.length - 1;\r\n        while (min + 1 < max) {\r\n            var mid = ((min + max) >>> 1);\r\n            var midEntry = this._data[mid];\r\n            if (midEntry === searchEntry) {\r\n                return mid;\r\n            }\r\n            else if (midEntry > searchEntry) {\r\n                max = mid;\r\n            }\r\n            else {\r\n                min = mid;\r\n            }\r\n        }\r\n        if (min === max) {\r\n            return min;\r\n        }\r\n        var minEntry = this._data[min];\r\n        var maxEntry = this._data[max];\r\n        if (minEntry === searchEntry) {\r\n            return min;\r\n        }\r\n        if (maxEntry === searchEntry) {\r\n            return max;\r\n        }\r\n        var minPartIndex = CharacterMapping.getPartIndex(minEntry);\r\n        var minCharIndex = CharacterMapping.getCharIndex(minEntry);\r\n        var maxPartIndex = CharacterMapping.getPartIndex(maxEntry);\r\n        var maxCharIndex;\r\n        if (minPartIndex !== maxPartIndex) {\r\n            // sitting between parts\r\n            maxCharIndex = partLength;\r\n        }\r\n        else {\r\n            maxCharIndex = CharacterMapping.getCharIndex(maxEntry);\r\n        }\r\n        var minEntryDistance = charIndex - minCharIndex;\r\n        var maxEntryDistance = maxCharIndex - charIndex;\r\n        if (minEntryDistance <= maxEntryDistance) {\r\n            return min;\r\n        }\r\n        return max;\r\n    };\r\n    return CharacterMapping;\r\n}());\r\nexport { CharacterMapping };\r\nvar RenderLineOutput = /** @class */ (function () {\r\n    function RenderLineOutput(characterMapping, containsRTL, containsForeignElements) {\r\n        this.characterMapping = characterMapping;\r\n        this.containsRTL = containsRTL;\r\n        this.containsForeignElements = containsForeignElements;\r\n    }\r\n    return RenderLineOutput;\r\n}());\r\nexport { RenderLineOutput };\r\nexport function renderViewLine(input, sb) {\r\n    if (input.lineContent.length === 0) {\r\n        var containsForeignElements = 0 /* None */;\r\n        // This is basically for IE's hit test to work\r\n        var content = '<span><span>\\u00a0</span></span>';\r\n        if (input.lineDecorations.length > 0) {\r\n            // This line is empty, but it contains inline decorations\r\n            var beforeClassNames = [];\r\n            var afterClassNames = [];\r\n            for (var i = 0, len = input.lineDecorations.length; i < len; i++) {\r\n                var lineDecoration = input.lineDecorations[i];\r\n                if (lineDecoration.type === 1 /* Before */) {\r\n                    beforeClassNames.push(input.lineDecorations[i].className);\r\n                    containsForeignElements |= 1 /* Before */;\r\n                }\r\n                if (lineDecoration.type === 2 /* After */) {\r\n                    afterClassNames.push(input.lineDecorations[i].className);\r\n                    containsForeignElements |= 2 /* After */;\r\n                }\r\n            }\r\n            if (containsForeignElements !== 0 /* None */) {\r\n                var beforeSpan = (beforeClassNames.length > 0 ? \"<span class=\\\"\" + beforeClassNames.join(' ') + \"\\\"></span>\" : \"\");\r\n                var afterSpan = (afterClassNames.length > 0 ? \"<span class=\\\"\" + afterClassNames.join(' ') + \"\\\"></span>\" : \"\");\r\n                content = \"<span>\" + beforeSpan + afterSpan + \"</span>\";\r\n            }\r\n        }\r\n        sb.appendASCIIString(content);\r\n        return new RenderLineOutput(new CharacterMapping(0, 0), false, containsForeignElements);\r\n    }\r\n    return _renderLine(resolveRenderLineInput(input), sb);\r\n}\r\nvar RenderLineOutput2 = /** @class */ (function () {\r\n    function RenderLineOutput2(characterMapping, html, containsRTL, containsForeignElements) {\r\n        this.characterMapping = characterMapping;\r\n        this.html = html;\r\n        this.containsRTL = containsRTL;\r\n        this.containsForeignElements = containsForeignElements;\r\n    }\r\n    return RenderLineOutput2;\r\n}());\r\nexport { RenderLineOutput2 };\r\nexport function renderViewLine2(input) {\r\n    var sb = createStringBuilder(10000);\r\n    var out = renderViewLine(input, sb);\r\n    return new RenderLineOutput2(out.characterMapping, sb.build(), out.containsRTL, out.containsForeignElements);\r\n}\r\nvar ResolvedRenderLineInput = /** @class */ (function () {\r\n    function ResolvedRenderLineInput(fontIsMonospace, canUseHalfwidthRightwardsArrow, lineContent, len, isOverflowing, parts, containsForeignElements, fauxIndentLength, tabSize, startVisibleColumn, containsRTL, spaceWidth, middotWidth, renderWhitespace, renderControlCharacters) {\r\n        this.fontIsMonospace = fontIsMonospace;\r\n        this.canUseHalfwidthRightwardsArrow = canUseHalfwidthRightwardsArrow;\r\n        this.lineContent = lineContent;\r\n        this.len = len;\r\n        this.isOverflowing = isOverflowing;\r\n        this.parts = parts;\r\n        this.containsForeignElements = containsForeignElements;\r\n        this.fauxIndentLength = fauxIndentLength;\r\n        this.tabSize = tabSize;\r\n        this.startVisibleColumn = startVisibleColumn;\r\n        this.containsRTL = containsRTL;\r\n        this.spaceWidth = spaceWidth;\r\n        this.middotWidth = middotWidth;\r\n        this.renderWhitespace = renderWhitespace;\r\n        this.renderControlCharacters = renderControlCharacters;\r\n        //\r\n    }\r\n    return ResolvedRenderLineInput;\r\n}());\r\nfunction resolveRenderLineInput(input) {\r\n    var useMonospaceOptimizations = input.useMonospaceOptimizations;\r\n    var lineContent = input.lineContent;\r\n    var isOverflowing;\r\n    var len;\r\n    if (input.stopRenderingLineAfter !== -1 && input.stopRenderingLineAfter < lineContent.length) {\r\n        isOverflowing = true;\r\n        len = input.stopRenderingLineAfter;\r\n    }\r\n    else {\r\n        isOverflowing = false;\r\n        len = lineContent.length;\r\n    }\r\n    var tokens = transformAndRemoveOverflowing(input.lineTokens, input.fauxIndentLength, len);\r\n    if (input.renderWhitespace === 3 /* All */ || input.renderWhitespace === 1 /* Boundary */ || (input.renderWhitespace === 2 /* Selection */ && !!input.selectionsOnLine)) {\r\n        tokens = _applyRenderWhitespace(lineContent, len, input.continuesWithWrappedLine, tokens, input.fauxIndentLength, input.tabSize, input.startVisibleColumn, useMonospaceOptimizations, input.selectionsOnLine, input.renderWhitespace === 1 /* Boundary */);\r\n    }\r\n    var containsForeignElements = 0 /* None */;\r\n    if (input.lineDecorations.length > 0) {\r\n        for (var i = 0, len_1 = input.lineDecorations.length; i < len_1; i++) {\r\n            var lineDecoration = input.lineDecorations[i];\r\n            if (lineDecoration.type === 3 /* RegularAffectingLetterSpacing */) {\r\n                // Pretend there are foreign elements... although not 100% accurate.\r\n                containsForeignElements |= 1 /* Before */;\r\n            }\r\n            else if (lineDecoration.type === 1 /* Before */) {\r\n                containsForeignElements |= 1 /* Before */;\r\n            }\r\n            else if (lineDecoration.type === 2 /* After */) {\r\n                containsForeignElements |= 2 /* After */;\r\n            }\r\n        }\r\n        tokens = _applyInlineDecorations(lineContent, len, tokens, input.lineDecorations);\r\n    }\r\n    if (!input.containsRTL) {\r\n        // We can never split RTL text, as it ruins the rendering\r\n        tokens = splitLargeTokens(lineContent, tokens, !input.isBasicASCII || input.fontLigatures);\r\n    }\r\n    return new ResolvedRenderLineInput(useMonospaceOptimizations, input.canUseHalfwidthRightwardsArrow, lineContent, len, isOverflowing, tokens, containsForeignElements, input.fauxIndentLength, input.tabSize, input.startVisibleColumn, input.containsRTL, input.spaceWidth, input.middotWidth, input.renderWhitespace, input.renderControlCharacters);\r\n}\r\n/**\r\n * In the rendering phase, characters are always looped until token.endIndex.\r\n * Ensure that all tokens end before `len` and the last one ends precisely at `len`.\r\n */\r\nfunction transformAndRemoveOverflowing(tokens, fauxIndentLength, len) {\r\n    var result = [], resultLen = 0;\r\n    // The faux indent part of the line should have no token type\r\n    if (fauxIndentLength > 0) {\r\n        result[resultLen++] = new LinePart(fauxIndentLength, '');\r\n    }\r\n    for (var tokenIndex = 0, tokensLen = tokens.getCount(); tokenIndex < tokensLen; tokenIndex++) {\r\n        var endIndex = tokens.getEndOffset(tokenIndex);\r\n        if (endIndex <= fauxIndentLength) {\r\n            // The faux indent part of the line should have no token type\r\n            continue;\r\n        }\r\n        var type = tokens.getClassName(tokenIndex);\r\n        if (endIndex >= len) {\r\n            result[resultLen++] = new LinePart(len, type);\r\n            break;\r\n        }\r\n        result[resultLen++] = new LinePart(endIndex, type);\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * See https://github.com/Microsoft/vscode/issues/6885.\r\n * It appears that having very large spans causes very slow reading of character positions.\r\n * So here we try to avoid that.\r\n */\r\nfunction splitLargeTokens(lineContent, tokens, onlyAtSpaces) {\r\n    var lastTokenEndIndex = 0;\r\n    var result = [], resultLen = 0;\r\n    if (onlyAtSpaces) {\r\n        // Split only at spaces => we need to walk each character\r\n        for (var i = 0, len = tokens.length; i < len; i++) {\r\n            var token = tokens[i];\r\n            var tokenEndIndex = token.endIndex;\r\n            if (lastTokenEndIndex + 50 /* LongToken */ < tokenEndIndex) {\r\n                var tokenType = token.type;\r\n                var lastSpaceOffset = -1;\r\n                var currTokenStart = lastTokenEndIndex;\r\n                for (var j = lastTokenEndIndex; j < tokenEndIndex; j++) {\r\n                    if (lineContent.charCodeAt(j) === 32 /* Space */) {\r\n                        lastSpaceOffset = j;\r\n                    }\r\n                    if (lastSpaceOffset !== -1 && j - currTokenStart >= 50 /* LongToken */) {\r\n                        // Split at `lastSpaceOffset` + 1\r\n                        result[resultLen++] = new LinePart(lastSpaceOffset + 1, tokenType);\r\n                        currTokenStart = lastSpaceOffset + 1;\r\n                        lastSpaceOffset = -1;\r\n                    }\r\n                }\r\n                if (currTokenStart !== tokenEndIndex) {\r\n                    result[resultLen++] = new LinePart(tokenEndIndex, tokenType);\r\n                }\r\n            }\r\n            else {\r\n                result[resultLen++] = token;\r\n            }\r\n            lastTokenEndIndex = tokenEndIndex;\r\n        }\r\n    }\r\n    else {\r\n        // Split anywhere => we don't need to walk each character\r\n        for (var i = 0, len = tokens.length; i < len; i++) {\r\n            var token = tokens[i];\r\n            var tokenEndIndex = token.endIndex;\r\n            var diff = (tokenEndIndex - lastTokenEndIndex);\r\n            if (diff > 50 /* LongToken */) {\r\n                var tokenType = token.type;\r\n                var piecesCount = Math.ceil(diff / 50 /* LongToken */);\r\n                for (var j = 1; j < piecesCount; j++) {\r\n                    var pieceEndIndex = lastTokenEndIndex + (j * 50 /* LongToken */);\r\n                    result[resultLen++] = new LinePart(pieceEndIndex, tokenType);\r\n                }\r\n                result[resultLen++] = new LinePart(tokenEndIndex, tokenType);\r\n            }\r\n            else {\r\n                result[resultLen++] = token;\r\n            }\r\n            lastTokenEndIndex = tokenEndIndex;\r\n        }\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * Whitespace is rendered by \"replacing\" tokens with a special-purpose `vs-whitespace` type that is later recognized in the rendering phase.\r\n * Moreover, a token is created for every visual indent because on some fonts the glyphs used for rendering whitespace (&rarr; or &middot;) do not have the same width as &nbsp;.\r\n * The rendering phase will generate `style=\"width:...\"` for these tokens.\r\n */\r\nfunction _applyRenderWhitespace(lineContent, len, continuesWithWrappedLine, tokens, fauxIndentLength, tabSize, startVisibleColumn, useMonospaceOptimizations, selections, onlyBoundary) {\r\n    var result = [], resultLen = 0;\r\n    var tokenIndex = 0;\r\n    var tokenType = tokens[tokenIndex].type;\r\n    var tokenEndIndex = tokens[tokenIndex].endIndex;\r\n    var tokensLength = tokens.length;\r\n    var firstNonWhitespaceIndex = strings.firstNonWhitespaceIndex(lineContent);\r\n    var lastNonWhitespaceIndex;\r\n    if (firstNonWhitespaceIndex === -1) {\r\n        // The entire line is whitespace\r\n        firstNonWhitespaceIndex = len;\r\n        lastNonWhitespaceIndex = len;\r\n    }\r\n    else {\r\n        lastNonWhitespaceIndex = strings.lastNonWhitespaceIndex(lineContent);\r\n    }\r\n    var wasInWhitespace = false;\r\n    var currentSelectionIndex = 0;\r\n    var currentSelection = selections && selections[currentSelectionIndex];\r\n    var tmpIndent = startVisibleColumn % tabSize;\r\n    for (var charIndex = fauxIndentLength; charIndex < len; charIndex++) {\r\n        var chCode = lineContent.charCodeAt(charIndex);\r\n        if (currentSelection && charIndex >= currentSelection.endOffset) {\r\n            currentSelectionIndex++;\r\n            currentSelection = selections && selections[currentSelectionIndex];\r\n        }\r\n        var isInWhitespace = void 0;\r\n        if (charIndex < firstNonWhitespaceIndex || charIndex > lastNonWhitespaceIndex) {\r\n            // in leading or trailing whitespace\r\n            isInWhitespace = true;\r\n        }\r\n        else if (chCode === 9 /* Tab */) {\r\n            // a tab character is rendered both in all and boundary cases\r\n            isInWhitespace = true;\r\n        }\r\n        else if (chCode === 32 /* Space */) {\r\n            // hit a space character\r\n            if (onlyBoundary) {\r\n                // rendering only boundary whitespace\r\n                if (wasInWhitespace) {\r\n                    isInWhitespace = true;\r\n                }\r\n                else {\r\n                    var nextChCode = (charIndex + 1 < len ? lineContent.charCodeAt(charIndex + 1) : 0 /* Null */);\r\n                    isInWhitespace = (nextChCode === 32 /* Space */ || nextChCode === 9 /* Tab */);\r\n                }\r\n            }\r\n            else {\r\n                isInWhitespace = true;\r\n            }\r\n        }\r\n        else {\r\n            isInWhitespace = false;\r\n        }\r\n        // If rendering whitespace on selection, check that the charIndex falls within a selection\r\n        if (isInWhitespace && selections) {\r\n            isInWhitespace = !!currentSelection && currentSelection.startOffset <= charIndex && currentSelection.endOffset > charIndex;\r\n        }\r\n        if (wasInWhitespace) {\r\n            // was in whitespace token\r\n            if (!isInWhitespace || (!useMonospaceOptimizations && tmpIndent >= tabSize)) {\r\n                // leaving whitespace token or entering a new indent\r\n                result[resultLen++] = new LinePart(charIndex, 'vs-whitespace');\r\n                tmpIndent = tmpIndent % tabSize;\r\n            }\r\n        }\r\n        else {\r\n            // was in regular token\r\n            if (charIndex === tokenEndIndex || (isInWhitespace && charIndex > fauxIndentLength)) {\r\n                result[resultLen++] = new LinePart(charIndex, tokenType);\r\n                tmpIndent = tmpIndent % tabSize;\r\n            }\r\n        }\r\n        if (chCode === 9 /* Tab */) {\r\n            tmpIndent = tabSize;\r\n        }\r\n        else if (strings.isFullWidthCharacter(chCode)) {\r\n            tmpIndent += 2;\r\n        }\r\n        else {\r\n            tmpIndent++;\r\n        }\r\n        wasInWhitespace = isInWhitespace;\r\n        if (charIndex === tokenEndIndex) {\r\n            tokenIndex++;\r\n            if (tokenIndex < tokensLength) {\r\n                tokenType = tokens[tokenIndex].type;\r\n                tokenEndIndex = tokens[tokenIndex].endIndex;\r\n            }\r\n        }\r\n    }\r\n    var generateWhitespace = false;\r\n    if (wasInWhitespace) {\r\n        // was in whitespace token\r\n        if (continuesWithWrappedLine && onlyBoundary) {\r\n            var lastCharCode = (len > 0 ? lineContent.charCodeAt(len - 1) : 0 /* Null */);\r\n            var prevCharCode = (len > 1 ? lineContent.charCodeAt(len - 2) : 0 /* Null */);\r\n            var isSingleTrailingSpace = (lastCharCode === 32 /* Space */ && (prevCharCode !== 32 /* Space */ && prevCharCode !== 9 /* Tab */));\r\n            if (!isSingleTrailingSpace) {\r\n                generateWhitespace = true;\r\n            }\r\n        }\r\n        else {\r\n            generateWhitespace = true;\r\n        }\r\n    }\r\n    result[resultLen++] = new LinePart(len, generateWhitespace ? 'vs-whitespace' : tokenType);\r\n    return result;\r\n}\r\n/**\r\n * Inline decorations are \"merged\" on top of tokens.\r\n * Special care must be taken when multiple inline decorations are at play and they overlap.\r\n */\r\nfunction _applyInlineDecorations(lineContent, len, tokens, _lineDecorations) {\r\n    _lineDecorations.sort(LineDecoration.compare);\r\n    var lineDecorations = LineDecorationsNormalizer.normalize(lineContent, _lineDecorations);\r\n    var lineDecorationsLen = lineDecorations.length;\r\n    var lineDecorationIndex = 0;\r\n    var result = [], resultLen = 0, lastResultEndIndex = 0;\r\n    for (var tokenIndex = 0, len_2 = tokens.length; tokenIndex < len_2; tokenIndex++) {\r\n        var token = tokens[tokenIndex];\r\n        var tokenEndIndex = token.endIndex;\r\n        var tokenType = token.type;\r\n        while (lineDecorationIndex < lineDecorationsLen && lineDecorations[lineDecorationIndex].startOffset < tokenEndIndex) {\r\n            var lineDecoration = lineDecorations[lineDecorationIndex];\r\n            if (lineDecoration.startOffset > lastResultEndIndex) {\r\n                lastResultEndIndex = lineDecoration.startOffset;\r\n                result[resultLen++] = new LinePart(lastResultEndIndex, tokenType);\r\n            }\r\n            if (lineDecoration.endOffset + 1 <= tokenEndIndex) {\r\n                // This line decoration ends before this token ends\r\n                lastResultEndIndex = lineDecoration.endOffset + 1;\r\n                result[resultLen++] = new LinePart(lastResultEndIndex, tokenType + ' ' + lineDecoration.className);\r\n                lineDecorationIndex++;\r\n            }\r\n            else {\r\n                // This line decoration continues on to the next token\r\n                lastResultEndIndex = tokenEndIndex;\r\n                result[resultLen++] = new LinePart(lastResultEndIndex, tokenType + ' ' + lineDecoration.className);\r\n                break;\r\n            }\r\n        }\r\n        if (tokenEndIndex > lastResultEndIndex) {\r\n            lastResultEndIndex = tokenEndIndex;\r\n            result[resultLen++] = new LinePart(lastResultEndIndex, tokenType);\r\n        }\r\n    }\r\n    var lastTokenEndIndex = tokens[tokens.length - 1].endIndex;\r\n    if (lineDecorationIndex < lineDecorationsLen && lineDecorations[lineDecorationIndex].startOffset === lastTokenEndIndex) {\r\n        var classNames = [];\r\n        while (lineDecorationIndex < lineDecorationsLen && lineDecorations[lineDecorationIndex].startOffset === lastTokenEndIndex) {\r\n            classNames.push(lineDecorations[lineDecorationIndex].className);\r\n            lineDecorationIndex++;\r\n        }\r\n        result[resultLen++] = new LinePart(lastResultEndIndex, classNames.join(' '));\r\n    }\r\n    return result;\r\n}\r\n/**\r\n * This function is on purpose not split up into multiple functions to allow runtime type inference (i.e. performance reasons).\r\n * Notice how all the needed data is fully resolved and passed in (i.e. no other calls).\r\n */\r\nfunction _renderLine(input, sb) {\r\n    var fontIsMonospace = input.fontIsMonospace;\r\n    var canUseHalfwidthRightwardsArrow = input.canUseHalfwidthRightwardsArrow;\r\n    var containsForeignElements = input.containsForeignElements;\r\n    var lineContent = input.lineContent;\r\n    var len = input.len;\r\n    var isOverflowing = input.isOverflowing;\r\n    var parts = input.parts;\r\n    var fauxIndentLength = input.fauxIndentLength;\r\n    var tabSize = input.tabSize;\r\n    var startVisibleColumn = input.startVisibleColumn;\r\n    var containsRTL = input.containsRTL;\r\n    var spaceWidth = input.spaceWidth;\r\n    var middotWidth = input.middotWidth;\r\n    var renderWhitespace = input.renderWhitespace;\r\n    var renderControlCharacters = input.renderControlCharacters;\r\n    // use U+2E31 - WORD SEPARATOR MIDDLE DOT or U+00B7 - MIDDLE DOT\r\n    var spaceRenderWhitespaceCharacter = (middotWidth > spaceWidth ? 0x2E31 : 0xB7);\r\n    var characterMapping = new CharacterMapping(len + 1, parts.length);\r\n    var charIndex = 0;\r\n    var visibleColumn = startVisibleColumn;\r\n    var charOffsetInPart = 0;\r\n    var prevPartContentCnt = 0;\r\n    var partAbsoluteOffset = 0;\r\n    sb.appendASCIIString('<span>');\r\n    for (var partIndex = 0, tokensLen = parts.length; partIndex < tokensLen; partIndex++) {\r\n        partAbsoluteOffset += prevPartContentCnt;\r\n        var part = parts[partIndex];\r\n        var partEndIndex = part.endIndex;\r\n        var partType = part.type;\r\n        var partRendersWhitespace = (renderWhitespace !== 0 /* None */ && (partType.indexOf('vs-whitespace') >= 0));\r\n        charOffsetInPart = 0;\r\n        sb.appendASCIIString('<span class=\"');\r\n        sb.appendASCIIString(partType);\r\n        sb.appendASCII(34 /* DoubleQuote */);\r\n        if (partRendersWhitespace) {\r\n            var partContentCnt = 0;\r\n            {\r\n                var _charIndex = charIndex;\r\n                var _visibleColumn = visibleColumn;\r\n                for (; _charIndex < partEndIndex; _charIndex++) {\r\n                    var charCode = lineContent.charCodeAt(_charIndex);\r\n                    var charWidth = (charCode === 9 /* Tab */ ? (tabSize - (_visibleColumn % tabSize)) : 1) | 0;\r\n                    partContentCnt += charWidth;\r\n                    if (_charIndex >= fauxIndentLength) {\r\n                        _visibleColumn += charWidth;\r\n                    }\r\n                }\r\n            }\r\n            if (!fontIsMonospace) {\r\n                var partIsOnlyWhitespace = (partType === 'vs-whitespace');\r\n                if (partIsOnlyWhitespace || !containsForeignElements) {\r\n                    sb.appendASCIIString(' style=\"display:inline-block;width:');\r\n                    sb.appendASCIIString(String(spaceWidth * partContentCnt));\r\n                    sb.appendASCIIString('px\"');\r\n                }\r\n            }\r\n            sb.appendASCII(62 /* GreaterThan */);\r\n            for (; charIndex < partEndIndex; charIndex++) {\r\n                characterMapping.setPartData(charIndex, partIndex, charOffsetInPart, partAbsoluteOffset);\r\n                var charCode = lineContent.charCodeAt(charIndex);\r\n                var charWidth = void 0;\r\n                if (charCode === 9 /* Tab */) {\r\n                    charWidth = (tabSize - (visibleColumn % tabSize)) | 0;\r\n                    if (!canUseHalfwidthRightwardsArrow || charWidth > 1) {\r\n                        sb.write1(0x2192); // RIGHTWARDS ARROW\r\n                    }\r\n                    else {\r\n                        sb.write1(0xFFEB); // HALFWIDTH RIGHTWARDS ARROW\r\n                    }\r\n                    for (var space = 2; space <= charWidth; space++) {\r\n                        sb.write1(0xA0); // &nbsp;\r\n                    }\r\n                }\r\n                else { // must be CharCode.Space\r\n                    charWidth = 1;\r\n                    sb.write1(spaceRenderWhitespaceCharacter); // &middot; or word separator middle dot\r\n                }\r\n                charOffsetInPart += charWidth;\r\n                if (charIndex >= fauxIndentLength) {\r\n                    visibleColumn += charWidth;\r\n                }\r\n            }\r\n            prevPartContentCnt = partContentCnt;\r\n        }\r\n        else {\r\n            var partContentCnt = 0;\r\n            if (containsRTL) {\r\n                sb.appendASCIIString(' dir=\"ltr\"');\r\n            }\r\n            sb.appendASCII(62 /* GreaterThan */);\r\n            for (; charIndex < partEndIndex; charIndex++) {\r\n                characterMapping.setPartData(charIndex, partIndex, charOffsetInPart, partAbsoluteOffset);\r\n                var charCode = lineContent.charCodeAt(charIndex);\r\n                var producedCharacters = 1;\r\n                var charWidth = 1;\r\n                switch (charCode) {\r\n                    case 9 /* Tab */:\r\n                        producedCharacters = (tabSize - (visibleColumn % tabSize));\r\n                        charWidth = producedCharacters;\r\n                        for (var space = 1; space <= producedCharacters; space++) {\r\n                            sb.write1(0xA0); // &nbsp;\r\n                        }\r\n                        break;\r\n                    case 32 /* Space */:\r\n                        sb.write1(0xA0); // &nbsp;\r\n                        break;\r\n                    case 60 /* LessThan */:\r\n                        sb.appendASCIIString('&lt;');\r\n                        break;\r\n                    case 62 /* GreaterThan */:\r\n                        sb.appendASCIIString('&gt;');\r\n                        break;\r\n                    case 38 /* Ampersand */:\r\n                        sb.appendASCIIString('&amp;');\r\n                        break;\r\n                    case 0 /* Null */:\r\n                        sb.appendASCIIString('&#00;');\r\n                        break;\r\n                    case 65279 /* UTF8_BOM */:\r\n                    case 8232 /* LINE_SEPARATOR_2028 */:\r\n                        sb.write1(0xFFFD);\r\n                        break;\r\n                    default:\r\n                        if (strings.isFullWidthCharacter(charCode)) {\r\n                            charWidth++;\r\n                        }\r\n                        if (renderControlCharacters && charCode < 32) {\r\n                            sb.write1(9216 + charCode);\r\n                        }\r\n                        else {\r\n                            sb.write1(charCode);\r\n                        }\r\n                }\r\n                charOffsetInPart += producedCharacters;\r\n                partContentCnt += producedCharacters;\r\n                if (charIndex >= fauxIndentLength) {\r\n                    visibleColumn += charWidth;\r\n                }\r\n            }\r\n            prevPartContentCnt = partContentCnt;\r\n        }\r\n        sb.appendASCIIString('</span>');\r\n    }\r\n    // When getting client rects for the last character, we will position the\r\n    // text range at the end of the span, insteaf of at the beginning of next span\r\n    characterMapping.setPartData(len, parts.length - 1, charOffsetInPart, partAbsoluteOffset);\r\n    if (isOverflowing) {\r\n        sb.appendASCIIString('<span>&hellip;</span>');\r\n    }\r\n    sb.appendASCIIString('</span>');\r\n    return new RenderLineOutput(characterMapping, containsRTL, containsForeignElements);\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport './promise-polyfill/polyfill.js';\r\nimport { CancellationTokenSource } from '../../../base/common/cancellation.js';\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { KeyChord } from '../../../base/common/keyCodes.js';\r\nimport { URI } from '../../../base/common/uri.js';\r\nimport { Position } from '../core/position.js';\r\nimport { Range } from '../core/range.js';\r\nimport { Selection } from '../core/selection.js';\r\nimport { Token } from '../core/token.js';\r\nimport * as standaloneEnums from './standaloneEnums.js';\r\nvar KeyMod = /** @class */ (function () {\r\n    function KeyMod() {\r\n    }\r\n    KeyMod.chord = function (firstPart, secondPart) {\r\n        return KeyChord(firstPart, secondPart);\r\n    };\r\n    KeyMod.CtrlCmd = 2048 /* CtrlCmd */;\r\n    KeyMod.Shift = 1024 /* Shift */;\r\n    KeyMod.Alt = 512 /* Alt */;\r\n    KeyMod.WinCtrl = 256 /* WinCtrl */;\r\n    return KeyMod;\r\n}());\r\nexport { KeyMod };\r\nexport function createMonacoBaseAPI() {\r\n    return {\r\n        editor: undefined,\r\n        languages: undefined,\r\n        CancellationTokenSource: CancellationTokenSource,\r\n        Emitter: Emitter,\r\n        KeyCode: standaloneEnums.KeyCode,\r\n        KeyMod: KeyMod,\r\n        Position: Position,\r\n        Range: Range,\r\n        Selection: Selection,\r\n        SelectionDirection: standaloneEnums.SelectionDirection,\r\n        MarkerSeverity: standaloneEnums.MarkerSeverity,\r\n        MarkerTag: standaloneEnums.MarkerTag,\r\n        Uri: URI,\r\n        Token: Token\r\n    };\r\n}\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nvar LineDecoration = /** @class */ (function () {\r\n    function LineDecoration(startColumn, endColumn, className, type) {\r\n        this.startColumn = startColumn;\r\n        this.endColumn = endColumn;\r\n        this.className = className;\r\n        this.type = type;\r\n    }\r\n    LineDecoration._equals = function (a, b) {\r\n        return (a.startColumn === b.startColumn\r\n            && a.endColumn === b.endColumn\r\n            && a.className === b.className\r\n            && a.type === b.type);\r\n    };\r\n    LineDecoration.equalsArr = function (a, b) {\r\n        var aLen = a.length;\r\n        var bLen = b.length;\r\n        if (aLen !== bLen) {\r\n            return false;\r\n        }\r\n        for (var i = 0; i < aLen; i++) {\r\n            if (!LineDecoration._equals(a[i], b[i])) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    LineDecoration.filter = function (lineDecorations, lineNumber, minLineColumn, maxLineColumn) {\r\n        if (lineDecorations.length === 0) {\r\n            return [];\r\n        }\r\n        var result = [], resultLen = 0;\r\n        for (var i = 0, len = lineDecorations.length; i < len; i++) {\r\n            var d = lineDecorations[i];\r\n            var range = d.range;\r\n            if (range.endLineNumber < lineNumber || range.startLineNumber > lineNumber) {\r\n                // Ignore decorations that sit outside this line\r\n                continue;\r\n            }\r\n            if (range.isEmpty() && (d.type === 0 /* Regular */ || d.type === 3 /* RegularAffectingLetterSpacing */)) {\r\n                // Ignore empty range decorations\r\n                continue;\r\n            }\r\n            var startColumn = (range.startLineNumber === lineNumber ? range.startColumn : minLineColumn);\r\n            var endColumn = (range.endLineNumber === lineNumber ? range.endColumn : maxLineColumn);\r\n            result[resultLen++] = new LineDecoration(startColumn, endColumn, d.inlineClassName, d.type);\r\n        }\r\n        return result;\r\n    };\r\n    LineDecoration.compare = function (a, b) {\r\n        if (a.startColumn === b.startColumn) {\r\n            if (a.endColumn === b.endColumn) {\r\n                if (a.className < b.className) {\r\n                    return -1;\r\n                }\r\n                if (a.className > b.className) {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            }\r\n            return a.endColumn - b.endColumn;\r\n        }\r\n        return a.startColumn - b.startColumn;\r\n    };\r\n    return LineDecoration;\r\n}());\r\nexport { LineDecoration };\r\nvar DecorationSegment = /** @class */ (function () {\r\n    function DecorationSegment(startOffset, endOffset, className) {\r\n        this.startOffset = startOffset;\r\n        this.endOffset = endOffset;\r\n        this.className = className;\r\n    }\r\n    return DecorationSegment;\r\n}());\r\nexport { DecorationSegment };\r\nvar Stack = /** @class */ (function () {\r\n    function Stack() {\r\n        this.stopOffsets = [];\r\n        this.classNames = [];\r\n        this.count = 0;\r\n    }\r\n    Stack.prototype.consumeLowerThan = function (maxStopOffset, nextStartOffset, result) {\r\n        while (this.count > 0 && this.stopOffsets[0] < maxStopOffset) {\r\n            var i = 0;\r\n            // Take all equal stopping offsets\r\n            while (i + 1 < this.count && this.stopOffsets[i] === this.stopOffsets[i + 1]) {\r\n                i++;\r\n            }\r\n            // Basically we are consuming the first i + 1 elements of the stack\r\n            result.push(new DecorationSegment(nextStartOffset, this.stopOffsets[i], this.classNames.join(' ')));\r\n            nextStartOffset = this.stopOffsets[i] + 1;\r\n            // Consume them\r\n            this.stopOffsets.splice(0, i + 1);\r\n            this.classNames.splice(0, i + 1);\r\n            this.count -= (i + 1);\r\n        }\r\n        if (this.count > 0 && nextStartOffset < maxStopOffset) {\r\n            result.push(new DecorationSegment(nextStartOffset, maxStopOffset - 1, this.classNames.join(' ')));\r\n            nextStartOffset = maxStopOffset;\r\n        }\r\n        return nextStartOffset;\r\n    };\r\n    Stack.prototype.insert = function (stopOffset, className) {\r\n        if (this.count === 0 || this.stopOffsets[this.count - 1] <= stopOffset) {\r\n            // Insert at the end\r\n            this.stopOffsets.push(stopOffset);\r\n            this.classNames.push(className);\r\n        }\r\n        else {\r\n            // Find the insertion position for `stopOffset`\r\n            for (var i = 0; i < this.count; i++) {\r\n                if (this.stopOffsets[i] >= stopOffset) {\r\n                    this.stopOffsets.splice(i, 0, stopOffset);\r\n                    this.classNames.splice(i, 0, className);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        this.count++;\r\n        return;\r\n    };\r\n    return Stack;\r\n}());\r\nvar LineDecorationsNormalizer = /** @class */ (function () {\r\n    function LineDecorationsNormalizer() {\r\n    }\r\n    /**\r\n     * Normalize line decorations. Overlapping decorations will generate multiple segments\r\n     */\r\n    LineDecorationsNormalizer.normalize = function (lineContent, lineDecorations) {\r\n        if (lineDecorations.length === 0) {\r\n            return [];\r\n        }\r\n        var result = [];\r\n        var stack = new Stack();\r\n        var nextStartOffset = 0;\r\n        for (var i = 0, len = lineDecorations.length; i < len; i++) {\r\n            var d = lineDecorations[i];\r\n            var startColumn = d.startColumn;\r\n            var endColumn = d.endColumn;\r\n            var className = d.className;\r\n            // If the position would end up in the middle of a high-low surrogate pair, we move it to before the pair\r\n            if (startColumn > 1) {\r\n                var charCodeBefore = lineContent.charCodeAt(startColumn - 2);\r\n                if (strings.isHighSurrogate(charCodeBefore)) {\r\n                    startColumn--;\r\n                }\r\n            }\r\n            if (endColumn > 1) {\r\n                var charCodeBefore = lineContent.charCodeAt(endColumn - 2);\r\n                if (strings.isHighSurrogate(charCodeBefore)) {\r\n                    endColumn--;\r\n                }\r\n            }\r\n            var currentStartOffset = startColumn - 1;\r\n            var currentEndOffset = endColumn - 2;\r\n            nextStartOffset = stack.consumeLowerThan(currentStartOffset, nextStartOffset, result);\r\n            if (stack.count === 0) {\r\n                nextStartOffset = currentStartOffset;\r\n            }\r\n            stack.insert(currentEndOffset, className);\r\n        }\r\n        stack.consumeLowerThan(1073741824 /* MAX_SAFE_SMALL_INTEGER */, nextStartOffset, result);\r\n        return result;\r\n    };\r\n    return LineDecorationsNormalizer;\r\n}());\r\nexport { LineDecorationsNormalizer };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport * as strings from '../../../base/common/strings.js';\r\nvar PendingChanges = /** @class */ (function () {\r\n    function PendingChanges() {\r\n        this._hasPending = false;\r\n        this._inserts = [];\r\n        this._changes = [];\r\n        this._removes = [];\r\n    }\r\n    PendingChanges.prototype.insert = function (x) {\r\n        this._hasPending = true;\r\n        this._inserts.push(x);\r\n    };\r\n    PendingChanges.prototype.change = function (x) {\r\n        this._hasPending = true;\r\n        this._changes.push(x);\r\n    };\r\n    PendingChanges.prototype.remove = function (x) {\r\n        this._hasPending = true;\r\n        this._removes.push(x);\r\n    };\r\n    PendingChanges.prototype.mustCommit = function () {\r\n        return this._hasPending;\r\n    };\r\n    PendingChanges.prototype.commit = function (linesLayout) {\r\n        if (!this._hasPending) {\r\n            return;\r\n        }\r\n        var inserts = this._inserts;\r\n        var changes = this._changes;\r\n        var removes = this._removes;\r\n        this._hasPending = false;\r\n        this._inserts = [];\r\n        this._changes = [];\r\n        this._removes = [];\r\n        linesLayout._commitPendingChanges(inserts, changes, removes);\r\n    };\r\n    return PendingChanges;\r\n}());\r\nvar EditorWhitespace = /** @class */ (function () {\r\n    function EditorWhitespace(id, afterLineNumber, ordinal, height, minWidth) {\r\n        this.id = id;\r\n        this.afterLineNumber = afterLineNumber;\r\n        this.ordinal = ordinal;\r\n        this.height = height;\r\n        this.minWidth = minWidth;\r\n        this.prefixSum = 0;\r\n    }\r\n    return EditorWhitespace;\r\n}());\r\nexport { EditorWhitespace };\r\n/**\r\n * Layouting of objects that take vertical space (by having a height) and push down other objects.\r\n *\r\n * These objects are basically either text (lines) or spaces between those lines (whitespaces).\r\n * This provides commodity operations for working with lines that contain whitespace that pushes lines lower (vertically).\r\n */\r\nvar LinesLayout = /** @class */ (function () {\r\n    function LinesLayout(lineCount, lineHeight) {\r\n        this._instanceId = strings.singleLetterHash(++LinesLayout.INSTANCE_COUNT);\r\n        this._pendingChanges = new PendingChanges();\r\n        this._lastWhitespaceId = 0;\r\n        this._arr = [];\r\n        this._prefixSumValidIndex = -1;\r\n        this._minWidth = -1; /* marker for not being computed */\r\n        this._lineCount = lineCount;\r\n        this._lineHeight = lineHeight;\r\n    }\r\n    /**\r\n     * Find the insertion index for a new value inside a sorted array of values.\r\n     * If the value is already present in the sorted array, the insertion index will be after the already existing value.\r\n     */\r\n    LinesLayout.findInsertionIndex = function (arr, afterLineNumber, ordinal) {\r\n        var low = 0;\r\n        var high = arr.length;\r\n        while (low < high) {\r\n            var mid = ((low + high) >>> 1);\r\n            if (afterLineNumber === arr[mid].afterLineNumber) {\r\n                if (ordinal < arr[mid].ordinal) {\r\n                    high = mid;\r\n                }\r\n                else {\r\n                    low = mid + 1;\r\n                }\r\n            }\r\n            else if (afterLineNumber < arr[mid].afterLineNumber) {\r\n                high = mid;\r\n            }\r\n            else {\r\n                low = mid + 1;\r\n            }\r\n        }\r\n        return low;\r\n    };\r\n    /**\r\n     * Change the height of a line in pixels.\r\n     */\r\n    LinesLayout.prototype.setLineHeight = function (lineHeight) {\r\n        this._checkPendingChanges();\r\n        this._lineHeight = lineHeight;\r\n    };\r\n    /**\r\n     * Set the number of lines.\r\n     *\r\n     * @param lineCount New number of lines.\r\n     */\r\n    LinesLayout.prototype.onFlushed = function (lineCount) {\r\n        this._checkPendingChanges();\r\n        this._lineCount = lineCount;\r\n    };\r\n    LinesLayout.prototype.changeWhitespace = function (callback) {\r\n        var _this = this;\r\n        try {\r\n            var accessor = {\r\n                insertWhitespace: function (afterLineNumber, ordinal, heightInPx, minWidth) {\r\n                    afterLineNumber = afterLineNumber | 0;\r\n                    ordinal = ordinal | 0;\r\n                    heightInPx = heightInPx | 0;\r\n                    minWidth = minWidth | 0;\r\n                    var id = _this._instanceId + (++_this._lastWhitespaceId);\r\n                    _this._pendingChanges.insert(new EditorWhitespace(id, afterLineNumber, ordinal, heightInPx, minWidth));\r\n                    return id;\r\n                },\r\n                changeOneWhitespace: function (id, newAfterLineNumber, newHeight) {\r\n                    newAfterLineNumber = newAfterLineNumber | 0;\r\n                    newHeight = newHeight | 0;\r\n                    _this._pendingChanges.change({ id: id, newAfterLineNumber: newAfterLineNumber, newHeight: newHeight });\r\n                },\r\n                removeWhitespace: function (id) {\r\n                    _this._pendingChanges.remove({ id: id });\r\n                }\r\n            };\r\n            return callback(accessor);\r\n        }\r\n        finally {\r\n            this._pendingChanges.commit(this);\r\n        }\r\n    };\r\n    LinesLayout.prototype._commitPendingChanges = function (inserts, changes, removes) {\r\n        if (inserts.length > 0 || removes.length > 0) {\r\n            this._minWidth = -1; /* marker for not being computed */\r\n        }\r\n        if (inserts.length + changes.length + removes.length <= 1) {\r\n            // when only one thing happened, handle it \"delicately\"\r\n            for (var _i = 0, inserts_1 = inserts; _i < inserts_1.length; _i++) {\r\n                var insert = inserts_1[_i];\r\n                this._insertWhitespace(insert);\r\n            }\r\n            for (var _a = 0, changes_1 = changes; _a < changes_1.length; _a++) {\r\n                var change = changes_1[_a];\r\n                this._changeOneWhitespace(change.id, change.newAfterLineNumber, change.newHeight);\r\n            }\r\n            for (var _b = 0, removes_1 = removes; _b < removes_1.length; _b++) {\r\n                var remove = removes_1[_b];\r\n                var index = this._findWhitespaceIndex(remove.id);\r\n                if (index === -1) {\r\n                    continue;\r\n                }\r\n                this._removeWhitespace(index);\r\n            }\r\n            return;\r\n        }\r\n        // simply rebuild the entire datastructure\r\n        var toRemove = new Set();\r\n        for (var _c = 0, removes_2 = removes; _c < removes_2.length; _c++) {\r\n            var remove = removes_2[_c];\r\n            toRemove.add(remove.id);\r\n        }\r\n        var toChange = new Map();\r\n        for (var _d = 0, changes_2 = changes; _d < changes_2.length; _d++) {\r\n            var change = changes_2[_d];\r\n            toChange.set(change.id, change);\r\n        }\r\n        var applyRemoveAndChange = function (whitespaces) {\r\n            var result = [];\r\n            for (var _i = 0, whitespaces_1 = whitespaces; _i < whitespaces_1.length; _i++) {\r\n                var whitespace = whitespaces_1[_i];\r\n                if (toRemove.has(whitespace.id)) {\r\n                    continue;\r\n                }\r\n                if (toChange.has(whitespace.id)) {\r\n                    var change = toChange.get(whitespace.id);\r\n                    whitespace.afterLineNumber = change.newAfterLineNumber;\r\n                    whitespace.height = change.newHeight;\r\n                }\r\n                result.push(whitespace);\r\n            }\r\n            return result;\r\n        };\r\n        var result = applyRemoveAndChange(this._arr).concat(applyRemoveAndChange(inserts));\r\n        result.sort(function (a, b) {\r\n            if (a.afterLineNumber === b.afterLineNumber) {\r\n                return a.ordinal - b.ordinal;\r\n            }\r\n            return a.afterLineNumber - b.afterLineNumber;\r\n        });\r\n        this._arr = result;\r\n        this._prefixSumValidIndex = -1;\r\n    };\r\n    LinesLayout.prototype._checkPendingChanges = function () {\r\n        if (this._pendingChanges.mustCommit()) {\r\n            this._pendingChanges.commit(this);\r\n        }\r\n    };\r\n    LinesLayout.prototype._insertWhitespace = function (whitespace) {\r\n        var insertIndex = LinesLayout.findInsertionIndex(this._arr, whitespace.afterLineNumber, whitespace.ordinal);\r\n        this._arr.splice(insertIndex, 0, whitespace);\r\n        this._prefixSumValidIndex = Math.min(this._prefixSumValidIndex, insertIndex - 1);\r\n    };\r\n    LinesLayout.prototype._findWhitespaceIndex = function (id) {\r\n        var arr = this._arr;\r\n        for (var i = 0, len = arr.length; i < len; i++) {\r\n            if (arr[i].id === id) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    LinesLayout.prototype._changeOneWhitespace = function (id, newAfterLineNumber, newHeight) {\r\n        var index = this._findWhitespaceIndex(id);\r\n        if (index === -1) {\r\n            return;\r\n        }\r\n        if (this._arr[index].height !== newHeight) {\r\n            this._arr[index].height = newHeight;\r\n            this._prefixSumValidIndex = Math.min(this._prefixSumValidIndex, index - 1);\r\n        }\r\n        if (this._arr[index].afterLineNumber !== newAfterLineNumber) {\r\n            // `afterLineNumber` changed for this whitespace\r\n            // Record old whitespace\r\n            var whitespace = this._arr[index];\r\n            // Since changing `afterLineNumber` can trigger a reordering, we're gonna remove this whitespace\r\n            this._removeWhitespace(index);\r\n            whitespace.afterLineNumber = newAfterLineNumber;\r\n            // And add it again\r\n            this._insertWhitespace(whitespace);\r\n        }\r\n    };\r\n    LinesLayout.prototype._removeWhitespace = function (removeIndex) {\r\n        this._arr.splice(removeIndex, 1);\r\n        this._prefixSumValidIndex = Math.min(this._prefixSumValidIndex, removeIndex - 1);\r\n    };\r\n    /**\r\n     * Notify the layouter that lines have been deleted (a continuous zone of lines).\r\n     *\r\n     * @param fromLineNumber The line number at which the deletion started, inclusive\r\n     * @param toLineNumber The line number at which the deletion ended, inclusive\r\n     */\r\n    LinesLayout.prototype.onLinesDeleted = function (fromLineNumber, toLineNumber) {\r\n        this._checkPendingChanges();\r\n        fromLineNumber = fromLineNumber | 0;\r\n        toLineNumber = toLineNumber | 0;\r\n        this._lineCount -= (toLineNumber - fromLineNumber + 1);\r\n        for (var i = 0, len = this._arr.length; i < len; i++) {\r\n            var afterLineNumber = this._arr[i].afterLineNumber;\r\n            if (fromLineNumber <= afterLineNumber && afterLineNumber <= toLineNumber) {\r\n                // The line this whitespace was after has been deleted\r\n                //  => move whitespace to before first deleted line\r\n                this._arr[i].afterLineNumber = fromLineNumber - 1;\r\n            }\r\n            else if (afterLineNumber > toLineNumber) {\r\n                // The line this whitespace was after has been moved up\r\n                //  => move whitespace up\r\n                this._arr[i].afterLineNumber -= (toLineNumber - fromLineNumber + 1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Notify the layouter that lines have been inserted (a continuous zone of lines).\r\n     *\r\n     * @param fromLineNumber The line number at which the insertion started, inclusive\r\n     * @param toLineNumber The line number at which the insertion ended, inclusive.\r\n     */\r\n    LinesLayout.prototype.onLinesInserted = function (fromLineNumber, toLineNumber) {\r\n        this._checkPendingChanges();\r\n        fromLineNumber = fromLineNumber | 0;\r\n        toLineNumber = toLineNumber | 0;\r\n        this._lineCount += (toLineNumber - fromLineNumber + 1);\r\n        for (var i = 0, len = this._arr.length; i < len; i++) {\r\n            var afterLineNumber = this._arr[i].afterLineNumber;\r\n            if (fromLineNumber <= afterLineNumber) {\r\n                this._arr[i].afterLineNumber += (toLineNumber - fromLineNumber + 1);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Get the sum of all the whitespaces.\r\n     */\r\n    LinesLayout.prototype.getWhitespacesTotalHeight = function () {\r\n        this._checkPendingChanges();\r\n        if (this._arr.length === 0) {\r\n            return 0;\r\n        }\r\n        return this.getWhitespacesAccumulatedHeight(this._arr.length - 1);\r\n    };\r\n    /**\r\n     * Return the sum of the heights of the whitespaces at [0..index].\r\n     * This includes the whitespace at `index`.\r\n     *\r\n     * @param index The index of the whitespace.\r\n     * @return The sum of the heights of all whitespaces before the one at `index`, including the one at `index`.\r\n     */\r\n    LinesLayout.prototype.getWhitespacesAccumulatedHeight = function (index) {\r\n        this._checkPendingChanges();\r\n        index = index | 0;\r\n        var startIndex = Math.max(0, this._prefixSumValidIndex + 1);\r\n        if (startIndex === 0) {\r\n            this._arr[0].prefixSum = this._arr[0].height;\r\n            startIndex++;\r\n        }\r\n        for (var i = startIndex; i <= index; i++) {\r\n            this._arr[i].prefixSum = this._arr[i - 1].prefixSum + this._arr[i].height;\r\n        }\r\n        this._prefixSumValidIndex = Math.max(this._prefixSumValidIndex, index);\r\n        return this._arr[index].prefixSum;\r\n    };\r\n    /**\r\n     * Get the sum of heights for all objects.\r\n     *\r\n     * @return The sum of heights for all objects.\r\n     */\r\n    LinesLayout.prototype.getLinesTotalHeight = function () {\r\n        this._checkPendingChanges();\r\n        var linesHeight = this._lineHeight * this._lineCount;\r\n        var whitespacesHeight = this.getWhitespacesTotalHeight();\r\n        return linesHeight + whitespacesHeight;\r\n    };\r\n    /**\r\n     * Returns the accumulated height of whitespaces before the given line number.\r\n     *\r\n     * @param lineNumber The line number\r\n     */\r\n    LinesLayout.prototype.getWhitespaceAccumulatedHeightBeforeLineNumber = function (lineNumber) {\r\n        this._checkPendingChanges();\r\n        lineNumber = lineNumber | 0;\r\n        var lastWhitespaceBeforeLineNumber = this._findLastWhitespaceBeforeLineNumber(lineNumber);\r\n        if (lastWhitespaceBeforeLineNumber === -1) {\r\n            return 0;\r\n        }\r\n        return this.getWhitespacesAccumulatedHeight(lastWhitespaceBeforeLineNumber);\r\n    };\r\n    LinesLayout.prototype._findLastWhitespaceBeforeLineNumber = function (lineNumber) {\r\n        lineNumber = lineNumber | 0;\r\n        // Find the whitespace before line number\r\n        var arr = this._arr;\r\n        var low = 0;\r\n        var high = arr.length - 1;\r\n        while (low <= high) {\r\n            var delta = (high - low) | 0;\r\n            var halfDelta = (delta / 2) | 0;\r\n            var mid = (low + halfDelta) | 0;\r\n            if (arr[mid].afterLineNumber < lineNumber) {\r\n                if (mid + 1 >= arr.length || arr[mid + 1].afterLineNumber >= lineNumber) {\r\n                    return mid;\r\n                }\r\n                else {\r\n                    low = (mid + 1) | 0;\r\n                }\r\n            }\r\n            else {\r\n                high = (mid - 1) | 0;\r\n            }\r\n        }\r\n        return -1;\r\n    };\r\n    LinesLayout.prototype._findFirstWhitespaceAfterLineNumber = function (lineNumber) {\r\n        lineNumber = lineNumber | 0;\r\n        var lastWhitespaceBeforeLineNumber = this._findLastWhitespaceBeforeLineNumber(lineNumber);\r\n        var firstWhitespaceAfterLineNumber = lastWhitespaceBeforeLineNumber + 1;\r\n        if (firstWhitespaceAfterLineNumber < this._arr.length) {\r\n            return firstWhitespaceAfterLineNumber;\r\n        }\r\n        return -1;\r\n    };\r\n    /**\r\n     * Find the index of the first whitespace which has `afterLineNumber` >= `lineNumber`.\r\n     * @return The index of the first whitespace with `afterLineNumber` >= `lineNumber` or -1 if no whitespace is found.\r\n     */\r\n    LinesLayout.prototype.getFirstWhitespaceIndexAfterLineNumber = function (lineNumber) {\r\n        this._checkPendingChanges();\r\n        lineNumber = lineNumber | 0;\r\n        return this._findFirstWhitespaceAfterLineNumber(lineNumber);\r\n    };\r\n    /**\r\n     * Get the vertical offset (the sum of heights for all objects above) a certain line number.\r\n     *\r\n     * @param lineNumber The line number\r\n     * @return The sum of heights for all objects above `lineNumber`.\r\n     */\r\n    LinesLayout.prototype.getVerticalOffsetForLineNumber = function (lineNumber) {\r\n        this._checkPendingChanges();\r\n        lineNumber = lineNumber | 0;\r\n        var previousLinesHeight;\r\n        if (lineNumber > 1) {\r\n            previousLinesHeight = this._lineHeight * (lineNumber - 1);\r\n        }\r\n        else {\r\n            previousLinesHeight = 0;\r\n        }\r\n        var previousWhitespacesHeight = this.getWhitespaceAccumulatedHeightBeforeLineNumber(lineNumber);\r\n        return previousLinesHeight + previousWhitespacesHeight;\r\n    };\r\n    /**\r\n     * The maximum min width for all whitespaces.\r\n     */\r\n    LinesLayout.prototype.getWhitespaceMinWidth = function () {\r\n        this._checkPendingChanges();\r\n        if (this._minWidth === -1) {\r\n            var minWidth = 0;\r\n            for (var i = 0, len = this._arr.length; i < len; i++) {\r\n                minWidth = Math.max(minWidth, this._arr[i].minWidth);\r\n            }\r\n            this._minWidth = minWidth;\r\n        }\r\n        return this._minWidth;\r\n    };\r\n    /**\r\n     * Check if `verticalOffset` is below all lines.\r\n     */\r\n    LinesLayout.prototype.isAfterLines = function (verticalOffset) {\r\n        this._checkPendingChanges();\r\n        var totalHeight = this.getLinesTotalHeight();\r\n        return verticalOffset > totalHeight;\r\n    };\r\n    /**\r\n     * Find the first line number that is at or after vertical offset `verticalOffset`.\r\n     * i.e. if getVerticalOffsetForLine(line) is x and getVerticalOffsetForLine(line + 1) is y, then\r\n     * getLineNumberAtOrAfterVerticalOffset(i) = line, x <= i < y.\r\n     *\r\n     * @param verticalOffset The vertical offset to search at.\r\n     * @return The line number at or after vertical offset `verticalOffset`.\r\n     */\r\n    LinesLayout.prototype.getLineNumberAtOrAfterVerticalOffset = function (verticalOffset) {\r\n        this._checkPendingChanges();\r\n        verticalOffset = verticalOffset | 0;\r\n        if (verticalOffset < 0) {\r\n            return 1;\r\n        }\r\n        var linesCount = this._lineCount | 0;\r\n        var lineHeight = this._lineHeight;\r\n        var minLineNumber = 1;\r\n        var maxLineNumber = linesCount;\r\n        while (minLineNumber < maxLineNumber) {\r\n            var midLineNumber = ((minLineNumber + maxLineNumber) / 2) | 0;\r\n            var midLineNumberVerticalOffset = this.getVerticalOffsetForLineNumber(midLineNumber) | 0;\r\n            if (verticalOffset >= midLineNumberVerticalOffset + lineHeight) {\r\n                // vertical offset is after mid line number\r\n                minLineNumber = midLineNumber + 1;\r\n            }\r\n            else if (verticalOffset >= midLineNumberVerticalOffset) {\r\n                // Hit\r\n                return midLineNumber;\r\n            }\r\n            else {\r\n                // vertical offset is before mid line number, but mid line number could still be what we're searching for\r\n                maxLineNumber = midLineNumber;\r\n            }\r\n        }\r\n        if (minLineNumber > linesCount) {\r\n            return linesCount;\r\n        }\r\n        return minLineNumber;\r\n    };\r\n    /**\r\n     * Get all the lines and their relative vertical offsets that are positioned between `verticalOffset1` and `verticalOffset2`.\r\n     *\r\n     * @param verticalOffset1 The beginning of the viewport.\r\n     * @param verticalOffset2 The end of the viewport.\r\n     * @return A structure describing the lines positioned between `verticalOffset1` and `verticalOffset2`.\r\n     */\r\n    LinesLayout.prototype.getLinesViewportData = function (verticalOffset1, verticalOffset2) {\r\n        this._checkPendingChanges();\r\n        verticalOffset1 = verticalOffset1 | 0;\r\n        verticalOffset2 = verticalOffset2 | 0;\r\n        var lineHeight = this._lineHeight;\r\n        // Find first line number\r\n        // We don't live in a perfect world, so the line number might start before or after verticalOffset1\r\n        var startLineNumber = this.getLineNumberAtOrAfterVerticalOffset(verticalOffset1) | 0;\r\n        var startLineNumberVerticalOffset = this.getVerticalOffsetForLineNumber(startLineNumber) | 0;\r\n        var endLineNumber = this._lineCount | 0;\r\n        // Also keep track of what whitespace we've got\r\n        var whitespaceIndex = this.getFirstWhitespaceIndexAfterLineNumber(startLineNumber) | 0;\r\n        var whitespaceCount = this.getWhitespacesCount() | 0;\r\n        var currentWhitespaceHeight;\r\n        var currentWhitespaceAfterLineNumber;\r\n        if (whitespaceIndex === -1) {\r\n            whitespaceIndex = whitespaceCount;\r\n            currentWhitespaceAfterLineNumber = endLineNumber + 1;\r\n            currentWhitespaceHeight = 0;\r\n        }\r\n        else {\r\n            currentWhitespaceAfterLineNumber = this.getAfterLineNumberForWhitespaceIndex(whitespaceIndex) | 0;\r\n            currentWhitespaceHeight = this.getHeightForWhitespaceIndex(whitespaceIndex) | 0;\r\n        }\r\n        var currentVerticalOffset = startLineNumberVerticalOffset;\r\n        var currentLineRelativeOffset = currentVerticalOffset;\r\n        // IE (all versions) cannot handle units above about 1,533,908 px, so every 500k pixels bring numbers down\r\n        var STEP_SIZE = 500000;\r\n        var bigNumbersDelta = 0;\r\n        if (startLineNumberVerticalOffset >= STEP_SIZE) {\r\n            // Compute a delta that guarantees that lines are positioned at `lineHeight` increments\r\n            bigNumbersDelta = Math.floor(startLineNumberVerticalOffset / STEP_SIZE) * STEP_SIZE;\r\n            bigNumbersDelta = Math.floor(bigNumbersDelta / lineHeight) * lineHeight;\r\n            currentLineRelativeOffset -= bigNumbersDelta;\r\n        }\r\n        var linesOffsets = [];\r\n        var verticalCenter = verticalOffset1 + (verticalOffset2 - verticalOffset1) / 2;\r\n        var centeredLineNumber = -1;\r\n        // Figure out how far the lines go\r\n        for (var lineNumber = startLineNumber; lineNumber <= endLineNumber; lineNumber++) {\r\n            if (centeredLineNumber === -1) {\r\n                var currentLineTop = currentVerticalOffset;\r\n                var currentLineBottom = currentVerticalOffset + lineHeight;\r\n                if ((currentLineTop <= verticalCenter && verticalCenter < currentLineBottom) || currentLineTop > verticalCenter) {\r\n                    centeredLineNumber = lineNumber;\r\n                }\r\n            }\r\n            // Count current line height in the vertical offsets\r\n            currentVerticalOffset += lineHeight;\r\n            linesOffsets[lineNumber - startLineNumber] = currentLineRelativeOffset;\r\n            // Next line starts immediately after this one\r\n            currentLineRelativeOffset += lineHeight;\r\n            while (currentWhitespaceAfterLineNumber === lineNumber) {\r\n                // Push down next line with the height of the current whitespace\r\n                currentLineRelativeOffset += currentWhitespaceHeight;\r\n                // Count current whitespace in the vertical offsets\r\n                currentVerticalOffset += currentWhitespaceHeight;\r\n                whitespaceIndex++;\r\n                if (whitespaceIndex >= whitespaceCount) {\r\n                    currentWhitespaceAfterLineNumber = endLineNumber + 1;\r\n                }\r\n                else {\r\n                    currentWhitespaceAfterLineNumber = this.getAfterLineNumberForWhitespaceIndex(whitespaceIndex) | 0;\r\n                    currentWhitespaceHeight = this.getHeightForWhitespaceIndex(whitespaceIndex) | 0;\r\n                }\r\n            }\r\n            if (currentVerticalOffset >= verticalOffset2) {\r\n                // We have covered the entire viewport area, time to stop\r\n                endLineNumber = lineNumber;\r\n                break;\r\n            }\r\n        }\r\n        if (centeredLineNumber === -1) {\r\n            centeredLineNumber = endLineNumber;\r\n        }\r\n        var endLineNumberVerticalOffset = this.getVerticalOffsetForLineNumber(endLineNumber) | 0;\r\n        var completelyVisibleStartLineNumber = startLineNumber;\r\n        var completelyVisibleEndLineNumber = endLineNumber;\r\n        if (completelyVisibleStartLineNumber < completelyVisibleEndLineNumber) {\r\n            if (startLineNumberVerticalOffset < verticalOffset1) {\r\n                completelyVisibleStartLineNumber++;\r\n            }\r\n        }\r\n        if (completelyVisibleStartLineNumber < completelyVisibleEndLineNumber) {\r\n            if (endLineNumberVerticalOffset + lineHeight > verticalOffset2) {\r\n                completelyVisibleEndLineNumber--;\r\n            }\r\n        }\r\n        return {\r\n            bigNumbersDelta: bigNumbersDelta,\r\n            startLineNumber: startLineNumber,\r\n            endLineNumber: endLineNumber,\r\n            relativeVerticalOffset: linesOffsets,\r\n            centeredLineNumber: centeredLineNumber,\r\n            completelyVisibleStartLineNumber: completelyVisibleStartLineNumber,\r\n            completelyVisibleEndLineNumber: completelyVisibleEndLineNumber\r\n        };\r\n    };\r\n    LinesLayout.prototype.getVerticalOffsetForWhitespaceIndex = function (whitespaceIndex) {\r\n        this._checkPendingChanges();\r\n        whitespaceIndex = whitespaceIndex | 0;\r\n        var afterLineNumber = this.getAfterLineNumberForWhitespaceIndex(whitespaceIndex);\r\n        var previousLinesHeight;\r\n        if (afterLineNumber >= 1) {\r\n            previousLinesHeight = this._lineHeight * afterLineNumber;\r\n        }\r\n        else {\r\n            previousLinesHeight = 0;\r\n        }\r\n        var previousWhitespacesHeight;\r\n        if (whitespaceIndex > 0) {\r\n            previousWhitespacesHeight = this.getWhitespacesAccumulatedHeight(whitespaceIndex - 1);\r\n        }\r\n        else {\r\n            previousWhitespacesHeight = 0;\r\n        }\r\n        return previousLinesHeight + previousWhitespacesHeight;\r\n    };\r\n    LinesLayout.prototype.getWhitespaceIndexAtOrAfterVerticallOffset = function (verticalOffset) {\r\n        this._checkPendingChanges();\r\n        verticalOffset = verticalOffset | 0;\r\n        var minWhitespaceIndex = 0;\r\n        var maxWhitespaceIndex = this.getWhitespacesCount() - 1;\r\n        if (maxWhitespaceIndex < 0) {\r\n            return -1;\r\n        }\r\n        // Special case: nothing to be found\r\n        var maxWhitespaceVerticalOffset = this.getVerticalOffsetForWhitespaceIndex(maxWhitespaceIndex);\r\n        var maxWhitespaceHeight = this.getHeightForWhitespaceIndex(maxWhitespaceIndex);\r\n        if (verticalOffset >= maxWhitespaceVerticalOffset + maxWhitespaceHeight) {\r\n            return -1;\r\n        }\r\n        while (minWhitespaceIndex < maxWhitespaceIndex) {\r\n            var midWhitespaceIndex = Math.floor((minWhitespaceIndex + maxWhitespaceIndex) / 2);\r\n            var midWhitespaceVerticalOffset = this.getVerticalOffsetForWhitespaceIndex(midWhitespaceIndex);\r\n            var midWhitespaceHeight = this.getHeightForWhitespaceIndex(midWhitespaceIndex);\r\n            if (verticalOffset >= midWhitespaceVerticalOffset + midWhitespaceHeight) {\r\n                // vertical offset is after whitespace\r\n                minWhitespaceIndex = midWhitespaceIndex + 1;\r\n            }\r\n            else if (verticalOffset >= midWhitespaceVerticalOffset) {\r\n                // Hit\r\n                return midWhitespaceIndex;\r\n            }\r\n            else {\r\n                // vertical offset is before whitespace, but midWhitespaceIndex might still be what we're searching for\r\n                maxWhitespaceIndex = midWhitespaceIndex;\r\n            }\r\n        }\r\n        return minWhitespaceIndex;\r\n    };\r\n    /**\r\n     * Get exactly the whitespace that is layouted at `verticalOffset`.\r\n     *\r\n     * @param verticalOffset The vertical offset.\r\n     * @return Precisely the whitespace that is layouted at `verticaloffset` or null.\r\n     */\r\n    LinesLayout.prototype.getWhitespaceAtVerticalOffset = function (verticalOffset) {\r\n        this._checkPendingChanges();\r\n        verticalOffset = verticalOffset | 0;\r\n        var candidateIndex = this.getWhitespaceIndexAtOrAfterVerticallOffset(verticalOffset);\r\n        if (candidateIndex < 0) {\r\n            return null;\r\n        }\r\n        if (candidateIndex >= this.getWhitespacesCount()) {\r\n            return null;\r\n        }\r\n        var candidateTop = this.getVerticalOffsetForWhitespaceIndex(candidateIndex);\r\n        if (candidateTop > verticalOffset) {\r\n            return null;\r\n        }\r\n        var candidateHeight = this.getHeightForWhitespaceIndex(candidateIndex);\r\n        var candidateId = this.getIdForWhitespaceIndex(candidateIndex);\r\n        var candidateAfterLineNumber = this.getAfterLineNumberForWhitespaceIndex(candidateIndex);\r\n        return {\r\n            id: candidateId,\r\n            afterLineNumber: candidateAfterLineNumber,\r\n            verticalOffset: candidateTop,\r\n            height: candidateHeight\r\n        };\r\n    };\r\n    /**\r\n     * Get a list of whitespaces that are positioned between `verticalOffset1` and `verticalOffset2`.\r\n     *\r\n     * @param verticalOffset1 The beginning of the viewport.\r\n     * @param verticalOffset2 The end of the viewport.\r\n     * @return An array with all the whitespaces in the viewport. If no whitespace is in viewport, the array is empty.\r\n     */\r\n    LinesLayout.prototype.getWhitespaceViewportData = function (verticalOffset1, verticalOffset2) {\r\n        this._checkPendingChanges();\r\n        verticalOffset1 = verticalOffset1 | 0;\r\n        verticalOffset2 = verticalOffset2 | 0;\r\n        var startIndex = this.getWhitespaceIndexAtOrAfterVerticallOffset(verticalOffset1);\r\n        var endIndex = this.getWhitespacesCount() - 1;\r\n        if (startIndex < 0) {\r\n            return [];\r\n        }\r\n        var result = [];\r\n        for (var i = startIndex; i <= endIndex; i++) {\r\n            var top_1 = this.getVerticalOffsetForWhitespaceIndex(i);\r\n            var height = this.getHeightForWhitespaceIndex(i);\r\n            if (top_1 >= verticalOffset2) {\r\n                break;\r\n            }\r\n            result.push({\r\n                id: this.getIdForWhitespaceIndex(i),\r\n                afterLineNumber: this.getAfterLineNumberForWhitespaceIndex(i),\r\n                verticalOffset: top_1,\r\n                height: height\r\n            });\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * Get all whitespaces.\r\n     */\r\n    LinesLayout.prototype.getWhitespaces = function () {\r\n        this._checkPendingChanges();\r\n        return this._arr.slice(0);\r\n    };\r\n    /**\r\n     * The number of whitespaces.\r\n     */\r\n    LinesLayout.prototype.getWhitespacesCount = function () {\r\n        this._checkPendingChanges();\r\n        return this._arr.length;\r\n    };\r\n    /**\r\n     * Get the `id` for whitespace at index `index`.\r\n     *\r\n     * @param index The index of the whitespace.\r\n     * @return `id` of whitespace at `index`.\r\n     */\r\n    LinesLayout.prototype.getIdForWhitespaceIndex = function (index) {\r\n        this._checkPendingChanges();\r\n        index = index | 0;\r\n        return this._arr[index].id;\r\n    };\r\n    /**\r\n     * Get the `afterLineNumber` for whitespace at index `index`.\r\n     *\r\n     * @param index The index of the whitespace.\r\n     * @return `afterLineNumber` of whitespace at `index`.\r\n     */\r\n    LinesLayout.prototype.getAfterLineNumberForWhitespaceIndex = function (index) {\r\n        this._checkPendingChanges();\r\n        index = index | 0;\r\n        return this._arr[index].afterLineNumber;\r\n    };\r\n    /**\r\n     * Get the `height` for whitespace at index `index`.\r\n     *\r\n     * @param index The index of the whitespace.\r\n     * @return `height` of whitespace at `index`.\r\n     */\r\n    LinesLayout.prototype.getHeightForWhitespaceIndex = function (index) {\r\n        this._checkPendingChanges();\r\n        index = index | 0;\r\n        return this._arr[index].height;\r\n    };\r\n    LinesLayout.INSTANCE_COUNT = 0;\r\n    return LinesLayout;\r\n}());\r\nexport { LinesLayout };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nimport { Emitter } from '../../../base/common/event.js';\r\nimport { Disposable } from '../../../base/common/lifecycle.js';\r\nimport { Scrollable } from '../../../base/common/scrollable.js';\r\nimport { LinesLayout } from './linesLayout.js';\r\nimport { Viewport } from '../viewModel/viewModel.js';\r\nvar SMOOTH_SCROLLING_TIME = 125;\r\nvar EditorScrollDimensions = /** @class */ (function () {\r\n    function EditorScrollDimensions(width, contentWidth, height, contentHeight) {\r\n        width = width | 0;\r\n        contentWidth = contentWidth | 0;\r\n        height = height | 0;\r\n        contentHeight = contentHeight | 0;\r\n        if (width < 0) {\r\n            width = 0;\r\n        }\r\n        if (contentWidth < 0) {\r\n            contentWidth = 0;\r\n        }\r\n        if (height < 0) {\r\n            height = 0;\r\n        }\r\n        if (contentHeight < 0) {\r\n            contentHeight = 0;\r\n        }\r\n        this.width = width;\r\n        this.contentWidth = contentWidth;\r\n        this.scrollWidth = Math.max(width, contentWidth);\r\n        this.height = height;\r\n        this.contentHeight = contentHeight;\r\n        this.scrollHeight = Math.max(height, contentHeight);\r\n    }\r\n    EditorScrollDimensions.prototype.equals = function (other) {\r\n        return (this.width === other.width\r\n            && this.contentWidth === other.contentWidth\r\n            && this.height === other.height\r\n            && this.contentHeight === other.contentHeight);\r\n    };\r\n    return EditorScrollDimensions;\r\n}());\r\nvar EditorScrollable = /** @class */ (function (_super) {\r\n    __extends(EditorScrollable, _super);\r\n    function EditorScrollable(smoothScrollDuration, scheduleAtNextAnimationFrame) {\r\n        var _this = _super.call(this) || this;\r\n        _this._onDidContentSizeChange = _this._register(new Emitter());\r\n        _this.onDidContentSizeChange = _this._onDidContentSizeChange.event;\r\n        _this._dimensions = new EditorScrollDimensions(0, 0, 0, 0);\r\n        _this._scrollable = _this._register(new Scrollable(smoothScrollDuration, scheduleAtNextAnimationFrame));\r\n        _this.onDidScroll = _this._scrollable.onScroll;\r\n        return _this;\r\n    }\r\n    EditorScrollable.prototype.getScrollable = function () {\r\n        return this._scrollable;\r\n    };\r\n    EditorScrollable.prototype.setSmoothScrollDuration = function (smoothScrollDuration) {\r\n        this._scrollable.setSmoothScrollDuration(smoothScrollDuration);\r\n    };\r\n    EditorScrollable.prototype.validateScrollPosition = function (scrollPosition) {\r\n        return this._scrollable.validateScrollPosition(scrollPosition);\r\n    };\r\n    EditorScrollable.prototype.getScrollDimensions = function () {\r\n        return this._dimensions;\r\n    };\r\n    EditorScrollable.prototype.setScrollDimensions = function (dimensions) {\r\n        if (this._dimensions.equals(dimensions)) {\r\n            return;\r\n        }\r\n        var oldDimensions = this._dimensions;\r\n        this._dimensions = dimensions;\r\n        this._scrollable.setScrollDimensions({\r\n            width: dimensions.width,\r\n            scrollWidth: dimensions.scrollWidth,\r\n            height: dimensions.height,\r\n            scrollHeight: dimensions.scrollHeight\r\n        });\r\n        var contentWidthChanged = (oldDimensions.contentWidth !== dimensions.contentWidth);\r\n        var contentHeightChanged = (oldDimensions.contentHeight !== dimensions.contentHeight);\r\n        if (contentWidthChanged || contentHeightChanged) {\r\n            this._onDidContentSizeChange.fire({\r\n                contentWidth: dimensions.contentWidth,\r\n                contentHeight: dimensions.contentHeight,\r\n                contentWidthChanged: contentWidthChanged,\r\n                contentHeightChanged: contentHeightChanged\r\n            });\r\n        }\r\n    };\r\n    EditorScrollable.prototype.getFutureScrollPosition = function () {\r\n        return this._scrollable.getFutureScrollPosition();\r\n    };\r\n    EditorScrollable.prototype.getCurrentScrollPosition = function () {\r\n        return this._scrollable.getCurrentScrollPosition();\r\n    };\r\n    EditorScrollable.prototype.setScrollPositionNow = function (update) {\r\n        this._scrollable.setScrollPositionNow(update);\r\n    };\r\n    EditorScrollable.prototype.setScrollPositionSmooth = function (update) {\r\n        this._scrollable.setScrollPositionSmooth(update);\r\n    };\r\n    return EditorScrollable;\r\n}(Disposable));\r\nvar ViewLayout = /** @class */ (function (_super) {\r\n    __extends(ViewLayout, _super);\r\n    function ViewLayout(configuration, lineCount, scheduleAtNextAnimationFrame) {\r\n        var _this = _super.call(this) || this;\r\n        _this._configuration = configuration;\r\n        var options = _this._configuration.options;\r\n        var layoutInfo = options.get(107 /* layoutInfo */);\r\n        _this._linesLayout = new LinesLayout(lineCount, options.get(49 /* lineHeight */));\r\n        _this._scrollable = _this._register(new EditorScrollable(0, scheduleAtNextAnimationFrame));\r\n        _this._configureSmoothScrollDuration();\r\n        _this._scrollable.setScrollDimensions(new EditorScrollDimensions(layoutInfo.contentWidth, 0, layoutInfo.height, 0));\r\n        _this.onDidScroll = _this._scrollable.onDidScroll;\r\n        _this.onDidContentSizeChange = _this._scrollable.onDidContentSizeChange;\r\n        _this._updateHeight();\r\n        return _this;\r\n    }\r\n    ViewLayout.prototype.dispose = function () {\r\n        _super.prototype.dispose.call(this);\r\n    };\r\n    ViewLayout.prototype.getScrollable = function () {\r\n        return this._scrollable.getScrollable();\r\n    };\r\n    ViewLayout.prototype.onHeightMaybeChanged = function () {\r\n        this._updateHeight();\r\n    };\r\n    ViewLayout.prototype._configureSmoothScrollDuration = function () {\r\n        this._scrollable.setSmoothScrollDuration(this._configuration.options.get(87 /* smoothScrolling */) ? SMOOTH_SCROLLING_TIME : 0);\r\n    };\r\n    // ---- begin view event handlers\r\n    ViewLayout.prototype.onConfigurationChanged = function (e) {\r\n        var options = this._configuration.options;\r\n        if (e.hasChanged(49 /* lineHeight */)) {\r\n            this._linesLayout.setLineHeight(options.get(49 /* lineHeight */));\r\n        }\r\n        if (e.hasChanged(107 /* layoutInfo */)) {\r\n            var layoutInfo = options.get(107 /* layoutInfo */);\r\n            var width = layoutInfo.contentWidth;\r\n            var height = layoutInfo.height;\r\n            var scrollDimensions = this._scrollable.getScrollDimensions();\r\n            var scrollWidth = scrollDimensions.scrollWidth;\r\n            this._scrollable.setScrollDimensions(new EditorScrollDimensions(width, scrollDimensions.contentWidth, height, this._getContentHeight(width, height, scrollWidth)));\r\n        }\r\n        else {\r\n            this._updateHeight();\r\n        }\r\n        if (e.hasChanged(87 /* smoothScrolling */)) {\r\n            this._configureSmoothScrollDuration();\r\n        }\r\n    };\r\n    ViewLayout.prototype.onFlushed = function (lineCount) {\r\n        this._linesLayout.onFlushed(lineCount);\r\n    };\r\n    ViewLayout.prototype.onLinesDeleted = function (fromLineNumber, toLineNumber) {\r\n        this._linesLayout.onLinesDeleted(fromLineNumber, toLineNumber);\r\n    };\r\n    ViewLayout.prototype.onLinesInserted = function (fromLineNumber, toLineNumber) {\r\n        this._linesLayout.onLinesInserted(fromLineNumber, toLineNumber);\r\n    };\r\n    // ---- end view event handlers\r\n    ViewLayout.prototype._getHorizontalScrollbarHeight = function (width, scrollWidth) {\r\n        var options = this._configuration.options;\r\n        var scrollbar = options.get(78 /* scrollbar */);\r\n        if (scrollbar.horizontal === 2 /* Hidden */) {\r\n            // horizontal scrollbar not visible\r\n            return 0;\r\n        }\r\n        if (width >= scrollWidth) {\r\n            // horizontal scrollbar not visible\r\n            return 0;\r\n        }\r\n        return scrollbar.horizontalScrollbarSize;\r\n    };\r\n    ViewLayout.prototype._getContentHeight = function (width, height, scrollWidth) {\r\n        var options = this._configuration.options;\r\n        var result = this._linesLayout.getLinesTotalHeight();\r\n        if (options.get(80 /* scrollBeyondLastLine */)) {\r\n            result += height - options.get(49 /* lineHeight */);\r\n        }\r\n        else {\r\n            result += this._getHorizontalScrollbarHeight(width, scrollWidth);\r\n        }\r\n        return result;\r\n    };\r\n    ViewLayout.prototype._updateHeight = function () {\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        var width = scrollDimensions.width;\r\n        var height = scrollDimensions.height;\r\n        var scrollWidth = scrollDimensions.scrollWidth;\r\n        this._scrollable.setScrollDimensions(new EditorScrollDimensions(width, scrollDimensions.contentWidth, height, this._getContentHeight(width, height, scrollWidth)));\r\n    };\r\n    // ---- Layouting logic\r\n    ViewLayout.prototype.getCurrentViewport = function () {\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        var currentScrollPosition = this._scrollable.getCurrentScrollPosition();\r\n        return new Viewport(currentScrollPosition.scrollTop, currentScrollPosition.scrollLeft, scrollDimensions.width, scrollDimensions.height);\r\n    };\r\n    ViewLayout.prototype.getFutureViewport = function () {\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        var currentScrollPosition = this._scrollable.getFutureScrollPosition();\r\n        return new Viewport(currentScrollPosition.scrollTop, currentScrollPosition.scrollLeft, scrollDimensions.width, scrollDimensions.height);\r\n    };\r\n    ViewLayout.prototype._computeContentWidth = function (maxLineWidth) {\r\n        var options = this._configuration.options;\r\n        var wrappingInfo = options.get(108 /* wrappingInfo */);\r\n        var fontInfo = options.get(34 /* fontInfo */);\r\n        if (wrappingInfo.isViewportWrapping) {\r\n            var layoutInfo = options.get(107 /* layoutInfo */);\r\n            var minimap = options.get(54 /* minimap */);\r\n            if (maxLineWidth > layoutInfo.contentWidth + fontInfo.typicalHalfwidthCharacterWidth) {\r\n                // This is a case where viewport wrapping is on, but the line extends above the viewport\r\n                if (minimap.enabled && minimap.side === 'right') {\r\n                    // We need to accomodate the scrollbar width\r\n                    return maxLineWidth + layoutInfo.verticalScrollbarWidth;\r\n                }\r\n            }\r\n            return maxLineWidth;\r\n        }\r\n        else {\r\n            var extraHorizontalSpace = options.get(79 /* scrollBeyondLastColumn */) * fontInfo.typicalHalfwidthCharacterWidth;\r\n            var whitespaceMinWidth = this._linesLayout.getWhitespaceMinWidth();\r\n            return Math.max(maxLineWidth + extraHorizontalSpace, whitespaceMinWidth);\r\n        }\r\n    };\r\n    ViewLayout.prototype.onMaxLineWidthChanged = function (maxLineWidth) {\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        // const newScrollWidth = ;\r\n        this._scrollable.setScrollDimensions(new EditorScrollDimensions(scrollDimensions.width, this._computeContentWidth(maxLineWidth), scrollDimensions.height, scrollDimensions.contentHeight));\r\n        // The height might depend on the fact that there is a horizontal scrollbar or not\r\n        this._updateHeight();\r\n    };\r\n    // ---- view state\r\n    ViewLayout.prototype.saveState = function () {\r\n        var currentScrollPosition = this._scrollable.getFutureScrollPosition();\r\n        var scrollTop = currentScrollPosition.scrollTop;\r\n        var firstLineNumberInViewport = this._linesLayout.getLineNumberAtOrAfterVerticalOffset(scrollTop);\r\n        var whitespaceAboveFirstLine = this._linesLayout.getWhitespaceAccumulatedHeightBeforeLineNumber(firstLineNumberInViewport);\r\n        return {\r\n            scrollTop: scrollTop,\r\n            scrollTopWithoutViewZones: scrollTop - whitespaceAboveFirstLine,\r\n            scrollLeft: currentScrollPosition.scrollLeft\r\n        };\r\n    };\r\n    // ---- IVerticalLayoutProvider\r\n    ViewLayout.prototype.changeWhitespace = function (callback) {\r\n        return this._linesLayout.changeWhitespace(callback);\r\n    };\r\n    ViewLayout.prototype.getVerticalOffsetForLineNumber = function (lineNumber) {\r\n        return this._linesLayout.getVerticalOffsetForLineNumber(lineNumber);\r\n    };\r\n    ViewLayout.prototype.isAfterLines = function (verticalOffset) {\r\n        return this._linesLayout.isAfterLines(verticalOffset);\r\n    };\r\n    ViewLayout.prototype.getLineNumberAtVerticalOffset = function (verticalOffset) {\r\n        return this._linesLayout.getLineNumberAtOrAfterVerticalOffset(verticalOffset);\r\n    };\r\n    ViewLayout.prototype.getWhitespaceAtVerticalOffset = function (verticalOffset) {\r\n        return this._linesLayout.getWhitespaceAtVerticalOffset(verticalOffset);\r\n    };\r\n    ViewLayout.prototype.getLinesViewportData = function () {\r\n        var visibleBox = this.getCurrentViewport();\r\n        return this._linesLayout.getLinesViewportData(visibleBox.top, visibleBox.top + visibleBox.height);\r\n    };\r\n    ViewLayout.prototype.getLinesViewportDataAtScrollTop = function (scrollTop) {\r\n        // do some minimal validations on scrollTop\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        if (scrollTop + scrollDimensions.height > scrollDimensions.scrollHeight) {\r\n            scrollTop = scrollDimensions.scrollHeight - scrollDimensions.height;\r\n        }\r\n        if (scrollTop < 0) {\r\n            scrollTop = 0;\r\n        }\r\n        return this._linesLayout.getLinesViewportData(scrollTop, scrollTop + scrollDimensions.height);\r\n    };\r\n    ViewLayout.prototype.getWhitespaceViewportData = function () {\r\n        var visibleBox = this.getCurrentViewport();\r\n        return this._linesLayout.getWhitespaceViewportData(visibleBox.top, visibleBox.top + visibleBox.height);\r\n    };\r\n    ViewLayout.prototype.getWhitespaces = function () {\r\n        return this._linesLayout.getWhitespaces();\r\n    };\r\n    // ---- IScrollingProvider\r\n    ViewLayout.prototype.getContentWidth = function () {\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        return scrollDimensions.contentWidth;\r\n    };\r\n    ViewLayout.prototype.getScrollWidth = function () {\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        return scrollDimensions.scrollWidth;\r\n    };\r\n    ViewLayout.prototype.getContentHeight = function () {\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        return scrollDimensions.contentHeight;\r\n    };\r\n    ViewLayout.prototype.getScrollHeight = function () {\r\n        var scrollDimensions = this._scrollable.getScrollDimensions();\r\n        return scrollDimensions.scrollHeight;\r\n    };\r\n    ViewLayout.prototype.getCurrentScrollLeft = function () {\r\n        var currentScrollPosition = this._scrollable.getCurrentScrollPosition();\r\n        return currentScrollPosition.scrollLeft;\r\n    };\r\n    ViewLayout.prototype.getCurrentScrollTop = function () {\r\n        var currentScrollPosition = this._scrollable.getCurrentScrollPosition();\r\n        return currentScrollPosition.scrollTop;\r\n    };\r\n    ViewLayout.prototype.validateScrollPosition = function (scrollPosition) {\r\n        return this._scrollable.validateScrollPosition(scrollPosition);\r\n    };\r\n    ViewLayout.prototype.setScrollPositionNow = function (position) {\r\n        this._scrollable.setScrollPositionNow(position);\r\n    };\r\n    ViewLayout.prototype.setScrollPositionSmooth = function (position) {\r\n        this._scrollable.setScrollPositionSmooth(position);\r\n    };\r\n    ViewLayout.prototype.deltaScrollNow = function (deltaScrollLeft, deltaScrollTop) {\r\n        var currentScrollPosition = this._scrollable.getCurrentScrollPosition();\r\n        this._scrollable.setScrollPositionNow({\r\n            scrollLeft: currentScrollPosition.scrollLeft + deltaScrollLeft,\r\n            scrollTop: currentScrollPosition.scrollTop + deltaScrollTop\r\n        });\r\n    };\r\n    return ViewLayout;\r\n}(Disposable));\r\nexport { ViewLayout };\r\n","/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\nimport { Range } from '../core/range.js';\r\n/**\r\n * Contains all data needed to render at a specific viewport.\r\n */\r\nvar ViewportData = /** @class */ (function () {\r\n    function ViewportData(selections, partialData, whitespaceViewportData, model) {\r\n        this.selections = selections;\r\n        this.startLineNumber = partialData.startLineNumber | 0;\r\n        this.endLineNumber = partialData.endLineNumber | 0;\r\n        this.relativeVerticalOffset = partialData.relativeVerticalOffset;\r\n        this.bigNumbersDelta = partialData.bigNumbersDelta | 0;\r\n        this.whitespaceViewportData = whitespaceViewportData;\r\n        this._model = model;\r\n        this.visibleRange = new Range(partialData.startLineNumber, this._model.getLineMinColumn(partialData.startLineNumber), partialData.endLineNumber, this._model.getLineMaxColumn(partialData.endLineNumber));\r\n    }\r\n    ViewportData.prototype.getViewLineRenderingData = function (lineNumber) {\r\n        return this._model.getViewLineRenderingData(this.visibleRange, lineNumber);\r\n    };\r\n    ViewportData.prototype.getDecorationsInViewport = function () {\r\n        return this._model.getDecorationsInViewport(this.visibleRange);\r\n    };\r\n    return ViewportData;\r\n}());\r\nexport { ViewportData };\r\n"],"sourceRoot":""}